---
defaultChannel: release-alpha-rhel-8
icon:
  base64data: 
  mediatype: image/png
name: security-profiles-operator
schema: olm.package
---
entries:
  - name: security-profiles-operator.v0.8.2
    skipRange: '>=0.4.1 <0.8.2'
  - name: security-profiles-operator.v0.8.4
    replaces: security-profiles-operator.v0.8.2
    skipRange: '>=0.4.1 <0.8.4'
  - name: security-profiles-operator.v0.8.5
    replaces: security-profiles-operator.v0.8.4
    skipRange: '>=0.4.1 <0.8.5'
  - name: security-profiles-operator.v0.8.6
    replaces: security-profiles-operator.v0.8.5
    skipRange: '>=0.4.1 <0.8.6'
  - name: security-profiles-operator.v0.9.0
    replaces: security-profiles-operator.v0.8.6
    skipRange: '>=0.4.1 <0.9.0'
name: release-alpha-rhel-8
package: security-profiles-operator
schema: olm.channel
---
image: registry.redhat.io/compliance/openshift-security-profiles-operator-bundle@sha256:40771028def743730a779736ab7465113645edd9e1d45cb7e69eaaf95531584b
name: security-profiles-operator.v0.8.2
package: security-profiles-operator
properties:
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: AppArmorProfile
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: ProfileBinding
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: ProfileRecording
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: RawSelinuxProfile
      version: v1alpha2
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SeccompProfile
      version: v1beta1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SecurityProfileNodeStatus
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SecurityProfilesOperatorDaemon
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SelinuxProfile
      version: v1alpha2
  - type: olm.package
    value:
      packageName: security-profiles-operator
      version: 0.8.2
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic2VjdXJpdHlwcm9maWxlbm9kZXN0YXR1c2VzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTZWN1cml0eVByb2ZpbGVOb2RlU3RhdHVzIiwibGlzdEtpbmQiOiJTZWN1cml0eVByb2ZpbGVOb2RlU3RhdHVzTGlzdCIsInBsdXJhbCI6InNlY3VyaXR5cHJvZmlsZW5vZGVzdGF0dXNlcyIsInNob3J0TmFtZXMiOlsic3BucyJdLCJzaW5ndWxhciI6InNlY3VyaXR5cHJvZmlsZW5vZGVzdGF0dXMifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn0seyJqc29uUGF0aCI6Ii5ub2RlTmFtZSIsIm5hbWUiOiJOb2RlIiwicHJpb3JpdHkiOjEwLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiU2VjdXJpdHlQcm9maWxlTm9kZVN0YXR1cyBpcyBhIHBlci1ub2RlIHN0YXR1cyBvZiBhIHNlY3VyaXR5IHByb2ZpbGUiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwibm9kZU5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJzcGVjIjp7InR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUHJvZmlsZVN0YXRlIGRlZmluZXMgdGhlIHN0YXRlIHRoYXQgdGhlIHByb2ZpbGUgaXMgaW4uIEEgcHJvZmlsZSBpbiB0aGlzIGNvbnRleHQgcmVmZXJzIHRvIGEgU2VjY29tcFByb2ZpbGUgb3IgYSBTRUxpbnV4IHByb2ZpbGUsIHRoZSBzdGF0ZXMgYXJlIHNoYXJlZCBiZXR3ZWVuIHRoZW0gYXMgd2VsbCBhcyB0aGUgbWFuYWdlbWVudCBBUEkuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibm9kZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnt9fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic2VsaW51eHByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTZWxpbnV4UHJvZmlsZSIsImxpc3RLaW5kIjoiU2VsaW51eFByb2ZpbGVMaXN0IiwicGx1cmFsIjoic2VsaW51eHByb2ZpbGVzIiwic2luZ3VsYXIiOiJzZWxpbnV4cHJvZmlsZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMudXNhZ2UiLCJuYW1lIjoiVXNhZ2UiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdHVzIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGEyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBzZWxpbnV4cHJvZmlsZXMgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiU2VsaW51eFByb2ZpbGVTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgU2VsaW51eFByb2ZpbGUuIiwicHJvcGVydGllcyI6eyJhbGxvdyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiRGVmaW5lcyB0aGUgYWxsb3cgcG9saWN5IGZvciB0aGUgcHJvZmlsZSIsInR5cGUiOiJvYmplY3QifSwiZGlzYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hldGhlciB0aGUgcHJvZmlsZSBpcyBkaXNhYmxlZCBhbmQgc2hvdWxkIGJlIHNraXBwZWQgZHVyaW5nIHJlY29uY2lsaWF0aW9uLiIsInR5cGUiOiJib29sZWFuIn0sImluaGVyaXQiOnsiZGVmYXVsdCI6W3sia2luZCI6IlN5c3RlbSIsIm5hbWUiOiJjb250YWluZXIifV0sImRlc2NyaXB0aW9uIjoiQSBTRUxpbnV4UHJvZmlsZSBvciBzZXQgb2YgcHJvZmlsZXMgdGhhdCB0aGlzIGluaGVyaXRzIGZyb20uIE5vdGUgdGhhdCB0aGV5IG5lZWQgdG8gYmUgaW4gdGhlIHNhbWUgbmFtZXNwYWNlLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsia2luZCI6eyJkZWZhdWx0IjoiU3lzdGVtIiwiZGVzY3JpcHRpb24iOiJUaGUgS2luZCBvZiB0aGUgcG9saWN5IHRoYXQgdGhpcyBpbmhlcml0cyBmcm9tLiBDYW4gYmUgYSBTZWxpbnV4UHJvZmlsZSBvYmplY3QgT3IgXCJTeXN0ZW1cIiBpZiBhbiBhbHJlYWR5IGluc3RhbGxlZCBwb2xpY3kgd2lsbCBiZSB1c2VkLiBUaGUgYWxsb3dlZCBcIlN5c3RlbVwiIHBvbGljaWVzIGFyZSBhdmFpbGFibGUgaW4gdGhlIFNlY3VyaXR5UHJvZmlsZXNPcGVyYXRvckRhZW1vbiBpbnN0YW5jZS4iLCJlbnVtIjpbIlN5c3RlbSIsIlNlbGludXhQcm9maWxlIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBwb2xpY3kgdGhhdCB0aGlzIGluaGVyaXRzIGZyb20uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJwZXJtaXNzaXZlIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlBlcm1pc3NpdmUsIHdoZW4gdHJ1ZSB3aWxsIGNhdXNlIHRoZSBTRUxpbnV4IHByb2ZpbGUgdG8gb25seSBsb2cgdmlvbGF0aW9ucyBpbnN0ZWFkIG9mIGVuZm9yY2luZyB0aGVtLiIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFNlbGludXhQcm9maWxlLiIsInByb3BlcnRpZXMiOnsiYWN0aXZlV29ya2xvYWRzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIG9mIHRoZSByZXNvdXJjZS4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgQ29uZGl0aW9uIHRoYXQgbWF5IGFwcGx5IHRvIGEgcmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGlzIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiQSBNZXNzYWdlIGNvbnRhaW5pbmcgZGV0YWlscyBhYm91dCB0aGlzIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbiBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlciwgaWYgYW55LiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiQSBSZWFzb24gZm9yIHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIG9mIHRoaXMgY29uZGl0aW9uOyBpcyBpdCBjdXJyZW50bHkgVHJ1ZSwgRmFsc2UsIG9yIFVua25vd24/IiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBvZiB0aGlzIGNvbmRpdGlvbi4gQXQgbW9zdCBvbmUgb2YgZWFjaCBjb25kaXRpb24gdHlwZSBtYXkgYXBwbHkgdG8gYSByZXNvdXJjZSBhdCBhbnkgcG9pbnQgaW4gdGltZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVTdGF0ZSBkZWZpbmVzIHRoZSBzdGF0ZSB0aGF0IHRoZSBwcm9maWxlIGlzIGluLiBBIHByb2ZpbGUgaW4gdGhpcyBjb250ZXh0IHJlZmVycyB0byBhIFNlY2NvbXBQcm9maWxlIG9yIGEgU0VMaW51eCBwcm9maWxlLCB0aGUgc3RhdGVzIGFyZSBzaGFyZWQgYmV0d2VlbiB0aGVtIGFzIHdlbGwgYXMgdGhlIG1hbmFnZW1lbnQgQVBJLiIsInR5cGUiOiJzdHJpbmcifSwidXNhZ2UiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIHRoZSBzdHJpbmcgdGhhdCB0aGUgU2VsaW51eFByb2ZpbGUgb2JqZWN0IGNhbiBiZSByZWZlcmVuY2VkIGFzIGluIGEgcG9kIHNlTGludXhPcHRpb25zIHNlY3Rpb24uIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicHJvZmlsZWJpbmRpbmdzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJQcm9maWxlQmluZGluZyIsImxpc3RLaW5kIjoiUHJvZmlsZUJpbmRpbmdMaXN0IiwicGx1cmFsIjoicHJvZmlsZWJpbmRpbmdzIiwic2luZ3VsYXIiOiJwcm9maWxlYmluZGluZyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVCaW5kaW5nIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBwcm9maWxlYmluZGluZ3MgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUHJvZmlsZUJpbmRpbmdTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUHJvZmlsZUJpbmRpbmcuIiwicHJvcGVydGllcyI6eyJpbWFnZSI6eyJkZXNjcmlwdGlvbiI6IkltYWdlIG5hbWUgd2l0aGluIHBvZCBjb250YWluZXJzIHRvIG1hdGNoIHRvIHRoZSBwcm9maWxlLiIsInR5cGUiOiJzdHJpbmcifSwicHJvZmlsZVJlZiI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVSZWYgcmVmZXJlbmNlcyBhIFNlY2NvbXBQcm9maWxlIG9yIG90aGVyIHByb2ZpbGUgdHlwZSBpbiB0aGUgY3VycmVudCBuYW1lc3BhY2UuIiwicHJvcGVydGllcyI6eyJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBvZiBvYmplY3QgdG8gYmUgYm91bmQuIiwiZW51bSI6WyJTZWNjb21wUHJvZmlsZSIsIlNlbGludXhQcm9maWxlIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHByb2ZpbGUgd2l0aGluIHRoZSBjdXJyZW50IG5hbWVzcGFjZSB0byB3aGljaCB0byBiaW5kIHRoZSBzZWxlY3RlZCBwb2RzLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImltYWdlIiwicHJvZmlsZVJlZiJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVCaW5kaW5nU3RhdHVzIGNvbnRhaW5zIHN0YXR1cyBvZiB0aGUgUHJvZmlsZWJpbmRpbmcuIiwicHJvcGVydGllcyI6eyJhY3RpdmVXb3JrbG9hZHMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicHJvZmlsZXJlY29yZGluZ3Muc2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8ifSwic3BlYyI6eyJncm91cCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIiwibmFtZXMiOnsia2luZCI6IlByb2ZpbGVSZWNvcmRpbmciLCJsaXN0S2luZCI6IlByb2ZpbGVSZWNvcmRpbmdMaXN0IiwicGx1cmFsIjoicHJvZmlsZXJlY29yZGluZ3MiLCJzaW5ndWxhciI6InByb2ZpbGVyZWNvcmRpbmcifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5wb2RTZWxlY3RvciIsIm5hbWUiOiJQb2RTZWxlY3RvciIsInByaW9yaXR5IjoxMCwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVSZWNvcmRpbmcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHByb2ZpbGVyZWNvcmRpbmdzIEFQSS4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVSZWNvcmRpbmdTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUHJvZmlsZVJlY29yZGluZy4iLCJwcm9wZXJ0aWVzIjp7ImNvbnRhaW5lcnMiOnsiZGVzY3JpcHRpb24iOiJDb250YWluZXJzIGlzIGEgc2V0IG9mIGNvbnRhaW5lcnMgdG8gcmVjb3JkLiBUaGlzIGFsbG93cyB0byBzZWxlY3Qgb25seSBzcGVjaWZpYyBjb250YWluZXJzIHRvIHJlY29yZCBpbnN0ZWFkIG9mIGFsbCBjb250YWluZXJzIHByZXNlbnQgaW4gdGhlIHBvZC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJkaXNhYmxlUHJvZmlsZUFmdGVyUmVjb3JkaW5nIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkRpc2FibGVQcm9maWxlQWZ0ZXJSZWNvcmRpbmcgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIHByb2ZpbGUgc2hvdWxkIGJlIGRpc2FibGVkIGFmdGVyIHJlY29yZGluZyBhbmQgdGh1cyBza2lwcGVkIGR1cmluZyByZWNvbmNpbGUuIEluIGNhc2Ugb2YgU0VMaW51eCBwcm9maWxlcywgcmVjb25jaWxlIGNhbiB0YWtlIGEgc2lnbmlmaWNhbnQgYW1vdW50IG9mIHRpbWUgYW5kIGZvciBhbGwgcHJvZmlsZXMgbWlnaHQgbm90IGJlIG5lZWRlZC4gVGhpcyBEZWZhdWx0cyB0byBmYWxzZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBvZiBvYmplY3QgdG8gYmUgcmVjb3JkZWQuIiwiZW51bSI6WyJTZWNjb21wUHJvZmlsZSIsIlNlbGludXhQcm9maWxlIl0sInR5cGUiOiJzdHJpbmcifSwibWVyZ2VTdHJhdGVneSI6eyJkZWZhdWx0Ijoibm9uZSIsImRlc2NyaXB0aW9uIjoiV2hldGhlciBvciBob3cgdG8gbWVyZ2UgcmVjb3JkZWQgcHJvZmlsZXMuIENhbiBiZSBvbmUgb2YgXCJub25lXCIgb3IgXCJjb250YWluZXJzXCIuIERlZmF1bHQgaXMgXCJub25lXCIuIiwiZW51bSI6WyJub25lIiwiY29udGFpbmVycyJdLCJ0eXBlIjoic3RyaW5nIn0sInBvZFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiUG9kU2VsZWN0b3Igc2VsZWN0cyB0aGUgcG9kcyB0byByZWNvcmQuIFRoaXMgZmllbGQgZm9sbG93cyBzdGFuZGFyZCBsYWJlbCBzZWxlY3RvciBzZW1hbnRpY3MuIEFuIGVtcHR5IHBvZFNlbGVjdG9yIG1hdGNoZXMgYWxsIHBvZHMgaW4gdGhpcyBuYW1lc3BhY2UuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVscyBtYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGUgb3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJyZWNvcmRlciI6eyJkZXNjcmlwdGlvbiI6IlJlY29yZGVyIHRvIGJlIHVzZWQuIiwiZW51bSI6WyJicGYiLCJsb2dzIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJwb2RTZWxlY3RvciIsInJlY29yZGVyIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUHJvZmlsZVJlY29yZGluZ1N0YXR1cyBjb250YWlucyBzdGF0dXMgb2YgdGhlIFByb2ZpbGVSZWNvcmRpbmcuIiwicHJvcGVydGllcyI6eyJhY3RpdmVXb3JrbG9hZHMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicmF3c2VsaW51eHByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJSYXdTZWxpbnV4UHJvZmlsZSIsImxpc3RLaW5kIjoiUmF3U2VsaW51eFByb2ZpbGVMaXN0IiwicGx1cmFsIjoicmF3c2VsaW51eHByb2ZpbGVzIiwic2luZ3VsYXIiOiJyYXdzZWxpbnV4cHJvZmlsZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMudXNhZ2UiLCJuYW1lIjoiVXNhZ2UiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdHVzIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGEyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlJhd1NlbGludXhQcm9maWxlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSByYXdzZWxpbnV4cHJvZmlsZXMgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUmF3U2VsaW51eFByb2ZpbGVTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUmF3U2VsaW51eFByb2ZpbGUuIiwicHJvcGVydGllcyI6eyJkaXNhYmxlZCI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJXaGV0aGVyIHRoZSBwcm9maWxlIGlzIGRpc2FibGVkIGFuZCBzaG91bGQgYmUgc2tpcHBlZCBkdXJpbmcgcmVjb25jaWxpYXRpb24uIiwidHlwZSI6ImJvb2xlYW4ifSwicG9saWN5Ijp7InR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU2VsaW51eFByb2ZpbGVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgU2VsaW51eFByb2ZpbGUuIiwicHJvcGVydGllcyI6eyJhY3RpdmVXb3JrbG9hZHMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgb2YgdGhlIHJlc291cmNlLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBDb25kaXRpb24gdGhhdCBtYXkgYXBwbHkgdG8gYSByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7Imxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RUcmFuc2l0aW9uVGltZSBpcyB0aGUgbGFzdCB0aW1lIHRoaXMgY29uZGl0aW9uIHRyYW5zaXRpb25lZCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJBIE1lc3NhZ2UgY29udGFpbmluZyBkZXRhaWxzIGFib3V0IHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLCBpZiBhbnkuIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJBIFJlYXNvbiBmb3IgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgb2YgdGhpcyBjb25kaXRpb247IGlzIGl0IGN1cnJlbnRseSBUcnVlLCBGYWxzZSwgb3IgVW5rbm93bj8iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoaXMgY29uZGl0aW9uLiBBdCBtb3N0IG9uZSBvZiBlYWNoIGNvbmRpdGlvbiB0eXBlIG1heSBhcHBseSB0byBhIHJlc291cmNlIGF0IGFueSBwb2ludCBpbiB0aW1lLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsInJlYXNvbiIsInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUHJvZmlsZVN0YXRlIGRlZmluZXMgdGhlIHN0YXRlIHRoYXQgdGhlIHByb2ZpbGUgaXMgaW4uIEEgcHJvZmlsZSBpbiB0aGlzIGNvbnRleHQgcmVmZXJzIHRvIGEgU2VjY29tcFByb2ZpbGUgb3IgYSBTRUxpbnV4IHByb2ZpbGUsIHRoZSBzdGF0ZXMgYXJlIHNoYXJlZCBiZXR3ZWVuIHRoZW0gYXMgd2VsbCBhcyB0aGUgbWFuYWdlbWVudCBBUEkuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2FnZSI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgdGhlIHN0cmluZyB0aGF0IHRoZSBTZWxpbnV4UHJvZmlsZSBvYmplY3QgY2FuIGJlIHJlZmVyZW5jZWQgYXMgaW4gYSBwb2Qgc2VMaW51eE9wdGlvbnMgc2VjdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJhcHBhcm1vcnByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJBcHBBcm1vclByb2ZpbGUiLCJsaXN0S2luZCI6IkFwcEFybW9yUHJvZmlsZUxpc3QiLCJwbHVyYWwiOiJhcHBhcm1vcnByb2ZpbGVzIiwic2hvcnROYW1lcyI6WyJhYSJdLCJzaW5ndWxhciI6ImFwcGFybW9ycHJvZmlsZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkFwcEFybW9yUHJvZmlsZSBpcyB0aGUgU2NoZW1hIGZvciB0aGUgYXBwYXJtb3Jwcm9maWxlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkFwcEFybW9yUHJvZmlsZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBBcHBBcm1vclByb2ZpbGUiLCJwcm9wZXJ0aWVzIjp7InBvbGljeSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJwb2xpY3kiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJBcHBBcm1vclByb2ZpbGVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQXBwQXJtb3JQcm9maWxlIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwb2QifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRoZW50aWNhdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInN1YmplY3RhY2Nlc3NyZXZpZXdzIiwidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibm9kZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbImFwcGFybW9ycHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbImFwcGFybW9ycHJvZmlsZXMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJkZWxldGUiLCJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyJdLCJyZXNvdXJjZXMiOlsiYXBwYXJtb3Jwcm9maWxlcy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGVyZWNvcmRpbmdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJyYXdzZWxpbnV4cHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInJhd3NlbGludXhwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJyYXdzZWxpbnV4cHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWNjb21wcHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY2NvbXBwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWNjb21wcHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWN1cml0eXByb2ZpbGVub2Rlc3RhdHVzZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY3VyaXR5cHJvZmlsZXNvcGVyYXRvcmRhZW1vbnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWxpbnV4cHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlbGludXhwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWxpbnV4cHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby13ZWJob29rIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJldmVudHMiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGViaW5kaW5ncyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyJdLCJyZXNvdXJjZXMiOlsicHJvZmlsZWJpbmRpbmdzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsiZGVsZXRlIiwiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGViaW5kaW5ncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGVyZWNvcmRpbmdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJwcm9maWxlcmVjb3JkaW5ncy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJwcm9maWxlcmVjb3JkaW5ncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY2NvbXBwcm9maWxlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlbGludXhwcm9maWxlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby1tZXRyaWNzLWNsaWVudCJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9tZXRyaWNzIiwiL21ldHJpY3Mtc3BvZCJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJwb2RzIiwic2VydmljZXMiLCJlbmRwb2ludHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8tbWV0cmljcy1jbGllbnQifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJuYW1lIjoic3BvLW1ldHJpY3MtY2xpZW50In0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoiZGVmYXVsdCIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1zZWN1cml0eS1wcm9maWxlcyJ9LHsia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8td2ViaG9vayJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm5hbWUiOiJzcG8td2ViaG9vayJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InNwby13ZWJob29rIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LXNlY3VyaXR5LXByb2ZpbGVzIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG9kIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibmFtZSI6InNwb2QifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJzcG9kIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LXNlY3VyaXR5LXByb2ZpbGVzIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic3BvLXdlYmhvb2sifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJjb29yZGluYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJsZWFzZXMiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbImNvb3JkaW5hdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VOYW1lcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci13ZWJob29rLWxvY2siXSwicmVzb3VyY2VzIjpbImxlYXNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInNlY3VyaXR5Y29udGV4dGNvbnN0cmFpbnRzIl0sInZlcmJzIjpbInVzZSJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic3BvZCJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbInNlY3VyaXR5Lm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsic2VjdXJpdHljb250ZXh0Y29uc3RyYWludHMiXSwidmVyYnMiOlsidXNlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwb2QifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiUm9sZSIsIm5hbWUiOiJzcG9kIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoic3BvZCIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1zZWN1cml0eS1wcm9maWxlcyJ9XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby13ZWJob29rIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IlJvbGUiLCJuYW1lIjoic3BvLXdlYmhvb2sifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJzcG8td2ViaG9vayJ9XX0=
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VjcmV0IiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsia3ViZXJuZXRlcy5pby9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRlZmF1bHQifSwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJtZXRyaWNzLXRva2VuIn0sInR5cGUiOiJrdWJlcm5ldGVzLmlvL3NlcnZpY2UtYWNjb3VudC10b2tlbiJ9
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8td2ViaG9vayJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG9kIn19
relatedImages:
  - image: registry.redhat.io/compliance/openshift-security-profiles-operator-bundle@sha256:40771028def743730a779736ab7465113645edd9e1d45cb7e69eaaf95531584b
    name: ""
  - image: registry.redhat.io/compliance/openshift-security-profiles-rhel8-operator@sha256:85103123c0834339117b4efc4998bb06b75683f7251169deee5ccba96030ae0b
    name: security-profiles-operator
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel8@sha256:7b1fe4f45b6de19e17fbc5b88e9633df09e60bf833e5b1e13274b3b0491b42a1
    name: selinuxd
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel8@sha256:7b1fe4f45b6de19e17fbc5b88e9633df09e60bf833e5b1e13274b3b0491b42a1
    name: selinuxd_el8
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel9@sha256:07386b0e0416b1c053e10d6a02479fbdd35ca97cc583a919ed53daacd029915d
    name: selinuxd_el9
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f11f71448986aa17abec9caadb568a6cc34ef1a7898e6dc20bc6a512830ba476
    name: rbac_proxy
schema: olm.bundle
---
image: registry.redhat.io/compliance/openshift-security-profiles-operator-bundle@sha256:40771028def743730a779736ab7465113645edd9e1d45cb7e69eaaf95531584b
name: security-profiles-operator.v0.8.4
package: security-profiles-operator
properties:
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: AppArmorProfile
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: ProfileBinding
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: ProfileRecording
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: RawSelinuxProfile
      version: v1alpha2
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SeccompProfile
      version: v1beta1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SecurityProfileNodeStatus
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SecurityProfilesOperatorDaemon
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SelinuxProfile
      version: v1alpha2
  - type: olm.package
    value:
      packageName: security-profiles-operator
      version: 0.8.4
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic2VjdXJpdHlwcm9maWxlbm9kZXN0YXR1c2VzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTZWN1cml0eVByb2ZpbGVOb2RlU3RhdHVzIiwibGlzdEtpbmQiOiJTZWN1cml0eVByb2ZpbGVOb2RlU3RhdHVzTGlzdCIsInBsdXJhbCI6InNlY3VyaXR5cHJvZmlsZW5vZGVzdGF0dXNlcyIsInNob3J0TmFtZXMiOlsic3BucyJdLCJzaW5ndWxhciI6InNlY3VyaXR5cHJvZmlsZW5vZGVzdGF0dXMifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn0seyJqc29uUGF0aCI6Ii5ub2RlTmFtZSIsIm5hbWUiOiJOb2RlIiwicHJpb3JpdHkiOjEwLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiU2VjdXJpdHlQcm9maWxlTm9kZVN0YXR1cyBpcyBhIHBlci1ub2RlIHN0YXR1cyBvZiBhIHNlY3VyaXR5IHByb2ZpbGUiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sIm5vZGVOYW1lIjp7InR5cGUiOiJzdHJpbmcifSwic3BlYyI6eyJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVTdGF0ZSBkZWZpbmVzIHRoZSBzdGF0ZSB0aGF0IHRoZSBwcm9maWxlIGlzIGluLiBBIHByb2ZpbGUgaW4gdGhpcyBjb250ZXh0XG5yZWZlcnMgdG8gYSBTZWNjb21wUHJvZmlsZSBvciBhIFNFTGludXggcHJvZmlsZSwgdGhlIHN0YXRlcyBhcmUgc2hhcmVkIGJldHdlZW4gdGhlbVxuYXMgd2VsbCBhcyB0aGUgbWFuYWdlbWVudCBBUEkuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibm9kZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnt9fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic2VjdXJpdHlwcm9maWxlc29wZXJhdG9yZGFlbW9ucy5zZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iLCJuYW1lcyI6eyJraW5kIjoiU2VjdXJpdHlQcm9maWxlc09wZXJhdG9yRGFlbW9uIiwibGlzdEtpbmQiOiJTZWN1cml0eVByb2ZpbGVzT3BlcmF0b3JEYWVtb25MaXN0IiwicGx1cmFsIjoic2VjdXJpdHlwcm9maWxlc29wZXJhdG9yZGFlbW9ucyIsInNob3J0TmFtZXMiOlsic3BvZCJdLCJzaW5ndWxhciI6InNlY3VyaXR5cHJvZmlsZXNvcGVyYXRvcmRhZW1vbiJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdGUiLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiU2VjdXJpdHlQcm9maWxlc09wZXJhdG9yRGFlbW9uIGlzIHRoZSBTY2hlbWEgdG8gY29uZmlndXJlIHRoZSBzcG9kIGRlcGxveW1lbnQuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiU1BPRFN0YXR1cyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFNQT0QuIiwicHJvcGVydGllcyI6eyJhZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IkFmZmluaXR5IGlmIHNwZWNpZmllZCwgdGhlIFNQT0QncyBhZmZpbml0eS4iLCJwcm9wZXJ0aWVzIjp7Im5vZGVBZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IkRlc2NyaWJlcyBub2RlIGFmZmluaXR5IHNjaGVkdWxpbmcgcnVsZXMgZm9yIHRoZSBwb2QuIiwicHJvcGVydGllcyI6eyJwcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzY2hlZHVsZXIgd2lsbCBwcmVmZXIgdG8gc2NoZWR1bGUgcG9kcyB0byBub2RlcyB0aGF0IHNhdGlzZnlcbnRoZSBhZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2VcbmEgbm9kZSB0aGF0IHZpb2xhdGVzIG9uZSBvciBtb3JlIG9mIHRoZSBleHByZXNzaW9ucy4gVGhlIG5vZGUgdGhhdCBpc1xubW9zdCBwcmVmZXJyZWQgaXMgdGhlIG9uZSB3aXRoIHRoZSBncmVhdGVzdCBzdW0gb2Ygd2VpZ2h0cywgaS5lLlxuZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlXG5yZXF1ZXN0LCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmcgYWZmaW5pdHkgZXhwcmVzc2lvbnMsIGV0Yy4pLFxuY29tcHV0ZSBhIHN1bSBieSBpdGVyYXRpbmcgdGhyb3VnaCB0aGUgZWxlbWVudHMgb2YgdGhpcyBmaWVsZCBhbmQgYWRkaW5nXG5cIndlaWdodFwiIHRvIHRoZSBzdW0gaWYgdGhlIG5vZGUgbWF0Y2hlcyB0aGUgY29ycmVzcG9uZGluZyBtYXRjaEV4cHJlc3Npb25zOyB0aGVcbm5vZGUocykgd2l0aCB0aGUgaGlnaGVzdCBzdW0gYXJlIHRoZSBtb3N0IHByZWZlcnJlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGVtcHR5IHByZWZlcnJlZCBzY2hlZHVsaW5nIHRlcm0gbWF0Y2hlcyBhbGwgb2JqZWN0cyB3aXRoIGltcGxpY2l0IHdlaWdodCAwXG4oaS5lLiBpdCdzIGEgbm8tb3ApLiBBIG51bGwgcHJlZmVycmVkIHNjaGVkdWxpbmcgdGVybSBtYXRjaGVzIG5vIG9iamVjdHMgKGkuZS4gaXMgYWxzbyBhIG5vLW9wKS4iLCJwcm9wZXJ0aWVzIjp7InByZWZlcmVuY2UiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGxhYmVscy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yXG50aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXNcbmFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuXG5UaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hGaWVsZHMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGZpZWxkcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yXG50aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXNcbmFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuXG5UaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwid2VpZ2h0Ijp7ImRlc2NyaXB0aW9uIjoiV2VpZ2h0IGFzc29jaWF0ZWQgd2l0aCBtYXRjaGluZyB0aGUgY29ycmVzcG9uZGluZyBub2RlU2VsZWN0b3JUZXJtLCBpbiB0aGUgcmFuZ2UgMS0xMDAuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsicHJlZmVyZW5jZSIsIndlaWdodCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBhcmUgbm90IG1ldCBhdFxuc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLlxuSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBjZWFzZSB0byBiZSBtZXRcbmF0IHNvbWUgcG9pbnQgZHVyaW5nIHBvZCBleGVjdXRpb24gKGUuZy4gZHVlIHRvIGFuIHVwZGF0ZSksIHRoZSBzeXN0ZW1cbm1heSBvciBtYXkgbm90IHRyeSB0byBldmVudHVhbGx5IGV2aWN0IHRoZSBwb2QgZnJvbSBpdHMgbm9kZS4iLCJwcm9wZXJ0aWVzIjp7Im5vZGVTZWxlY3RvclRlcm1zIjp7ImRlc2NyaXB0aW9uIjoiUmVxdWlyZWQuIEEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHRlcm1zLiBUaGUgdGVybXMgYXJlIE9SZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG51bGwgb3IgZW1wdHkgbm9kZSBzZWxlY3RvciB0ZXJtIG1hdGNoZXMgbm8gb2JqZWN0cy4gVGhlIHJlcXVpcmVtZW50cyBvZlxudGhlbSBhcmUgQU5EZWQuXG5UaGUgVG9wb2xvZ3lTZWxlY3RvclRlcm0gdHlwZSBpbXBsZW1lbnRzIGEgc3Vic2V0IG9mIHRoZSBOb2RlU2VsZWN0b3JUZXJtLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50cyBieSBub2RlJ3MgbGFiZWxzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3JcbnRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cywgRG9lc05vdEV4aXN0LiBHdCwgYW5kIEx0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoiQW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlc1xuYXJyYXkgbXVzdCBoYXZlIGEgc2luZ2xlIGVsZW1lbnQsIHdoaWNoIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gaW50ZWdlci5cblRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaEZpZWxkcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50cyBieSBub2RlJ3MgZmllbGRzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3JcbnRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cywgRG9lc05vdEV4aXN0LiBHdCwgYW5kIEx0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoiQW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlc1xuYXJyYXkgbXVzdCBoYXZlIGEgc2luZ2xlIGVsZW1lbnQsIHdoaWNoIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gaW50ZWdlci5cblRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbIm5vZGVTZWxlY3RvclRlcm1zIl0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifX0sInR5cGUiOiJvYmplY3QifSwicG9kQWZmaW5pdHkiOnsiZGVzY3JpcHRpb24iOiJEZXNjcmliZXMgcG9kIGFmZmluaXR5IHNjaGVkdWxpbmcgcnVsZXMgKGUuZy4gY28tbG9jYXRlIHRoaXMgcG9kIGluIHRoZSBzYW1lIG5vZGUsIHpvbmUsIGV0Yy4gYXMgc29tZSBvdGhlciBwb2QocykpLiIsInByb3BlcnRpZXMiOnsicHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NoZWR1bGVyIHdpbGwgcHJlZmVyIHRvIHNjaGVkdWxlIHBvZHMgdG8gbm9kZXMgdGhhdCBzYXRpc2Z5XG50aGUgYWZmaW5pdHkgZXhwcmVzc2lvbnMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQsIGJ1dCBpdCBtYXkgY2hvb3NlXG5hIG5vZGUgdGhhdCB2aW9sYXRlcyBvbmUgb3IgbW9yZSBvZiB0aGUgZXhwcmVzc2lvbnMuIFRoZSBub2RlIHRoYXQgaXNcbm1vc3QgcHJlZmVycmVkIGlzIHRoZSBvbmUgd2l0aCB0aGUgZ3JlYXRlc3Qgc3VtIG9mIHdlaWdodHMsIGkuZS5cbmZvciBlYWNoIG5vZGUgdGhhdCBtZWV0cyBhbGwgb2YgdGhlIHNjaGVkdWxpbmcgcmVxdWlyZW1lbnRzIChyZXNvdXJjZVxucmVxdWVzdCwgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nIGFmZmluaXR5IGV4cHJlc3Npb25zLCBldGMuKSxcbmNvbXB1dGUgYSBzdW0gYnkgaXRlcmF0aW5nIHRocm91Z2ggdGhlIGVsZW1lbnRzIG9mIHRoaXMgZmllbGQgYW5kIGFkZGluZ1xuXCJ3ZWlnaHRcIiB0byB0aGUgc3VtIGlmIHRoZSBub2RlIGhhcyBwb2RzIHdoaWNoIG1hdGNoZXMgdGhlIGNvcnJlc3BvbmRpbmcgcG9kQWZmaW5pdHlUZXJtOyB0aGVcbm5vZGUocykgd2l0aCB0aGUgaGlnaGVzdCBzdW0gYXJlIHRoZSBtb3N0IHByZWZlcnJlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSB3ZWlnaHRzIG9mIGFsbCBvZiB0aGUgbWF0Y2hlZCBXZWlnaHRlZFBvZEFmZmluaXR5VGVybSBmaWVsZHMgYXJlIGFkZGVkIHBlci1ub2RlIHRvIGZpbmQgdGhlIG1vc3QgcHJlZmVycmVkIG5vZGUocykiLCJwcm9wZXJ0aWVzIjp7InBvZEFmZmluaXR5VGVybSI6eyJkZXNjcmlwdGlvbiI6IlJlcXVpcmVkLiBBIHBvZCBhZmZpbml0eSB0ZXJtLCBhc3NvY2lhdGVkIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgd2VpZ2h0LiIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciBhIHNldCBvZiByZXNvdXJjZXMsIGluIHRoaXMgY2FzZSBwb2RzLlxuSWYgaXQncyBudWxsLCB0aGlzIFBvZEFmZmluaXR5VGVybSBtYXRjaGVzIHdpdGggbm8gUG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYExhYmVsU2VsZWN0b3JgIGFzIGBrZXkgaW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBNYXRjaExhYmVsS2V5cyBhbmQgTGFiZWxTZWxlY3Rvci5cbkFsc28sIE1hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBMYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYW4gYWxwaGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1pc21hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWlzbWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgTGFiZWxTZWxlY3RvcmAgYXMgYGtleSBub3RpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIE1pc21hdGNoTGFiZWxLZXlzIGFuZCBMYWJlbFNlbGVjdG9yLlxuQWxzbywgTWlzbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIExhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhbiBhbHBoYSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgdGhlIHNldCBvZiBuYW1lc3BhY2VzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIHNlbGVjdGVkIGJ5IHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBsaXN0ZWQgaW4gdGhlIG5hbWVzcGFjZXMgZmllbGQuXG5udWxsIHNlbGVjdG9yIGFuZCBudWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuXG5BbiBlbXB0eSBzZWxlY3RvciAoe30pIG1hdGNoZXMgYWxsIG5hbWVzcGFjZXMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIGxpc3RlZCBpbiB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgc2VsZWN0ZWQgYnkgbmFtZXNwYWNlU2VsZWN0b3IuXG5udWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidG9wb2xvZ3lLZXkiOnsiZGVzY3JpcHRpb24iOiJUaGlzIHBvZCBzaG91bGQgYmUgY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoIHRoZSBwb2RzIG1hdGNoaW5nXG50aGUgbGFiZWxTZWxlY3RvciBpbiB0aGUgc3BlY2lmaWVkIG5hbWVzcGFjZXMsIHdoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZVxud2hvc2UgdmFsdWUgb2YgdGhlIGxhYmVsIHdpdGgga2V5IHRvcG9sb2d5S2V5IG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaCBhbnkgb2YgdGhlXG5zZWxlY3RlZCBwb2RzIGlzIHJ1bm5pbmcuXG5FbXB0eSB0b3BvbG9neUtleSBpcyBub3QgYWxsb3dlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0b3BvbG9neUtleSJdLCJ0eXBlIjoib2JqZWN0In0sIndlaWdodCI6eyJkZXNjcmlwdGlvbiI6IndlaWdodCBhc3NvY2lhdGVkIHdpdGggbWF0Y2hpbmcgdGhlIGNvcnJlc3BvbmRpbmcgcG9kQWZmaW5pdHlUZXJtLFxuaW4gdGhlIHJhbmdlIDEtMTAwLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInBvZEFmZmluaXR5VGVybSIsIndlaWdodCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBhcmUgbm90IG1ldCBhdFxuc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLlxuSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBjZWFzZSB0byBiZSBtZXRcbmF0IHNvbWUgcG9pbnQgZHVyaW5nIHBvZCBleGVjdXRpb24gKGUuZy4gZHVlIHRvIGEgcG9kIGxhYmVsIHVwZGF0ZSksIHRoZVxuc3lzdGVtIG1heSBvciBtYXkgbm90IHRyeSB0byBldmVudHVhbGx5IGV2aWN0IHRoZSBwb2QgZnJvbSBpdHMgbm9kZS5cbldoZW4gdGhlcmUgYXJlIG11bHRpcGxlIGVsZW1lbnRzLCB0aGUgbGlzdHMgb2Ygbm9kZXMgY29ycmVzcG9uZGluZyB0byBlYWNoXG5wb2RBZmZpbml0eVRlcm0gYXJlIGludGVyc2VjdGVkLCBpLmUuIGFsbCB0ZXJtcyBtdXN0IGJlIHNhdGlzZmllZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgYSBzZXQgb2YgcG9kcyAobmFtZWx5IHRob3NlIG1hdGNoaW5nIHRoZSBsYWJlbFNlbGVjdG9yXG5yZWxhdGl2ZSB0byB0aGUgZ2l2ZW4gbmFtZXNwYWNlKHMpKSB0aGF0IHRoaXMgcG9kIHNob3VsZCBiZVxuY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoLFxud2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlIHdob3NlIHZhbHVlIG9mXG50aGUgbGFiZWwgd2l0aCBrZXkgXHUwMDNjdG9wb2xvZ3lLZXlcdTAwM2UgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoXG5hIHBvZCBvZiB0aGUgc2V0IG9mIHBvZHMgaXMgcnVubmluZyIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciBhIHNldCBvZiByZXNvdXJjZXMsIGluIHRoaXMgY2FzZSBwb2RzLlxuSWYgaXQncyBudWxsLCB0aGlzIFBvZEFmZmluaXR5VGVybSBtYXRjaGVzIHdpdGggbm8gUG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYExhYmVsU2VsZWN0b3JgIGFzIGBrZXkgaW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBNYXRjaExhYmVsS2V5cyBhbmQgTGFiZWxTZWxlY3Rvci5cbkFsc28sIE1hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBMYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYW4gYWxwaGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1pc21hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWlzbWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgTGFiZWxTZWxlY3RvcmAgYXMgYGtleSBub3RpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIE1pc21hdGNoTGFiZWxLZXlzIGFuZCBMYWJlbFNlbGVjdG9yLlxuQWxzbywgTWlzbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIExhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhbiBhbHBoYSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgdGhlIHNldCBvZiBuYW1lc3BhY2VzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIHNlbGVjdGVkIGJ5IHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBsaXN0ZWQgaW4gdGhlIG5hbWVzcGFjZXMgZmllbGQuXG5udWxsIHNlbGVjdG9yIGFuZCBudWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuXG5BbiBlbXB0eSBzZWxlY3RvciAoe30pIG1hdGNoZXMgYWxsIG5hbWVzcGFjZXMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIGxpc3RlZCBpbiB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgc2VsZWN0ZWQgYnkgbmFtZXNwYWNlU2VsZWN0b3IuXG5udWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidG9wb2xvZ3lLZXkiOnsiZGVzY3JpcHRpb24iOiJUaGlzIHBvZCBzaG91bGQgYmUgY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoIHRoZSBwb2RzIG1hdGNoaW5nXG50aGUgbGFiZWxTZWxlY3RvciBpbiB0aGUgc3BlY2lmaWVkIG5hbWVzcGFjZXMsIHdoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZVxud2hvc2UgdmFsdWUgb2YgdGhlIGxhYmVsIHdpdGgga2V5IHRvcG9sb2d5S2V5IG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaCBhbnkgb2YgdGhlXG5zZWxlY3RlZCBwb2RzIGlzIHJ1bm5pbmcuXG5FbXB0eSB0b3BvbG9neUtleSBpcyBub3QgYWxsb3dlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0b3BvbG9neUtleSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RBbnRpQWZmaW5pdHkiOnsiZGVzY3JpcHRpb24iOiJEZXNjcmliZXMgcG9kIGFudGktYWZmaW5pdHkgc2NoZWR1bGluZyBydWxlcyAoZS5nLiBhdm9pZCBwdXR0aW5nIHRoaXMgcG9kIGluIHRoZSBzYW1lIG5vZGUsIHpvbmUsIGV0Yy4gYXMgc29tZSBvdGhlciBwb2QocykpLiIsInByb3BlcnRpZXMiOnsicHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NoZWR1bGVyIHdpbGwgcHJlZmVyIHRvIHNjaGVkdWxlIHBvZHMgdG8gbm9kZXMgdGhhdCBzYXRpc2Z5XG50aGUgYW50aS1hZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2VcbmEgbm9kZSB0aGF0IHZpb2xhdGVzIG9uZSBvciBtb3JlIG9mIHRoZSBleHByZXNzaW9ucy4gVGhlIG5vZGUgdGhhdCBpc1xubW9zdCBwcmVmZXJyZWQgaXMgdGhlIG9uZSB3aXRoIHRoZSBncmVhdGVzdCBzdW0gb2Ygd2VpZ2h0cywgaS5lLlxuZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlXG5yZXF1ZXN0LCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmcgYW50aS1hZmZpbml0eSBleHByZXNzaW9ucywgZXRjLiksXG5jb21wdXRlIGEgc3VtIGJ5IGl0ZXJhdGluZyB0aHJvdWdoIHRoZSBlbGVtZW50cyBvZiB0aGlzIGZpZWxkIGFuZCBhZGRpbmdcblwid2VpZ2h0XCIgdG8gdGhlIHN1bSBpZiB0aGUgbm9kZSBoYXMgcG9kcyB3aGljaCBtYXRjaGVzIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybTsgdGhlXG5ub2RlKHMpIHdpdGggdGhlIGhpZ2hlc3Qgc3VtIGFyZSB0aGUgbW9zdCBwcmVmZXJyZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgd2VpZ2h0cyBvZiBhbGwgb2YgdGhlIG1hdGNoZWQgV2VpZ2h0ZWRQb2RBZmZpbml0eVRlcm0gZmllbGRzIGFyZSBhZGRlZCBwZXItbm9kZSB0byBmaW5kIHRoZSBtb3N0IHByZWZlcnJlZCBub2RlKHMpIiwicHJvcGVydGllcyI6eyJwb2RBZmZpbml0eVRlcm0iOnsiZGVzY3JpcHRpb24iOiJSZXF1aXJlZC4gQSBwb2QgYWZmaW5pdHkgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy5cbklmIGl0J3MgbnVsbCwgdGhpcyBQb2RBZmZpbml0eVRlcm0gbWF0Y2hlcyB3aXRoIG5vIFBvZHMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBMYWJlbFNlbGVjdG9yYCBhcyBga2V5IGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggTWF0Y2hMYWJlbEtleXMgYW5kIExhYmVsU2VsZWN0b3IuXG5BbHNvLCBNYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gTGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGFuIGFscGhhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtaXNtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1pc21hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYExhYmVsU2VsZWN0b3JgIGFzIGBrZXkgbm90aW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBNaXNtYXRjaExhYmVsS2V5cyBhbmQgTGFiZWxTZWxlY3Rvci5cbkFsc28sIE1pc21hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBMYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYW4gYWxwaGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZVNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIHRoZSBzZXQgb2YgbmFtZXNwYWNlcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgbGlzdGVkIGluIHRoZSBuYW1lc3BhY2VzIGZpZWxkLlxubnVsbCBzZWxlY3RvciBhbmQgbnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLlxuQW4gZW1wdHkgc2VsZWN0b3IgKHt9KSBtYXRjaGVzIGFsbCBuYW1lc3BhY2VzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZXMiOnsiZGVzY3JpcHRpb24iOiJuYW1lc3BhY2VzIHNwZWNpZmllcyBhIHN0YXRpYyBsaXN0IG9mIG5hbWVzcGFjZSBuYW1lcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBsaXN0ZWQgaW4gdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIHNlbGVjdGVkIGJ5IG5hbWVzcGFjZVNlbGVjdG9yLlxubnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgYW5kIG51bGwgbmFtZXNwYWNlU2VsZWN0b3IgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInRvcG9sb2d5S2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhpcyBwb2Qgc2hvdWxkIGJlIGNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCB0aGUgcG9kcyBtYXRjaGluZ1xudGhlIGxhYmVsU2VsZWN0b3IgaW4gdGhlIHNwZWNpZmllZCBuYW1lc3BhY2VzLCB3aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGVcbndob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSB0b3BvbG9neUtleSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYW55IG9mIHRoZVxuc2VsZWN0ZWQgcG9kcyBpcyBydW5uaW5nLlxuRW1wdHkgdG9wb2xvZ3lLZXkgaXMgbm90IGFsbG93ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidG9wb2xvZ3lLZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJ3ZWlnaHQiOnsiZGVzY3JpcHRpb24iOiJ3ZWlnaHQgYXNzb2NpYXRlZCB3aXRoIG1hdGNoaW5nIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybSxcbmluIHRoZSByYW5nZSAxLTEwMC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJwb2RBZmZpbml0eVRlcm0iLCJ3ZWlnaHQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwicmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IklmIHRoZSBhbnRpLWFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBhcmUgbm90IG1ldCBhdFxuc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLlxuSWYgdGhlIGFudGktYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGNlYXNlIHRvIGJlIG1ldFxuYXQgc29tZSBwb2ludCBkdXJpbmcgcG9kIGV4ZWN1dGlvbiAoZS5nLiBkdWUgdG8gYSBwb2QgbGFiZWwgdXBkYXRlKSwgdGhlXG5zeXN0ZW0gbWF5IG9yIG1heSBub3QgdHJ5IHRvIGV2ZW50dWFsbHkgZXZpY3QgdGhlIHBvZCBmcm9tIGl0cyBub2RlLlxuV2hlbiB0aGVyZSBhcmUgbXVsdGlwbGUgZWxlbWVudHMsIHRoZSBsaXN0cyBvZiBub2RlcyBjb3JyZXNwb25kaW5nIHRvIGVhY2hcbnBvZEFmZmluaXR5VGVybSBhcmUgaW50ZXJzZWN0ZWQsIGkuZS4gYWxsIHRlcm1zIG11c3QgYmUgc2F0aXNmaWVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyBhIHNldCBvZiBwb2RzIChuYW1lbHkgdGhvc2UgbWF0Y2hpbmcgdGhlIGxhYmVsU2VsZWN0b3JcbnJlbGF0aXZlIHRvIHRoZSBnaXZlbiBuYW1lc3BhY2UocykpIHRoYXQgdGhpcyBwb2Qgc2hvdWxkIGJlXG5jby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGgsXG53aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGUgd2hvc2UgdmFsdWUgb2ZcbnRoZSBsYWJlbCB3aXRoIGtleSBcdTAwM2N0b3BvbG9neUtleVx1MDAzZSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2hcbmEgcG9kIG9mIHRoZSBzZXQgb2YgcG9kcyBpcyBydW5uaW5nIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIGEgc2V0IG9mIHJlc291cmNlcywgaW4gdGhpcyBjYXNlIHBvZHMuXG5JZiBpdCdzIG51bGwsIHRoaXMgUG9kQWZmaW5pdHlUZXJtIG1hdGNoZXMgd2l0aCBubyBQb2RzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgTGFiZWxTZWxlY3RvcmAgYXMgYGtleSBpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIE1hdGNoTGFiZWxLZXlzIGFuZCBMYWJlbFNlbGVjdG9yLlxuQWxzbywgTWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIExhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhbiBhbHBoYSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWlzbWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNaXNtYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBMYWJlbFNlbGVjdG9yYCBhcyBga2V5IG5vdGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggTWlzbWF0Y2hMYWJlbEtleXMgYW5kIExhYmVsU2VsZWN0b3IuXG5BbHNvLCBNaXNtYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gTGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGFuIGFscGhhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciB0aGUgc2V0IG9mIG5hbWVzcGFjZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgc2VsZWN0ZWQgYnkgdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIGxpc3RlZCBpbiB0aGUgbmFtZXNwYWNlcyBmaWVsZC5cbm51bGwgc2VsZWN0b3IgYW5kIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi5cbkFuIGVtcHR5IHNlbGVjdG9yICh7fSkgbWF0Y2hlcyBhbGwgbmFtZXNwYWNlcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlcyBzcGVjaWZpZXMgYSBzdGF0aWMgbGlzdCBvZiBuYW1lc3BhY2UgbmFtZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgbGlzdGVkIGluIHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBzZWxlY3RlZCBieSBuYW1lc3BhY2VTZWxlY3Rvci5cbm51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IGFuZCBudWxsIG5hbWVzcGFjZVNlbGVjdG9yIG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmdcbnRoZSBsYWJlbFNlbGVjdG9yIGluIHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlcywgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlXG53aG9zZSB2YWx1ZSBvZiB0aGUgbGFiZWwgd2l0aCBrZXkgdG9wb2xvZ3lLZXkgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoIGFueSBvZiB0aGVcbnNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy5cbkVtcHR5IHRvcG9sb2d5S2V5IGlzIG5vdCBhbGxvd2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInRvcG9sb2d5S2V5Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImFsbG93ZWRTZWNjb21wQWN0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkFsbG93ZWRTZWNjb21wQWN0aW9ucyBpZiBzcGVjaWZpZWQsIGEgbGlzdCBvZiBhbGxvd2VkIHNlY2NvbXAgYWN0aW9ucy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkFjdGlvbiB0YWtlbiB1cG9uIFNlY2NvbXAgcnVsZSBtYXRjaCIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImFsbG93ZWRTeXNjYWxscyI6eyJkZXNjcmlwdGlvbiI6IkFsbG93ZWRTeXNjYWxscyBpZiBzcGVjaWZpZWQsIGEgbGlzdCBvZiBzeXN0ZW0gY2FsbHMgd2hpY2ggYXJlIGFsbG93ZWRcbmluIHNlY2NvbXAgcHJvZmlsZXMuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiZGFlbW9uUmVzb3VyY2VSZXF1aXJlbWVudHMiOnsiZGVzY3JpcHRpb24iOiJEYWVtb25SZXNvdXJjZVJlcXVpcmVtZW50cyBpZiBkZWZpbmVkLCBvdmVyd3JpdGVzIHRoZSBkZWZhdWx0IHJlc291cmNlIHJlcXVpcmVtZW50c1xub2YgU1BPRCBkYWVtb24uIiwicHJvcGVydGllcyI6eyJjbGFpbXMiOnsiZGVzY3JpcHRpb24iOiJDbGFpbXMgbGlzdHMgdGhlIG5hbWVzIG9mIHJlc291cmNlcywgZGVmaW5lZCBpbiBzcGVjLnJlc291cmNlQ2xhaW1zLFxudGhhdCBhcmUgdXNlZCBieSB0aGlzIGNvbnRhaW5lci5cblxuXG5UaGlzIGlzIGFuIGFscGhhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyB0aGVcbkR5bmFtaWNSZXNvdXJjZUFsbG9jYXRpb24gZmVhdHVyZSBnYXRlLlxuXG5cblRoaXMgZmllbGQgaXMgaW1tdXRhYmxlLiBJdCBjYW4gb25seSBiZSBzZXQgZm9yIGNvbnRhaW5lcnMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZUNsYWltIHJlZmVyZW5jZXMgb25lIGVudHJ5IGluIFBvZFNwZWMuUmVzb3VyY2VDbGFpbXMuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBtdXN0IG1hdGNoIHRoZSBuYW1lIG9mIG9uZSBlbnRyeSBpbiBwb2Quc3BlYy5yZXNvdXJjZUNsYWltcyBvZlxudGhlIFBvZCB3aGVyZSB0aGlzIGZpZWxkIGlzIHVzZWQuIEl0IG1ha2VzIHRoYXQgcmVzb3VyY2UgYXZhaWxhYmxlXG5pbnNpZGUgYSBjb250YWluZXIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LW1hcC1rZXlzIjpbIm5hbWUiXSwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6Im1hcCJ9LCJsaW1pdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiTGltaXRzIGRlc2NyaWJlcyB0aGUgbWF4aW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgYWxsb3dlZC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLlxuSWYgUmVxdWVzdHMgaXMgb21pdHRlZCBmb3IgYSBjb250YWluZXIsIGl0IGRlZmF1bHRzIHRvIExpbWl0cyBpZiB0aGF0IGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkLFxub3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIFJlcXVlc3RzIGNhbm5vdCBleGNlZWQgTGltaXRzLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImRpc2FibGVPY2lBcnRpZmFjdFNpZ25hdHVyZVZlcmlmaWNhdGlvbiI6eyJkZXNjcmlwdGlvbiI6IkRpc2FibGVPQ0lBcnRpZmFjdFNpZ25hdHVyZVZlcmlmaWNhdGlvbiBjYW4gYmUgdXNlZCB0byBkaXNhYmxlIE9DSVxuYXJ0aWZhY3Qgc2lnbmF0dXJlIHZlcmlmaWNhdGlvbi4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJlbmFibGVBcHBBcm1vciI6eyJkZXNjcmlwdGlvbiI6InRlbGxzIHRoZSBvcGVyYXRvciB3aGV0aGVyIG9yIG5vdCB0byBlbmFibGUgQXBwQXJtb3Igc3VwcG9ydCBmb3IgdGhpc1xuU1BPRCBpbnN0YW5jZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJlbmFibGVCcGZSZWNvcmRlciI6eyJkZXNjcmlwdGlvbiI6InRlbGxzIHRoZSBvcGVyYXRvciB3aGV0aGVyIG9yIG5vdCB0byBlbmFibGUgYnBmIHJlY29yZGVyIHN1cHBvcnQgZm9yIHRoaXNcblNQT0QgaW5zdGFuY2UuIiwidHlwZSI6ImJvb2xlYW4ifSwiZW5hYmxlTG9nRW5yaWNoZXIiOnsiZGVzY3JpcHRpb24iOiJ0ZWxscyB0aGUgb3BlcmF0b3Igd2hldGhlciBvciBub3QgdG8gZW5hYmxlIGxvZyBlbnJpY2htZW50IHN1cHBvcnQgZm9yIHRoaXNcblNQT0QgaW5zdGFuY2UuIiwidHlwZSI6ImJvb2xlYW4ifSwiZW5hYmxlTWVtb3J5T3B0aW1pemF0aW9uIjp7ImRlc2NyaXB0aW9uIjoiRW5hYmxlTWVtb3J5T3B0aW1pemF0aW9uIGVuYWJsZXMgbWVtb3J5IG9wdGltaXphdGlvbiBpbiB0aGUgY29udHJvbGxlclxucnVubmluZyBpbnNpZGUgb2YgU1BPRCBpbnN0YW5jZSBhbmQgd2F0Y2hpbmcgZm9yIHBvZHMgaW4gdGhlIGNsdXN0ZXIuXG5UaGlzIHdpbGwgbWFrZSB0aGUgY29udHJvbGxlciBsb2FkaW5nIGluIHRoZSBjYWNoZSBtZW1vcnkgb25seSB0aGUgcG9kc1xubGFiZWxsZWQgZXhwbGljaXRseSBmb3IgcHJvZmlsZSByZWNvcmRpbmcgd2l0aCAnc3BvLngtazhzLmlvL2VuYWJsZS1yZWNvcmRpbmc9dHJ1ZScuIiwidHlwZSI6ImJvb2xlYW4ifSwiZW5hYmxlUHJvZmlsaW5nIjp7ImRlc2NyaXB0aW9uIjoiRW5hYmxlUHJvZmlsaW5nIHRlbGxzIHRoZSBvcGVyYXRvciB3aGV0aGVyIG9yIG5vdCB0byBlbmFibGUgcHJvZmlsaW5nXG5zdXBwb3J0IGZvciB0aGlzIFNQT0QgaW5zdGFuY2UuIiwidHlwZSI6ImJvb2xlYW4ifSwiZW5hYmxlU2VsaW51eCI6eyJkZXNjcmlwdGlvbiI6InRlbGxzIHRoZSBvcGVyYXRvciB3aGV0aGVyIG9yIG5vdCB0byBlbmFibGUgU0VMaW51eCBzdXBwb3J0IGZvciB0aGlzXG5TUE9EIGluc3RhbmNlLiIsInR5cGUiOiJib29sZWFuIn0sImhvc3RQcm9jVm9sdW1lUGF0aCI6eyJkZXNjcmlwdGlvbiI6Ikhvc3RQcm9jVm9sdW1lUGF0aCBpcyB0aGUgcGF0aCBmb3Igc3BlY2lmeWluZyBhIGN1c3RvbSBob3N0IC9wcm9jXG52b2x1bWUsIHdoaWNoIGlzIHJlcXVpcmVkIGZvciB0aGUgbG9nLWVucmljaGVyIGFzIHdlbGwgYXMgYnBmLXJlY29yZGVyXG50byByZXRyaWV2ZSB0aGUgY29udGFpbmVyIElEIGZvciBhIHByb2Nlc3MgSUQuIFRoaXMgY2FuIGJlIGhlbHBmdWwgZm9yXG5uZXN0ZWQgZW52aXJvbm1lbnRzLCBmb3IgZXhhbXBsZSB3aGVuIHVzaW5nIFwia2luZFwiLiIsInR5cGUiOiJzdHJpbmcifSwiaW1hZ2VQdWxsU2VjcmV0cyI6eyJkZXNjcmlwdGlvbiI6IkltYWdlUHVsbFNlY3JldHMgaWYgZGVmaW5lZCwgbGlzdCBvZiByZWZlcmVuY2VzIHRvIHNlY3JldHMgaW4gdGhlIHNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yJ3Ncbm5hbWVzcGFjZSB0byB1c2UgZm9yIHB1bGxpbmcgdGhlIGltYWdlcyBmcm9tIFNQT0QgcG9kIGZyb20gYSBwcml2YXRlIHJlZ2lzdHJ5LiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTG9jYWxPYmplY3RSZWZlcmVuY2UgY29udGFpbnMgZW5vdWdoIGluZm9ybWF0aW9uIHRvIGxldCB5b3UgbG9jYXRlIHRoZVxucmVmZXJlbmNlZCBvYmplY3QgaW5zaWRlIHRoZSBzYW1lIG5hbWVzcGFjZS4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzXG5UT0RPOiBBZGQgb3RoZXIgdXNlZnVsIGZpZWxkcy4gYXBpVmVyc2lvbiwga2luZCwgdWlkPyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwidHlwZSI6ImFycmF5In0sInByaW9yaXR5Q2xhc3NOYW1lIjp7ImRlZmF1bHQiOiJzeXN0ZW0tbm9kZS1jcml0aWNhbCIsImRlc2NyaXB0aW9uIjoiUHJpb3JpdHlDbGFzc05hbWUgaWYgZGVmaW5lZCwgaW5kaWNhdGVzIHRoZSBzcG9kIHBvZCBwcmlvcml0eSBjbGFzcy4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGludXhPcHRpb25zIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyBvcHRpb25zIHNwZWNpZmljIHRvIHRoZSBTRUxpbnV4XG5mdW5jdGlvbmFsaXR5IG9mIHRoZSBTZWN1cml0eVByb2ZpbGVzT3BlcmF0b3IiLCJwcm9wZXJ0aWVzIjp7ImFsbG93ZWRTeXN0ZW1Qcm9maWxlcyI6eyJkZWZhdWx0IjpbImNvbnRhaW5lciJdLCJkZXNjcmlwdGlvbiI6Ikxpc3RzIHRoZSBwcm9maWxlcyBjb21pbmcgZnJvbSB0aGUgc3lzdGVtIGl0c2VsZiB0aGF0IGFyZVxuYWxsb3dlZCB0byBiZSBpbmhlcml0ZWQgYnkgd29ya2xvYWRzLiBVc2UgdGhpcyB3aXRoIGNhcmUsXG5hcyB0aGlzIG1pZ2h0IHByb3ZpZGUgYSBsb3Qgb2YgcGVybWlzc2lvbnMgZGVwZW5kaW5nIG9uIHRoZVxucG9saWN5LiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sInNlbGludXhUeXBlVGFnIjp7ImRlZmF1bHQiOiJzcGNfdCIsImRlc2NyaXB0aW9uIjoiSWYgc3BlY2lmaWVkLCB0aGUgU0VMaW51eCB0eXBlIHRhZyBhcHBsaWVkIHRvIHRoZSBzZWN1cml0eSBjb250ZXh0IG9mIFNQT0QuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0aWNXZWJob29rQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljV2ViaG9va0NvbmZpZyBpbmRpY2F0ZXMgd2hldGhlciB0aGUgd2ViaG9vayBjb25maWd1cmF0aW9uIGFuZCBpdHNcbnJlbGF0ZWQgcmVzb3VyY2VzIGFyZSBzdGF0aWNhbGx5IGRlcGxveWVkLiBJbiB0aGlzIGNhc2UsIHRoZSBvcGVyYXRvciB3aWxsXG5ub3QgY3JlYXRlIG9yIHVwZGF0ZSB0aGUgd2ViaG9vayBjb25maWd1cmF0aW9uIGFuZCBpdHMgcmVsYXRlZCByZXNvdXJjZXMuIiwidHlwZSI6ImJvb2xlYW4ifSwidG9sZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJJZiBzcGVjaWZpZWQsIHRoZSBTUE9EJ3MgdG9sZXJhdGlvbnMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgcG9kIHRoaXMgVG9sZXJhdGlvbiBpcyBhdHRhY2hlZCB0byB0b2xlcmF0ZXMgYW55IHRhaW50IHRoYXQgbWF0Y2hlc1xudGhlIHRyaXBsZSBcdTAwM2NrZXksdmFsdWUsZWZmZWN0XHUwMDNlIHVzaW5nIHRoZSBtYXRjaGluZyBvcGVyYXRvciBcdTAwM2NvcGVyYXRvclx1MDAzZS4iLCJwcm9wZXJ0aWVzIjp7ImVmZmVjdCI6eyJkZXNjcmlwdGlvbiI6IkVmZmVjdCBpbmRpY2F0ZXMgdGhlIHRhaW50IGVmZmVjdCB0byBtYXRjaC4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGVmZmVjdHMuXG5XaGVuIHNwZWNpZmllZCwgYWxsb3dlZCB2YWx1ZXMgYXJlIE5vU2NoZWR1bGUsIFByZWZlck5vU2NoZWR1bGUgYW5kIE5vRXhlY3V0ZS4iLCJ0eXBlIjoic3RyaW5nIn0sImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSBpcyB0aGUgdGFpbnQga2V5IHRoYXQgdGhlIHRvbGVyYXRpb24gYXBwbGllcyB0by4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGtleXMuXG5JZiB0aGUga2V5IGlzIGVtcHR5LCBvcGVyYXRvciBtdXN0IGJlIEV4aXN0czsgdGhpcyBjb21iaW5hdGlvbiBtZWFucyB0byBtYXRjaCBhbGwgdmFsdWVzIGFuZCBhbGwga2V5cy4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiT3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byB0aGUgdmFsdWUuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEV4aXN0cyBhbmQgRXF1YWwuIERlZmF1bHRzIHRvIEVxdWFsLlxuRXhpc3RzIGlzIGVxdWl2YWxlbnQgdG8gd2lsZGNhcmQgZm9yIHZhbHVlLCBzbyB0aGF0IGEgcG9kIGNhblxudG9sZXJhdGUgYWxsIHRhaW50cyBvZiBhIHBhcnRpY3VsYXIgY2F0ZWdvcnkuIiwidHlwZSI6InN0cmluZyJ9LCJ0b2xlcmF0aW9uU2Vjb25kcyI6eyJkZXNjcmlwdGlvbiI6IlRvbGVyYXRpb25TZWNvbmRzIHJlcHJlc2VudHMgdGhlIHBlcmlvZCBvZiB0aW1lIHRoZSB0b2xlcmF0aW9uICh3aGljaCBtdXN0IGJlXG5vZiBlZmZlY3QgTm9FeGVjdXRlLCBvdGhlcndpc2UgdGhpcyBmaWVsZCBpcyBpZ25vcmVkKSB0b2xlcmF0ZXMgdGhlIHRhaW50LiBCeSBkZWZhdWx0LFxuaXQgaXMgbm90IHNldCwgd2hpY2ggbWVhbnMgdG9sZXJhdGUgdGhlIHRhaW50IGZvcmV2ZXIgKGRvIG5vdCBldmljdCkuIFplcm8gYW5kXG5uZWdhdGl2ZSB2YWx1ZXMgd2lsbCBiZSB0cmVhdGVkIGFzIDAgKGV2aWN0IGltbWVkaWF0ZWx5KSBieSB0aGUgc3lzdGVtLiIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJWYWx1ZSBpcyB0aGUgdGFpbnQgdmFsdWUgdGhlIHRvbGVyYXRpb24gbWF0Y2hlcyB0by5cbklmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMsIHRoZSB2YWx1ZSBzaG91bGQgYmUgZW1wdHksIG90aGVyd2lzZSBqdXN0IGEgcmVndWxhciBzdHJpbmcuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwidmVyYm9zaXR5Ijp7ImRlc2NyaXB0aW9uIjoiVmVyYm9zaXR5IHNwZWNpZmllcyB0aGUgbG9nZ2luZyB2ZXJib3NpdHkgb2YgdGhlIGRhZW1vbi4iLCJ0eXBlIjoiaW50ZWdlciJ9LCJ3ZWJob29rT3B0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IldlYmhvb2tPcHRzIHNldCBjdXN0b20gbmFtZXNwYWNlIHNlbGVjdG9ycyBhbmQgZmFpbHVyZSBtb2RlIGZvclxuU1BPJ3Mgd2ViaG9va3MiLCJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImZhaWx1cmVQb2xpY3kiOnsiZGVzY3JpcHRpb24iOiJGYWlsdXJlUG9saWN5IHNldHMgdGhlIHdlYmhvb2sgZmFpbHVyZSBwb2xpY3kiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIHNwZWNpZmllcyB3aGljaCB3ZWJob29rIGRvIHdlIGNvbmZpZ3VyZSIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2VTZWxlY3RvciBzZXRzIHdlYmhvb2sncyBuYW1lc3BhY2Ugc2VsZWN0b3IiLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJvYmplY3RTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6Ik9iamVjdFNlbGVjdG9yIHNldHMgd2ViaG9vaydzIG9iamVjdCBzZWxlY3RvciIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTUE9EU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFNQT0QuIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBvZiB0aGUgcmVzb3VyY2UuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIENvbmRpdGlvbiB0aGF0IG1heSBhcHBseSB0byBhIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhpcyBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lXG5zdGF0dXMgdG8gYW5vdGhlci4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJBIE1lc3NhZ2UgY29udGFpbmluZyBkZXRhaWxzIGFib3V0IHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb21cbm9uZSBzdGF0dXMgdG8gYW5vdGhlciwgaWYgYW55LiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiQSBSZWFzb24gZm9yIHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIG9mIHRoaXMgY29uZGl0aW9uOyBpcyBpdCBjdXJyZW50bHkgVHJ1ZSwgRmFsc2UsIG9yIFVua25vd24/IiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBvZiB0aGlzIGNvbmRpdGlvbi4gQXQgbW9zdCBvbmUgb2YgZWFjaCBjb25kaXRpb24gdHlwZSBtYXkgYXBwbHkgdG9cbmEgcmVzb3VyY2UgYXQgYW55IHBvaW50IGluIHRpbWUuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgdGhlIHN0YXRlIHRoYXQgdGhlIHBvbGljeSBpcyBpbi4gQ2FuIGJlOlxuUEVORElORywgSU4tUFJPR1JFU1MsIFJVTk5JTkcgb3IgRVJST1IiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic2VsaW51eHByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTZWxpbnV4UHJvZmlsZSIsImxpc3RLaW5kIjoiU2VsaW51eFByb2ZpbGVMaXN0IiwicGx1cmFsIjoic2VsaW51eHByb2ZpbGVzIiwic2luZ3VsYXIiOiJzZWxpbnV4cHJvZmlsZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMudXNhZ2UiLCJuYW1lIjoiVXNhZ2UiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdHVzIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGEyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBzZWxpbnV4cHJvZmlsZXMgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFNlbGludXhQcm9maWxlLiIsInByb3BlcnRpZXMiOnsiYWxsb3ciOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIGFsbG93IHBvbGljeSBmb3IgdGhlIHByb2ZpbGUiLCJ0eXBlIjoib2JqZWN0In0sImRpc2FibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZXRoZXIgdGhlIHByb2ZpbGUgaXMgZGlzYWJsZWQgYW5kIHNob3VsZCBiZSBza2lwcGVkIGR1cmluZyByZWNvbmNpbGlhdGlvbi4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJpbmhlcml0Ijp7ImRlZmF1bHQiOlt7ImtpbmQiOiJTeXN0ZW0iLCJuYW1lIjoiY29udGFpbmVyIn1dLCJkZXNjcmlwdGlvbiI6IkEgU0VMaW51eFByb2ZpbGUgb3Igc2V0IG9mIHByb2ZpbGVzIHRoYXQgdGhpcyBpbmhlcml0cyBmcm9tLlxuTm90ZSB0aGF0IHRoZXkgbmVlZCB0byBiZSBpbiB0aGUgc2FtZSBuYW1lc3BhY2UuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJTeXN0ZW0iLCJkZXNjcmlwdGlvbiI6IlRoZSBLaW5kIG9mIHRoZSBwb2xpY3kgdGhhdCB0aGlzIGluaGVyaXRzIGZyb20uXG5DYW4gYmUgYSBTZWxpbnV4UHJvZmlsZSBvYmplY3QgT3IgXCJTeXN0ZW1cIiBpZiBhbiBhbHJlYWR5XG5pbnN0YWxsZWQgcG9saWN5IHdpbGwgYmUgdXNlZC5cblRoZSBhbGxvd2VkIFwiU3lzdGVtXCIgcG9saWNpZXMgYXJlIGF2YWlsYWJsZSBpbiB0aGVcblNlY3VyaXR5UHJvZmlsZXNPcGVyYXRvckRhZW1vbiBpbnN0YW5jZS4iLCJlbnVtIjpbIlN5c3RlbSIsIlNlbGludXhQcm9maWxlIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBwb2xpY3kgdGhhdCB0aGlzIGluaGVyaXRzIGZyb20uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJwZXJtaXNzaXZlIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlBlcm1pc3NpdmUsIHdoZW4gdHJ1ZSB3aWxsIGNhdXNlIHRoZSBTRUxpbnV4IHByb2ZpbGUgdG8gb25seVxubG9nIHZpb2xhdGlvbnMgaW5zdGVhZCBvZiBlbmZvcmNpbmcgdGhlbS4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTZWxpbnV4UHJvZmlsZVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBTZWxpbnV4UHJvZmlsZS4iLCJwcm9wZXJ0aWVzIjp7ImFjdGl2ZVdvcmtsb2FkcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBvZiB0aGUgcmVzb3VyY2UuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIENvbmRpdGlvbiB0aGF0IG1heSBhcHBseSB0byBhIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhpcyBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lXG5zdGF0dXMgdG8gYW5vdGhlci4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJBIE1lc3NhZ2UgY29udGFpbmluZyBkZXRhaWxzIGFib3V0IHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb21cbm9uZSBzdGF0dXMgdG8gYW5vdGhlciwgaWYgYW55LiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiQSBSZWFzb24gZm9yIHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIG9mIHRoaXMgY29uZGl0aW9uOyBpcyBpdCBjdXJyZW50bHkgVHJ1ZSwgRmFsc2UsIG9yIFVua25vd24/IiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBvZiB0aGlzIGNvbmRpdGlvbi4gQXQgbW9zdCBvbmUgb2YgZWFjaCBjb25kaXRpb24gdHlwZSBtYXkgYXBwbHkgdG9cbmEgcmVzb3VyY2UgYXQgYW55IHBvaW50IGluIHRpbWUuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlU3RhdGUgZGVmaW5lcyB0aGUgc3RhdGUgdGhhdCB0aGUgcHJvZmlsZSBpcyBpbi4gQSBwcm9maWxlIGluIHRoaXMgY29udGV4dFxucmVmZXJzIHRvIGEgU2VjY29tcFByb2ZpbGUgb3IgYSBTRUxpbnV4IHByb2ZpbGUsIHRoZSBzdGF0ZXMgYXJlIHNoYXJlZCBiZXR3ZWVuIHRoZW1cbmFzIHdlbGwgYXMgdGhlIG1hbmFnZW1lbnQgQVBJLiIsInR5cGUiOiJzdHJpbmcifSwidXNhZ2UiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIHRoZSBzdHJpbmcgdGhhdCB0aGUgU2VsaW51eFByb2ZpbGUgb2JqZWN0IGNhbiBiZVxucmVmZXJlbmNlZCBhcyBpbiBhIHBvZCBzZUxpbnV4T3B0aW9ucyBzZWN0aW9uLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicHJvZmlsZWJpbmRpbmdzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJQcm9maWxlQmluZGluZyIsImxpc3RLaW5kIjoiUHJvZmlsZUJpbmRpbmdMaXN0IiwicGx1cmFsIjoicHJvZmlsZWJpbmRpbmdzIiwic2luZ3VsYXIiOiJwcm9maWxlYmluZGluZyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVCaW5kaW5nIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBwcm9maWxlYmluZGluZ3MgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVCaW5kaW5nU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFByb2ZpbGVCaW5kaW5nLiIsInByb3BlcnRpZXMiOnsiaW1hZ2UiOnsiZGVzY3JpcHRpb24iOiJJbWFnZSBuYW1lIHdpdGhpbiBwb2QgY29udGFpbmVycyB0byBtYXRjaCB0byB0aGUgcHJvZmlsZS5cblVzZSB0aGUgXCIqXCIgc3RyaW5nIHRvIGJpbmQgdGhlIHByb2ZpbGUgdG8gYWxsIHBvZHMuIiwidHlwZSI6InN0cmluZyJ9LCJwcm9maWxlUmVmIjp7ImRlc2NyaXB0aW9uIjoiUHJvZmlsZVJlZiByZWZlcmVuY2VzIGEgU2VjY29tcFByb2ZpbGUgb3Igb3RoZXIgcHJvZmlsZSB0eXBlIGluIHRoZSBjdXJyZW50IG5hbWVzcGFjZS4iLCJwcm9wZXJ0aWVzIjp7ImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIG9mIG9iamVjdCB0byBiZSBib3VuZC4iLCJlbnVtIjpbIlNlY2NvbXBQcm9maWxlIiwiU2VsaW51eFByb2ZpbGUiXSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcHJvZmlsZSB3aXRoaW4gdGhlIGN1cnJlbnQgbmFtZXNwYWNlIHRvIHdoaWNoIHRvIGJpbmQgdGhlIHNlbGVjdGVkIHBvZHMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiaW1hZ2UiLCJwcm9maWxlUmVmIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUHJvZmlsZUJpbmRpbmdTdGF0dXMgY29udGFpbnMgc3RhdHVzIG9mIHRoZSBQcm9maWxlYmluZGluZy4iLCJwcm9wZXJ0aWVzIjp7ImFjdGl2ZVdvcmtsb2FkcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicHJvZmlsZXJlY29yZGluZ3Muc2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8ifSwic3BlYyI6eyJncm91cCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIiwibmFtZXMiOnsia2luZCI6IlByb2ZpbGVSZWNvcmRpbmciLCJsaXN0S2luZCI6IlByb2ZpbGVSZWNvcmRpbmdMaXN0IiwicGx1cmFsIjoicHJvZmlsZXJlY29yZGluZ3MiLCJzaW5ndWxhciI6InByb2ZpbGVyZWNvcmRpbmcifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5wb2RTZWxlY3RvciIsIm5hbWUiOiJQb2RTZWxlY3RvciIsInByaW9yaXR5IjoxMCwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVSZWNvcmRpbmcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHByb2ZpbGVyZWNvcmRpbmdzIEFQSS4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlUmVjb3JkaW5nU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFByb2ZpbGVSZWNvcmRpbmcuIiwicHJvcGVydGllcyI6eyJjb250YWluZXJzIjp7ImRlc2NyaXB0aW9uIjoiQ29udGFpbmVycyBpcyBhIHNldCBvZiBjb250YWluZXJzIHRvIHJlY29yZC4gVGhpcyBhbGxvd3MgdG8gc2VsZWN0XG5vbmx5IHNwZWNpZmljIGNvbnRhaW5lcnMgdG8gcmVjb3JkIGluc3RlYWQgb2YgYWxsIGNvbnRhaW5lcnMgcHJlc2VudFxuaW4gdGhlIHBvZC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJkaXNhYmxlUHJvZmlsZUFmdGVyUmVjb3JkaW5nIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkRpc2FibGVQcm9maWxlQWZ0ZXJSZWNvcmRpbmcgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIHByb2ZpbGUgc2hvdWxkIGJlIGRpc2FibGVkXG5hZnRlciByZWNvcmRpbmcgYW5kIHRodXMgc2tpcHBlZCBkdXJpbmcgcmVjb25jaWxlLiBJbiBjYXNlIG9mIFNFTGludXggcHJvZmlsZXMsXG5yZWNvbmNpbGUgY2FuIHRha2UgYSBzaWduaWZpY2FudCBhbW91bnQgb2YgdGltZSBhbmQgZm9yIGFsbCBwcm9maWxlcyBtaWdodCBub3QgYmUgbmVlZGVkLlxuVGhpcyBEZWZhdWx0cyB0byBmYWxzZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBvZiBvYmplY3QgdG8gYmUgcmVjb3JkZWQuIiwiZW51bSI6WyJTZWNjb21wUHJvZmlsZSIsIlNlbGludXhQcm9maWxlIl0sInR5cGUiOiJzdHJpbmcifSwibWVyZ2VTdHJhdGVneSI6eyJkZWZhdWx0Ijoibm9uZSIsImRlc2NyaXB0aW9uIjoiV2hldGhlciBvciBob3cgdG8gbWVyZ2UgcmVjb3JkZWQgcHJvZmlsZXMuIENhbiBiZSBvbmUgb2YgXCJub25lXCIgb3IgXCJjb250YWluZXJzXCIuXG5EZWZhdWx0IGlzIFwibm9uZVwiLiIsImVudW0iOlsibm9uZSIsImNvbnRhaW5lcnMiXSwidHlwZSI6InN0cmluZyJ9LCJwb2RTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlBvZFNlbGVjdG9yIHNlbGVjdHMgdGhlIHBvZHMgdG8gcmVjb3JkLiBUaGlzIGZpZWxkIGZvbGxvd3Mgc3RhbmRhcmRcbmxhYmVsIHNlbGVjdG9yIHNlbWFudGljcy4gQW4gZW1wdHkgcG9kU2VsZWN0b3IgbWF0Y2hlcyBhbGwgcG9kcyBpbiB0aGlzXG5uYW1lc3BhY2UuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwicmVjb3JkZXIiOnsiZGVzY3JpcHRpb24iOiJSZWNvcmRlciB0byBiZSB1c2VkLiIsImVudW0iOlsiYnBmIiwibG9ncyJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJraW5kIiwicG9kU2VsZWN0b3IiLCJyZWNvcmRlciJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVSZWNvcmRpbmdTdGF0dXMgY29udGFpbnMgc3RhdHVzIG9mIHRoZSBQcm9maWxlUmVjb3JkaW5nLiIsInByb3BlcnRpZXMiOnsiYWN0aXZlV29ya2xvYWRzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicmF3c2VsaW51eHByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJSYXdTZWxpbnV4UHJvZmlsZSIsImxpc3RLaW5kIjoiUmF3U2VsaW51eFByb2ZpbGVMaXN0IiwicGx1cmFsIjoicmF3c2VsaW51eHByb2ZpbGVzIiwic2luZ3VsYXIiOiJyYXdzZWxpbnV4cHJvZmlsZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMudXNhZ2UiLCJuYW1lIjoiVXNhZ2UiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdHVzIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGEyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlJhd1NlbGludXhQcm9maWxlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSByYXdzZWxpbnV4cHJvZmlsZXMgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlJhd1NlbGludXhQcm9maWxlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFJhd1NlbGludXhQcm9maWxlLiIsInByb3BlcnRpZXMiOnsiZGlzYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hldGhlciB0aGUgcHJvZmlsZSBpcyBkaXNhYmxlZCBhbmQgc2hvdWxkIGJlIHNraXBwZWQgZHVyaW5nIHJlY29uY2lsaWF0aW9uLiIsInR5cGUiOiJib29sZWFuIn0sInBvbGljeSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFNlbGludXhQcm9maWxlLiIsInByb3BlcnRpZXMiOnsiYWN0aXZlV29ya2xvYWRzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIG9mIHRoZSByZXNvdXJjZS4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgQ29uZGl0aW9uIHRoYXQgbWF5IGFwcGx5IHRvIGEgcmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGlzIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmVcbnN0YXR1cyB0byBhbm90aGVyLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6IkEgTWVzc2FnZSBjb250YWluaW5nIGRldGFpbHMgYWJvdXQgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbVxub25lIHN0YXR1cyB0byBhbm90aGVyLCBpZiBhbnkuIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJBIFJlYXNvbiBmb3IgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgb2YgdGhpcyBjb25kaXRpb247IGlzIGl0IGN1cnJlbnRseSBUcnVlLCBGYWxzZSwgb3IgVW5rbm93bj8iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoaXMgY29uZGl0aW9uLiBBdCBtb3N0IG9uZSBvZiBlYWNoIGNvbmRpdGlvbiB0eXBlIG1heSBhcHBseSB0b1xuYSByZXNvdXJjZSBhdCBhbnkgcG9pbnQgaW4gdGltZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVTdGF0ZSBkZWZpbmVzIHRoZSBzdGF0ZSB0aGF0IHRoZSBwcm9maWxlIGlzIGluLiBBIHByb2ZpbGUgaW4gdGhpcyBjb250ZXh0XG5yZWZlcnMgdG8gYSBTZWNjb21wUHJvZmlsZSBvciBhIFNFTGludXggcHJvZmlsZSwgdGhlIHN0YXRlcyBhcmUgc2hhcmVkIGJldHdlZW4gdGhlbVxuYXMgd2VsbCBhcyB0aGUgbWFuYWdlbWVudCBBUEkuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2FnZSI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgdGhlIHN0cmluZyB0aGF0IHRoZSBTZWxpbnV4UHJvZmlsZSBvYmplY3QgY2FuIGJlXG5yZWZlcmVuY2VkIGFzIGluIGEgcG9kIHNlTGludXhPcHRpb25zIHNlY3Rpb24uIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJhcHBhcm1vcnByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJBcHBBcm1vclByb2ZpbGUiLCJsaXN0S2luZCI6IkFwcEFybW9yUHJvZmlsZUxpc3QiLCJwbHVyYWwiOiJhcHBhcm1vcnByb2ZpbGVzIiwic2hvcnROYW1lcyI6WyJhYSJdLCJzaW5ndWxhciI6ImFwcGFybW9ycHJvZmlsZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkFwcEFybW9yUHJvZmlsZSBpcyB0aGUgU2NoZW1hIGZvciB0aGUgYXBwYXJtb3Jwcm9maWxlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkFwcEFybW9yUHJvZmlsZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBBcHBBcm1vclByb2ZpbGUiLCJwcm9wZXJ0aWVzIjp7InBvbGljeSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJwb2xpY3kiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJBcHBBcm1vclByb2ZpbGVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQXBwQXJtb3JQcm9maWxlIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwb2QifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRoZW50aWNhdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInN1YmplY3RhY2Nlc3NyZXZpZXdzIiwidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibm9kZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbImFwcGFybW9ycHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbImFwcGFybW9ycHJvZmlsZXMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJkZWxldGUiLCJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyJdLCJyZXNvdXJjZXMiOlsiYXBwYXJtb3Jwcm9maWxlcy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGVyZWNvcmRpbmdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJyYXdzZWxpbnV4cHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInJhd3NlbGludXhwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJyYXdzZWxpbnV4cHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWNjb21wcHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY2NvbXBwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWNjb21wcHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWN1cml0eXByb2ZpbGVub2Rlc3RhdHVzZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY3VyaXR5cHJvZmlsZXNvcGVyYXRvcmRhZW1vbnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWxpbnV4cHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlbGludXhwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWxpbnV4cHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby13ZWJob29rIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJldmVudHMiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGViaW5kaW5ncyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyJdLCJyZXNvdXJjZXMiOlsicHJvZmlsZWJpbmRpbmdzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsiZGVsZXRlIiwiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGViaW5kaW5ncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGVyZWNvcmRpbmdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJwcm9maWxlcmVjb3JkaW5ncy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJwcm9maWxlcmVjb3JkaW5ncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY2NvbXBwcm9maWxlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlbGludXhwcm9maWxlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby1tZXRyaWNzLWNsaWVudCJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9tZXRyaWNzIiwiL21ldHJpY3Mtc3BvZCJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJwb2RzIiwic2VydmljZXMiLCJlbmRwb2ludHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8tbWV0cmljcy1jbGllbnQifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJuYW1lIjoic3BvLW1ldHJpY3MtY2xpZW50In0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoiZGVmYXVsdCIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1zZWN1cml0eS1wcm9maWxlcyJ9LHsia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8td2ViaG9vayJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm5hbWUiOiJzcG8td2ViaG9vayJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InNwby13ZWJob29rIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LXNlY3VyaXR5LXByb2ZpbGVzIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG9kIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibmFtZSI6InNwb2QifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJzcG9kIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LXNlY3VyaXR5LXByb2ZpbGVzIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic3BvLXdlYmhvb2sifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJjb29yZGluYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJsZWFzZXMiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbImNvb3JkaW5hdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VOYW1lcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci13ZWJob29rLWxvY2siXSwicmVzb3VyY2VzIjpbImxlYXNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInNlY3VyaXR5Y29udGV4dGNvbnN0cmFpbnRzIl0sInZlcmJzIjpbInVzZSJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic3BvZCJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbInNlY3VyaXR5Lm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsic2VjdXJpdHljb250ZXh0Y29uc3RyYWludHMiXSwidmVyYnMiOlsidXNlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwb2QifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiUm9sZSIsIm5hbWUiOiJzcG9kIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoic3BvZCIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1zZWN1cml0eS1wcm9maWxlcyJ9XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby13ZWJob29rIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IlJvbGUiLCJuYW1lIjoic3BvLXdlYmhvb2sifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJzcG8td2ViaG9vayJ9XX0=
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VjcmV0IiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsia3ViZXJuZXRlcy5pby9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRlZmF1bHQifSwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJtZXRyaWNzLXRva2VuIn0sInR5cGUiOiJrdWJlcm5ldGVzLmlvL3NlcnZpY2UtYWNjb3VudC10b2tlbiJ9
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8td2ViaG9vayJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG9kIn19
relatedImages:
  - image: registry.redhat.io/compliance/openshift-security-profiles-operator-bundle@sha256:40771028def743730a779736ab7465113645edd9e1d45cb7e69eaaf95531584b
    name: ""
  - image: registry.redhat.io/compliance/openshift-security-profiles-rhel8-operator@sha256:37ccaa8e4981bcfe6c84abc976187af1a3e465ce7c6d2a21f7a6c4c38d60aaea
    name: security-profiles-operator
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel8@sha256:84224d242fef77fdd8d3bb57e2278bc5969f380ac5c582f10c938de61dc28f2b
    name: selinuxd
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel8@sha256:84224d242fef77fdd8d3bb57e2278bc5969f380ac5c582f10c938de61dc28f2b
    name: selinuxd_el8
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel9@sha256:1a769c96e4bfb8a2c096987c0c0c121a9b4f3a8bef5d8fecc84e6bc03673be90
    name: selinuxd_el9
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:77df668a9591bbaae675d0553f8dca5423c0f257317bc08fe821d965f44ed019
    name: rbac_proxy
schema: olm.bundle
---
image: registry.redhat.io/compliance/openshift-security-profiles-operator-bundle@sha256:40771028def743730a779736ab7465113645edd9e1d45cb7e69eaaf95531584b
name: security-profiles-operator.v0.8.5
package: security-profiles-operator
properties:
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: AppArmorProfile
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: ProfileBinding
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: ProfileRecording
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: RawSelinuxProfile
      version: v1alpha2
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SeccompProfile
      version: v1beta1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SecurityProfileNodeStatus
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SecurityProfilesOperatorDaemon
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SelinuxProfile
      version: v1alpha2
  - type: olm.package
    value:
      packageName: security-profiles-operator
      version: 0.8.5
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic2VjdXJpdHlwcm9maWxlbm9kZXN0YXR1c2VzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTZWN1cml0eVByb2ZpbGVOb2RlU3RhdHVzIiwibGlzdEtpbmQiOiJTZWN1cml0eVByb2ZpbGVOb2RlU3RhdHVzTGlzdCIsInBsdXJhbCI6InNlY3VyaXR5cHJvZmlsZW5vZGVzdGF0dXNlcyIsInNob3J0TmFtZXMiOlsic3BucyJdLCJzaW5ndWxhciI6InNlY3VyaXR5cHJvZmlsZW5vZGVzdGF0dXMifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn0seyJqc29uUGF0aCI6Ii5ub2RlTmFtZSIsIm5hbWUiOiJOb2RlIiwicHJpb3JpdHkiOjEwLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiU2VjdXJpdHlQcm9maWxlTm9kZVN0YXR1cyBpcyBhIHBlci1ub2RlIHN0YXR1cyBvZiBhIHNlY3VyaXR5IHByb2ZpbGUiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sIm5vZGVOYW1lIjp7InR5cGUiOiJzdHJpbmcifSwic3BlYyI6eyJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVTdGF0ZSBkZWZpbmVzIHRoZSBzdGF0ZSB0aGF0IHRoZSBwcm9maWxlIGlzIGluLiBBIHByb2ZpbGUgaW4gdGhpcyBjb250ZXh0XG5yZWZlcnMgdG8gYSBTZWNjb21wUHJvZmlsZSBvciBhIFNFTGludXggcHJvZmlsZSwgdGhlIHN0YXRlcyBhcmUgc2hhcmVkIGJldHdlZW4gdGhlbVxuYXMgd2VsbCBhcyB0aGUgbWFuYWdlbWVudCBBUEkuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibm9kZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnt9fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic2VsaW51eHByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTZWxpbnV4UHJvZmlsZSIsImxpc3RLaW5kIjoiU2VsaW51eFByb2ZpbGVMaXN0IiwicGx1cmFsIjoic2VsaW51eHByb2ZpbGVzIiwic2luZ3VsYXIiOiJzZWxpbnV4cHJvZmlsZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMudXNhZ2UiLCJuYW1lIjoiVXNhZ2UiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdHVzIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGEyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBzZWxpbnV4cHJvZmlsZXMgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFNlbGludXhQcm9maWxlLiIsInByb3BlcnRpZXMiOnsiYWxsb3ciOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIGFsbG93IHBvbGljeSBmb3IgdGhlIHByb2ZpbGUiLCJ0eXBlIjoib2JqZWN0In0sImRpc2FibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZXRoZXIgdGhlIHByb2ZpbGUgaXMgZGlzYWJsZWQgYW5kIHNob3VsZCBiZSBza2lwcGVkIGR1cmluZyByZWNvbmNpbGlhdGlvbi4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJpbmhlcml0Ijp7ImRlZmF1bHQiOlt7ImtpbmQiOiJTeXN0ZW0iLCJuYW1lIjoiY29udGFpbmVyIn1dLCJkZXNjcmlwdGlvbiI6IkEgU0VMaW51eFByb2ZpbGUgb3Igc2V0IG9mIHByb2ZpbGVzIHRoYXQgdGhpcyBpbmhlcml0cyBmcm9tLlxuTm90ZSB0aGF0IHRoZXkgbmVlZCB0byBiZSBpbiB0aGUgc2FtZSBuYW1lc3BhY2UuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJTeXN0ZW0iLCJkZXNjcmlwdGlvbiI6IlRoZSBLaW5kIG9mIHRoZSBwb2xpY3kgdGhhdCB0aGlzIGluaGVyaXRzIGZyb20uXG5DYW4gYmUgYSBTZWxpbnV4UHJvZmlsZSBvYmplY3QgT3IgXCJTeXN0ZW1cIiBpZiBhbiBhbHJlYWR5XG5pbnN0YWxsZWQgcG9saWN5IHdpbGwgYmUgdXNlZC5cblRoZSBhbGxvd2VkIFwiU3lzdGVtXCIgcG9saWNpZXMgYXJlIGF2YWlsYWJsZSBpbiB0aGVcblNlY3VyaXR5UHJvZmlsZXNPcGVyYXRvckRhZW1vbiBpbnN0YW5jZS4iLCJlbnVtIjpbIlN5c3RlbSIsIlNlbGludXhQcm9maWxlIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBwb2xpY3kgdGhhdCB0aGlzIGluaGVyaXRzIGZyb20uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJwZXJtaXNzaXZlIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlBlcm1pc3NpdmUsIHdoZW4gdHJ1ZSB3aWxsIGNhdXNlIHRoZSBTRUxpbnV4IHByb2ZpbGUgdG8gb25seVxubG9nIHZpb2xhdGlvbnMgaW5zdGVhZCBvZiBlbmZvcmNpbmcgdGhlbS4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTZWxpbnV4UHJvZmlsZVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBTZWxpbnV4UHJvZmlsZS4iLCJwcm9wZXJ0aWVzIjp7ImFjdGl2ZVdvcmtsb2FkcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBvZiB0aGUgcmVzb3VyY2UuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIENvbmRpdGlvbiB0aGF0IG1heSBhcHBseSB0byBhIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhpcyBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lXG5zdGF0dXMgdG8gYW5vdGhlci4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJBIE1lc3NhZ2UgY29udGFpbmluZyBkZXRhaWxzIGFib3V0IHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb21cbm9uZSBzdGF0dXMgdG8gYW5vdGhlciwgaWYgYW55LiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiQSBSZWFzb24gZm9yIHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIG9mIHRoaXMgY29uZGl0aW9uOyBpcyBpdCBjdXJyZW50bHkgVHJ1ZSwgRmFsc2UsIG9yIFVua25vd24/IiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBvZiB0aGlzIGNvbmRpdGlvbi4gQXQgbW9zdCBvbmUgb2YgZWFjaCBjb25kaXRpb24gdHlwZSBtYXkgYXBwbHkgdG9cbmEgcmVzb3VyY2UgYXQgYW55IHBvaW50IGluIHRpbWUuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlU3RhdGUgZGVmaW5lcyB0aGUgc3RhdGUgdGhhdCB0aGUgcHJvZmlsZSBpcyBpbi4gQSBwcm9maWxlIGluIHRoaXMgY29udGV4dFxucmVmZXJzIHRvIGEgU2VjY29tcFByb2ZpbGUgb3IgYSBTRUxpbnV4IHByb2ZpbGUsIHRoZSBzdGF0ZXMgYXJlIHNoYXJlZCBiZXR3ZWVuIHRoZW1cbmFzIHdlbGwgYXMgdGhlIG1hbmFnZW1lbnQgQVBJLiIsInR5cGUiOiJzdHJpbmcifSwidXNhZ2UiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIHRoZSBzdHJpbmcgdGhhdCB0aGUgU2VsaW51eFByb2ZpbGUgb2JqZWN0IGNhbiBiZVxucmVmZXJlbmNlZCBhcyBpbiBhIHBvZCBzZUxpbnV4T3B0aW9ucyBzZWN0aW9uLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicHJvZmlsZWJpbmRpbmdzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJQcm9maWxlQmluZGluZyIsImxpc3RLaW5kIjoiUHJvZmlsZUJpbmRpbmdMaXN0IiwicGx1cmFsIjoicHJvZmlsZWJpbmRpbmdzIiwic2luZ3VsYXIiOiJwcm9maWxlYmluZGluZyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVCaW5kaW5nIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBwcm9maWxlYmluZGluZ3MgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVCaW5kaW5nU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFByb2ZpbGVCaW5kaW5nLiIsInByb3BlcnRpZXMiOnsiaW1hZ2UiOnsiZGVzY3JpcHRpb24iOiJJbWFnZSBuYW1lIHdpdGhpbiBwb2QgY29udGFpbmVycyB0byBtYXRjaCB0byB0aGUgcHJvZmlsZS5cblVzZSB0aGUgXCIqXCIgc3RyaW5nIHRvIGJpbmQgdGhlIHByb2ZpbGUgdG8gYWxsIHBvZHMuIiwidHlwZSI6InN0cmluZyJ9LCJwcm9maWxlUmVmIjp7ImRlc2NyaXB0aW9uIjoiUHJvZmlsZVJlZiByZWZlcmVuY2VzIGEgU2VjY29tcFByb2ZpbGUgb3Igb3RoZXIgcHJvZmlsZSB0eXBlIGluIHRoZSBjdXJyZW50IG5hbWVzcGFjZS4iLCJwcm9wZXJ0aWVzIjp7ImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIG9mIG9iamVjdCB0byBiZSBib3VuZC4iLCJlbnVtIjpbIlNlY2NvbXBQcm9maWxlIiwiU2VsaW51eFByb2ZpbGUiXSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcHJvZmlsZSB3aXRoaW4gdGhlIGN1cnJlbnQgbmFtZXNwYWNlIHRvIHdoaWNoIHRvIGJpbmQgdGhlIHNlbGVjdGVkIHBvZHMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiaW1hZ2UiLCJwcm9maWxlUmVmIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUHJvZmlsZUJpbmRpbmdTdGF0dXMgY29udGFpbnMgc3RhdHVzIG9mIHRoZSBQcm9maWxlYmluZGluZy4iLCJwcm9wZXJ0aWVzIjp7ImFjdGl2ZVdvcmtsb2FkcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicHJvZmlsZXJlY29yZGluZ3Muc2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8ifSwic3BlYyI6eyJncm91cCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIiwibmFtZXMiOnsia2luZCI6IlByb2ZpbGVSZWNvcmRpbmciLCJsaXN0S2luZCI6IlByb2ZpbGVSZWNvcmRpbmdMaXN0IiwicGx1cmFsIjoicHJvZmlsZXJlY29yZGluZ3MiLCJzaW5ndWxhciI6InByb2ZpbGVyZWNvcmRpbmcifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5wb2RTZWxlY3RvciIsIm5hbWUiOiJQb2RTZWxlY3RvciIsInByaW9yaXR5IjoxMCwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVSZWNvcmRpbmcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHByb2ZpbGVyZWNvcmRpbmdzIEFQSS4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlUmVjb3JkaW5nU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFByb2ZpbGVSZWNvcmRpbmcuIiwicHJvcGVydGllcyI6eyJjb250YWluZXJzIjp7ImRlc2NyaXB0aW9uIjoiQ29udGFpbmVycyBpcyBhIHNldCBvZiBjb250YWluZXJzIHRvIHJlY29yZC4gVGhpcyBhbGxvd3MgdG8gc2VsZWN0XG5vbmx5IHNwZWNpZmljIGNvbnRhaW5lcnMgdG8gcmVjb3JkIGluc3RlYWQgb2YgYWxsIGNvbnRhaW5lcnMgcHJlc2VudFxuaW4gdGhlIHBvZC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJkaXNhYmxlUHJvZmlsZUFmdGVyUmVjb3JkaW5nIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkRpc2FibGVQcm9maWxlQWZ0ZXJSZWNvcmRpbmcgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIHByb2ZpbGUgc2hvdWxkIGJlIGRpc2FibGVkXG5hZnRlciByZWNvcmRpbmcgYW5kIHRodXMgc2tpcHBlZCBkdXJpbmcgcmVjb25jaWxlLiBJbiBjYXNlIG9mIFNFTGludXggcHJvZmlsZXMsXG5yZWNvbmNpbGUgY2FuIHRha2UgYSBzaWduaWZpY2FudCBhbW91bnQgb2YgdGltZSBhbmQgZm9yIGFsbCBwcm9maWxlcyBtaWdodCBub3QgYmUgbmVlZGVkLlxuVGhpcyBEZWZhdWx0cyB0byBmYWxzZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBvZiBvYmplY3QgdG8gYmUgcmVjb3JkZWQuIiwiZW51bSI6WyJTZWNjb21wUHJvZmlsZSIsIlNlbGludXhQcm9maWxlIl0sInR5cGUiOiJzdHJpbmcifSwibWVyZ2VTdHJhdGVneSI6eyJkZWZhdWx0Ijoibm9uZSIsImRlc2NyaXB0aW9uIjoiV2hldGhlciBvciBob3cgdG8gbWVyZ2UgcmVjb3JkZWQgcHJvZmlsZXMuIENhbiBiZSBvbmUgb2YgXCJub25lXCIgb3IgXCJjb250YWluZXJzXCIuXG5EZWZhdWx0IGlzIFwibm9uZVwiLiIsImVudW0iOlsibm9uZSIsImNvbnRhaW5lcnMiXSwidHlwZSI6InN0cmluZyJ9LCJwb2RTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlBvZFNlbGVjdG9yIHNlbGVjdHMgdGhlIHBvZHMgdG8gcmVjb3JkLiBUaGlzIGZpZWxkIGZvbGxvd3Mgc3RhbmRhcmRcbmxhYmVsIHNlbGVjdG9yIHNlbWFudGljcy4gQW4gZW1wdHkgcG9kU2VsZWN0b3IgbWF0Y2hlcyBhbGwgcG9kcyBpbiB0aGlzXG5uYW1lc3BhY2UuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwicmVjb3JkZXIiOnsiZGVzY3JpcHRpb24iOiJSZWNvcmRlciB0byBiZSB1c2VkLiIsImVudW0iOlsiYnBmIiwibG9ncyJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJraW5kIiwicG9kU2VsZWN0b3IiLCJyZWNvcmRlciJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVSZWNvcmRpbmdTdGF0dXMgY29udGFpbnMgc3RhdHVzIG9mIHRoZSBQcm9maWxlUmVjb3JkaW5nLiIsInByb3BlcnRpZXMiOnsiYWN0aXZlV29ya2xvYWRzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicmF3c2VsaW51eHByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJSYXdTZWxpbnV4UHJvZmlsZSIsImxpc3RLaW5kIjoiUmF3U2VsaW51eFByb2ZpbGVMaXN0IiwicGx1cmFsIjoicmF3c2VsaW51eHByb2ZpbGVzIiwic2luZ3VsYXIiOiJyYXdzZWxpbnV4cHJvZmlsZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMudXNhZ2UiLCJuYW1lIjoiVXNhZ2UiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdHVzIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGEyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlJhd1NlbGludXhQcm9maWxlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSByYXdzZWxpbnV4cHJvZmlsZXMgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlJhd1NlbGludXhQcm9maWxlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFJhd1NlbGludXhQcm9maWxlLiIsInByb3BlcnRpZXMiOnsiZGlzYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hldGhlciB0aGUgcHJvZmlsZSBpcyBkaXNhYmxlZCBhbmQgc2hvdWxkIGJlIHNraXBwZWQgZHVyaW5nIHJlY29uY2lsaWF0aW9uLiIsInR5cGUiOiJib29sZWFuIn0sInBvbGljeSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFNlbGludXhQcm9maWxlLiIsInByb3BlcnRpZXMiOnsiYWN0aXZlV29ya2xvYWRzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIG9mIHRoZSByZXNvdXJjZS4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgQ29uZGl0aW9uIHRoYXQgbWF5IGFwcGx5IHRvIGEgcmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGlzIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmVcbnN0YXR1cyB0byBhbm90aGVyLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6IkEgTWVzc2FnZSBjb250YWluaW5nIGRldGFpbHMgYWJvdXQgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbVxub25lIHN0YXR1cyB0byBhbm90aGVyLCBpZiBhbnkuIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJBIFJlYXNvbiBmb3IgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgb2YgdGhpcyBjb25kaXRpb247IGlzIGl0IGN1cnJlbnRseSBUcnVlLCBGYWxzZSwgb3IgVW5rbm93bj8iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoaXMgY29uZGl0aW9uLiBBdCBtb3N0IG9uZSBvZiBlYWNoIGNvbmRpdGlvbiB0eXBlIG1heSBhcHBseSB0b1xuYSByZXNvdXJjZSBhdCBhbnkgcG9pbnQgaW4gdGltZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVTdGF0ZSBkZWZpbmVzIHRoZSBzdGF0ZSB0aGF0IHRoZSBwcm9maWxlIGlzIGluLiBBIHByb2ZpbGUgaW4gdGhpcyBjb250ZXh0XG5yZWZlcnMgdG8gYSBTZWNjb21wUHJvZmlsZSBvciBhIFNFTGludXggcHJvZmlsZSwgdGhlIHN0YXRlcyBhcmUgc2hhcmVkIGJldHdlZW4gdGhlbVxuYXMgd2VsbCBhcyB0aGUgbWFuYWdlbWVudCBBUEkuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2FnZSI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgdGhlIHN0cmluZyB0aGF0IHRoZSBTZWxpbnV4UHJvZmlsZSBvYmplY3QgY2FuIGJlXG5yZWZlcmVuY2VkIGFzIGluIGEgcG9kIHNlTGludXhPcHRpb25zIHNlY3Rpb24uIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJhcHBhcm1vcnByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJBcHBBcm1vclByb2ZpbGUiLCJsaXN0S2luZCI6IkFwcEFybW9yUHJvZmlsZUxpc3QiLCJwbHVyYWwiOiJhcHBhcm1vcnByb2ZpbGVzIiwic2hvcnROYW1lcyI6WyJhYSJdLCJzaW5ndWxhciI6ImFwcGFybW9ycHJvZmlsZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkFwcEFybW9yUHJvZmlsZSBpcyB0aGUgU2NoZW1hIGZvciB0aGUgYXBwYXJtb3Jwcm9maWxlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkFwcEFybW9yUHJvZmlsZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBBcHBBcm1vclByb2ZpbGUiLCJwcm9wZXJ0aWVzIjp7InBvbGljeSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJwb2xpY3kiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJBcHBBcm1vclByb2ZpbGVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQXBwQXJtb3JQcm9maWxlIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwb2QifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRoZW50aWNhdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInN1YmplY3RhY2Nlc3NyZXZpZXdzIiwidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibm9kZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbImFwcGFybW9ycHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbImFwcGFybW9ycHJvZmlsZXMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJkZWxldGUiLCJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyJdLCJyZXNvdXJjZXMiOlsiYXBwYXJtb3Jwcm9maWxlcy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGVyZWNvcmRpbmdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJyYXdzZWxpbnV4cHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInJhd3NlbGludXhwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJyYXdzZWxpbnV4cHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWNjb21wcHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY2NvbXBwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWNjb21wcHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWN1cml0eXByb2ZpbGVub2Rlc3RhdHVzZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY3VyaXR5cHJvZmlsZXNvcGVyYXRvcmRhZW1vbnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWxpbnV4cHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlbGludXhwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWxpbnV4cHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby13ZWJob29rIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJldmVudHMiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGViaW5kaW5ncyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyJdLCJyZXNvdXJjZXMiOlsicHJvZmlsZWJpbmRpbmdzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsiZGVsZXRlIiwiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGViaW5kaW5ncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGVyZWNvcmRpbmdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJwcm9maWxlcmVjb3JkaW5ncy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJwcm9maWxlcmVjb3JkaW5ncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY2NvbXBwcm9maWxlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlbGludXhwcm9maWxlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby1tZXRyaWNzLWNsaWVudCJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9tZXRyaWNzIiwiL21ldHJpY3Mtc3BvZCJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJwb2RzIiwic2VydmljZXMiLCJlbmRwb2ludHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8tbWV0cmljcy1jbGllbnQifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJuYW1lIjoic3BvLW1ldHJpY3MtY2xpZW50In0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoiZGVmYXVsdCIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1zZWN1cml0eS1wcm9maWxlcyJ9LHsia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8td2ViaG9vayJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm5hbWUiOiJzcG8td2ViaG9vayJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InNwby13ZWJob29rIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LXNlY3VyaXR5LXByb2ZpbGVzIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG9kIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibmFtZSI6InNwb2QifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJzcG9kIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LXNlY3VyaXR5LXByb2ZpbGVzIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic3BvLXdlYmhvb2sifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJjb29yZGluYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJsZWFzZXMiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbImNvb3JkaW5hdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VOYW1lcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci13ZWJob29rLWxvY2siXSwicmVzb3VyY2VzIjpbImxlYXNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInNlY3VyaXR5Y29udGV4dGNvbnN0cmFpbnRzIl0sInZlcmJzIjpbInVzZSJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic3BvZCJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbInNlY3VyaXR5Lm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsic2VjdXJpdHljb250ZXh0Y29uc3RyYWludHMiXSwidmVyYnMiOlsidXNlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwb2QifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiUm9sZSIsIm5hbWUiOiJzcG9kIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoic3BvZCIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1zZWN1cml0eS1wcm9maWxlcyJ9XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby13ZWJob29rIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IlJvbGUiLCJuYW1lIjoic3BvLXdlYmhvb2sifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJzcG8td2ViaG9vayJ9XX0=
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VjcmV0IiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsia3ViZXJuZXRlcy5pby9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRlZmF1bHQifSwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJtZXRyaWNzLXRva2VuIn0sInR5cGUiOiJrdWJlcm5ldGVzLmlvL3NlcnZpY2UtYWNjb3VudC10b2tlbiJ9
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8td2ViaG9vayJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG9kIn19
relatedImages:
  - image: registry.redhat.io/compliance/openshift-security-profiles-operator-bundle@sha256:40771028def743730a779736ab7465113645edd9e1d45cb7e69eaaf95531584b
    name: ""
  - image: registry.redhat.io/compliance/openshift-security-profiles-rhel8-operator@sha256:82e716bc5470237bc6f966d66664267e72005a05e16b4bd1c937d37755f6ccc8
    name: security-profiles-operator
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel8@sha256:b9b953c03468ce9fa55e99383fed2d3df658007d2619fbede80d5d717961c133
    name: selinuxd
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel8@sha256:b9b953c03468ce9fa55e99383fed2d3df658007d2619fbede80d5d717961c133
    name: selinuxd_el8
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel9@sha256:626d6ff244eea3dfb6cc1b4ef8f35b1fa591ef54062e5a8c75531167c0751fa2
    name: selinuxd_el9
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:77df668a9591bbaae675d0553f8dca5423c0f257317bc08fe821d965f44ed019
    name: rbac_proxy
schema: olm.bundle
---
image: registry.redhat.io/compliance/openshift-security-profiles-operator-bundle@sha256:40771028def743730a779736ab7465113645edd9e1d45cb7e69eaaf95531584b
name: security-profiles-operator.v0.8.6
package: security-profiles-operator
properties:
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: AppArmorProfile
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: ProfileBinding
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: ProfileRecording
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: RawSelinuxProfile
      version: v1alpha2
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SeccompProfile
      version: v1beta1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SecurityProfileNodeStatus
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SecurityProfilesOperatorDaemon
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SelinuxProfile
      version: v1alpha2
  - type: olm.package
    value:
      packageName: security-profiles-operator
      version: 0.8.6
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic2VjdXJpdHlwcm9maWxlbm9kZXN0YXR1c2VzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTZWN1cml0eVByb2ZpbGVOb2RlU3RhdHVzIiwibGlzdEtpbmQiOiJTZWN1cml0eVByb2ZpbGVOb2RlU3RhdHVzTGlzdCIsInBsdXJhbCI6InNlY3VyaXR5cHJvZmlsZW5vZGVzdGF0dXNlcyIsInNob3J0TmFtZXMiOlsic3BucyJdLCJzaW5ndWxhciI6InNlY3VyaXR5cHJvZmlsZW5vZGVzdGF0dXMifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn0seyJqc29uUGF0aCI6Ii5ub2RlTmFtZSIsIm5hbWUiOiJOb2RlIiwicHJpb3JpdHkiOjEwLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiU2VjdXJpdHlQcm9maWxlTm9kZVN0YXR1cyBpcyBhIHBlci1ub2RlIHN0YXR1cyBvZiBhIHNlY3VyaXR5IHByb2ZpbGUiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sIm5vZGVOYW1lIjp7InR5cGUiOiJzdHJpbmcifSwic3BlYyI6eyJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVTdGF0ZSBkZWZpbmVzIHRoZSBzdGF0ZSB0aGF0IHRoZSBwcm9maWxlIGlzIGluLiBBIHByb2ZpbGUgaW4gdGhpcyBjb250ZXh0XG5yZWZlcnMgdG8gYSBTZWNjb21wUHJvZmlsZSBvciBhIFNFTGludXggcHJvZmlsZSwgdGhlIHN0YXRlcyBhcmUgc2hhcmVkIGJldHdlZW4gdGhlbVxuYXMgd2VsbCBhcyB0aGUgbWFuYWdlbWVudCBBUEkuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibm9kZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnt9fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic2VjdXJpdHlwcm9maWxlc29wZXJhdG9yZGFlbW9ucy5zZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iLCJuYW1lcyI6eyJraW5kIjoiU2VjdXJpdHlQcm9maWxlc09wZXJhdG9yRGFlbW9uIiwibGlzdEtpbmQiOiJTZWN1cml0eVByb2ZpbGVzT3BlcmF0b3JEYWVtb25MaXN0IiwicGx1cmFsIjoic2VjdXJpdHlwcm9maWxlc29wZXJhdG9yZGFlbW9ucyIsInNob3J0TmFtZXMiOlsic3BvZCJdLCJzaW5ndWxhciI6InNlY3VyaXR5cHJvZmlsZXNvcGVyYXRvcmRhZW1vbiJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdGUiLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiU2VjdXJpdHlQcm9maWxlc09wZXJhdG9yRGFlbW9uIGlzIHRoZSBTY2hlbWEgdG8gY29uZmlndXJlIHRoZSBzcG9kIGRlcGxveW1lbnQuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiU1BPRFN0YXR1cyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFNQT0QuIiwicHJvcGVydGllcyI6eyJhZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IkFmZmluaXR5IGlmIHNwZWNpZmllZCwgdGhlIFNQT0QncyBhZmZpbml0eS4iLCJwcm9wZXJ0aWVzIjp7Im5vZGVBZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IkRlc2NyaWJlcyBub2RlIGFmZmluaXR5IHNjaGVkdWxpbmcgcnVsZXMgZm9yIHRoZSBwb2QuIiwicHJvcGVydGllcyI6eyJwcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzY2hlZHVsZXIgd2lsbCBwcmVmZXIgdG8gc2NoZWR1bGUgcG9kcyB0byBub2RlcyB0aGF0IHNhdGlzZnlcbnRoZSBhZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2VcbmEgbm9kZSB0aGF0IHZpb2xhdGVzIG9uZSBvciBtb3JlIG9mIHRoZSBleHByZXNzaW9ucy4gVGhlIG5vZGUgdGhhdCBpc1xubW9zdCBwcmVmZXJyZWQgaXMgdGhlIG9uZSB3aXRoIHRoZSBncmVhdGVzdCBzdW0gb2Ygd2VpZ2h0cywgaS5lLlxuZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlXG5yZXF1ZXN0LCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmcgYWZmaW5pdHkgZXhwcmVzc2lvbnMsIGV0Yy4pLFxuY29tcHV0ZSBhIHN1bSBieSBpdGVyYXRpbmcgdGhyb3VnaCB0aGUgZWxlbWVudHMgb2YgdGhpcyBmaWVsZCBhbmQgYWRkaW5nXG5cIndlaWdodFwiIHRvIHRoZSBzdW0gaWYgdGhlIG5vZGUgbWF0Y2hlcyB0aGUgY29ycmVzcG9uZGluZyBtYXRjaEV4cHJlc3Npb25zOyB0aGVcbm5vZGUocykgd2l0aCB0aGUgaGlnaGVzdCBzdW0gYXJlIHRoZSBtb3N0IHByZWZlcnJlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGVtcHR5IHByZWZlcnJlZCBzY2hlZHVsaW5nIHRlcm0gbWF0Y2hlcyBhbGwgb2JqZWN0cyB3aXRoIGltcGxpY2l0IHdlaWdodCAwXG4oaS5lLiBpdCdzIGEgbm8tb3ApLiBBIG51bGwgcHJlZmVycmVkIHNjaGVkdWxpbmcgdGVybSBtYXRjaGVzIG5vIG9iamVjdHMgKGkuZS4gaXMgYWxzbyBhIG5vLW9wKS4iLCJwcm9wZXJ0aWVzIjp7InByZWZlcmVuY2UiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGxhYmVscy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yXG50aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXNcbmFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuXG5UaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hGaWVsZHMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGZpZWxkcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yXG50aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXNcbmFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuXG5UaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwid2VpZ2h0Ijp7ImRlc2NyaXB0aW9uIjoiV2VpZ2h0IGFzc29jaWF0ZWQgd2l0aCBtYXRjaGluZyB0aGUgY29ycmVzcG9uZGluZyBub2RlU2VsZWN0b3JUZXJtLCBpbiB0aGUgcmFuZ2UgMS0xMDAuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsicHJlZmVyZW5jZSIsIndlaWdodCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBhcmUgbm90IG1ldCBhdFxuc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLlxuSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBjZWFzZSB0byBiZSBtZXRcbmF0IHNvbWUgcG9pbnQgZHVyaW5nIHBvZCBleGVjdXRpb24gKGUuZy4gZHVlIHRvIGFuIHVwZGF0ZSksIHRoZSBzeXN0ZW1cbm1heSBvciBtYXkgbm90IHRyeSB0byBldmVudHVhbGx5IGV2aWN0IHRoZSBwb2QgZnJvbSBpdHMgbm9kZS4iLCJwcm9wZXJ0aWVzIjp7Im5vZGVTZWxlY3RvclRlcm1zIjp7ImRlc2NyaXB0aW9uIjoiUmVxdWlyZWQuIEEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHRlcm1zLiBUaGUgdGVybXMgYXJlIE9SZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG51bGwgb3IgZW1wdHkgbm9kZSBzZWxlY3RvciB0ZXJtIG1hdGNoZXMgbm8gb2JqZWN0cy4gVGhlIHJlcXVpcmVtZW50cyBvZlxudGhlbSBhcmUgQU5EZWQuXG5UaGUgVG9wb2xvZ3lTZWxlY3RvclRlcm0gdHlwZSBpbXBsZW1lbnRzIGEgc3Vic2V0IG9mIHRoZSBOb2RlU2VsZWN0b3JUZXJtLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50cyBieSBub2RlJ3MgbGFiZWxzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3JcbnRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cywgRG9lc05vdEV4aXN0LiBHdCwgYW5kIEx0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoiQW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlc1xuYXJyYXkgbXVzdCBoYXZlIGEgc2luZ2xlIGVsZW1lbnQsIHdoaWNoIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gaW50ZWdlci5cblRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaEZpZWxkcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50cyBieSBub2RlJ3MgZmllbGRzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3JcbnRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cywgRG9lc05vdEV4aXN0LiBHdCwgYW5kIEx0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoiQW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlc1xuYXJyYXkgbXVzdCBoYXZlIGEgc2luZ2xlIGVsZW1lbnQsIHdoaWNoIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gaW50ZWdlci5cblRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbIm5vZGVTZWxlY3RvclRlcm1zIl0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifX0sInR5cGUiOiJvYmplY3QifSwicG9kQWZmaW5pdHkiOnsiZGVzY3JpcHRpb24iOiJEZXNjcmliZXMgcG9kIGFmZmluaXR5IHNjaGVkdWxpbmcgcnVsZXMgKGUuZy4gY28tbG9jYXRlIHRoaXMgcG9kIGluIHRoZSBzYW1lIG5vZGUsIHpvbmUsIGV0Yy4gYXMgc29tZSBvdGhlciBwb2QocykpLiIsInByb3BlcnRpZXMiOnsicHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NoZWR1bGVyIHdpbGwgcHJlZmVyIHRvIHNjaGVkdWxlIHBvZHMgdG8gbm9kZXMgdGhhdCBzYXRpc2Z5XG50aGUgYWZmaW5pdHkgZXhwcmVzc2lvbnMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQsIGJ1dCBpdCBtYXkgY2hvb3NlXG5hIG5vZGUgdGhhdCB2aW9sYXRlcyBvbmUgb3IgbW9yZSBvZiB0aGUgZXhwcmVzc2lvbnMuIFRoZSBub2RlIHRoYXQgaXNcbm1vc3QgcHJlZmVycmVkIGlzIHRoZSBvbmUgd2l0aCB0aGUgZ3JlYXRlc3Qgc3VtIG9mIHdlaWdodHMsIGkuZS5cbmZvciBlYWNoIG5vZGUgdGhhdCBtZWV0cyBhbGwgb2YgdGhlIHNjaGVkdWxpbmcgcmVxdWlyZW1lbnRzIChyZXNvdXJjZVxucmVxdWVzdCwgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nIGFmZmluaXR5IGV4cHJlc3Npb25zLCBldGMuKSxcbmNvbXB1dGUgYSBzdW0gYnkgaXRlcmF0aW5nIHRocm91Z2ggdGhlIGVsZW1lbnRzIG9mIHRoaXMgZmllbGQgYW5kIGFkZGluZ1xuXCJ3ZWlnaHRcIiB0byB0aGUgc3VtIGlmIHRoZSBub2RlIGhhcyBwb2RzIHdoaWNoIG1hdGNoZXMgdGhlIGNvcnJlc3BvbmRpbmcgcG9kQWZmaW5pdHlUZXJtOyB0aGVcbm5vZGUocykgd2l0aCB0aGUgaGlnaGVzdCBzdW0gYXJlIHRoZSBtb3N0IHByZWZlcnJlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSB3ZWlnaHRzIG9mIGFsbCBvZiB0aGUgbWF0Y2hlZCBXZWlnaHRlZFBvZEFmZmluaXR5VGVybSBmaWVsZHMgYXJlIGFkZGVkIHBlci1ub2RlIHRvIGZpbmQgdGhlIG1vc3QgcHJlZmVycmVkIG5vZGUocykiLCJwcm9wZXJ0aWVzIjp7InBvZEFmZmluaXR5VGVybSI6eyJkZXNjcmlwdGlvbiI6IlJlcXVpcmVkLiBBIHBvZCBhZmZpbml0eSB0ZXJtLCBhc3NvY2lhdGVkIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgd2VpZ2h0LiIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciBhIHNldCBvZiByZXNvdXJjZXMsIGluIHRoaXMgY2FzZSBwb2RzLlxuSWYgaXQncyBudWxsLCB0aGlzIFBvZEFmZmluaXR5VGVybSBtYXRjaGVzIHdpdGggbm8gUG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYExhYmVsU2VsZWN0b3JgIGFzIGBrZXkgaW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBNYXRjaExhYmVsS2V5cyBhbmQgTGFiZWxTZWxlY3Rvci5cbkFsc28sIE1hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBMYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYW4gYWxwaGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1pc21hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWlzbWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgTGFiZWxTZWxlY3RvcmAgYXMgYGtleSBub3RpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIE1pc21hdGNoTGFiZWxLZXlzIGFuZCBMYWJlbFNlbGVjdG9yLlxuQWxzbywgTWlzbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIExhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhbiBhbHBoYSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgdGhlIHNldCBvZiBuYW1lc3BhY2VzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIHNlbGVjdGVkIGJ5IHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBsaXN0ZWQgaW4gdGhlIG5hbWVzcGFjZXMgZmllbGQuXG5udWxsIHNlbGVjdG9yIGFuZCBudWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuXG5BbiBlbXB0eSBzZWxlY3RvciAoe30pIG1hdGNoZXMgYWxsIG5hbWVzcGFjZXMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIGxpc3RlZCBpbiB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgc2VsZWN0ZWQgYnkgbmFtZXNwYWNlU2VsZWN0b3IuXG5udWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidG9wb2xvZ3lLZXkiOnsiZGVzY3JpcHRpb24iOiJUaGlzIHBvZCBzaG91bGQgYmUgY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoIHRoZSBwb2RzIG1hdGNoaW5nXG50aGUgbGFiZWxTZWxlY3RvciBpbiB0aGUgc3BlY2lmaWVkIG5hbWVzcGFjZXMsIHdoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZVxud2hvc2UgdmFsdWUgb2YgdGhlIGxhYmVsIHdpdGgga2V5IHRvcG9sb2d5S2V5IG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaCBhbnkgb2YgdGhlXG5zZWxlY3RlZCBwb2RzIGlzIHJ1bm5pbmcuXG5FbXB0eSB0b3BvbG9neUtleSBpcyBub3QgYWxsb3dlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0b3BvbG9neUtleSJdLCJ0eXBlIjoib2JqZWN0In0sIndlaWdodCI6eyJkZXNjcmlwdGlvbiI6IndlaWdodCBhc3NvY2lhdGVkIHdpdGggbWF0Y2hpbmcgdGhlIGNvcnJlc3BvbmRpbmcgcG9kQWZmaW5pdHlUZXJtLFxuaW4gdGhlIHJhbmdlIDEtMTAwLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInBvZEFmZmluaXR5VGVybSIsIndlaWdodCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBhcmUgbm90IG1ldCBhdFxuc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLlxuSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBjZWFzZSB0byBiZSBtZXRcbmF0IHNvbWUgcG9pbnQgZHVyaW5nIHBvZCBleGVjdXRpb24gKGUuZy4gZHVlIHRvIGEgcG9kIGxhYmVsIHVwZGF0ZSksIHRoZVxuc3lzdGVtIG1heSBvciBtYXkgbm90IHRyeSB0byBldmVudHVhbGx5IGV2aWN0IHRoZSBwb2QgZnJvbSBpdHMgbm9kZS5cbldoZW4gdGhlcmUgYXJlIG11bHRpcGxlIGVsZW1lbnRzLCB0aGUgbGlzdHMgb2Ygbm9kZXMgY29ycmVzcG9uZGluZyB0byBlYWNoXG5wb2RBZmZpbml0eVRlcm0gYXJlIGludGVyc2VjdGVkLCBpLmUuIGFsbCB0ZXJtcyBtdXN0IGJlIHNhdGlzZmllZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgYSBzZXQgb2YgcG9kcyAobmFtZWx5IHRob3NlIG1hdGNoaW5nIHRoZSBsYWJlbFNlbGVjdG9yXG5yZWxhdGl2ZSB0byB0aGUgZ2l2ZW4gbmFtZXNwYWNlKHMpKSB0aGF0IHRoaXMgcG9kIHNob3VsZCBiZVxuY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoLFxud2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlIHdob3NlIHZhbHVlIG9mXG50aGUgbGFiZWwgd2l0aCBrZXkgXHUwMDNjdG9wb2xvZ3lLZXlcdTAwM2UgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoXG5hIHBvZCBvZiB0aGUgc2V0IG9mIHBvZHMgaXMgcnVubmluZyIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciBhIHNldCBvZiByZXNvdXJjZXMsIGluIHRoaXMgY2FzZSBwb2RzLlxuSWYgaXQncyBudWxsLCB0aGlzIFBvZEFmZmluaXR5VGVybSBtYXRjaGVzIHdpdGggbm8gUG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYExhYmVsU2VsZWN0b3JgIGFzIGBrZXkgaW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBNYXRjaExhYmVsS2V5cyBhbmQgTGFiZWxTZWxlY3Rvci5cbkFsc28sIE1hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBMYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYW4gYWxwaGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1pc21hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWlzbWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgTGFiZWxTZWxlY3RvcmAgYXMgYGtleSBub3RpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIE1pc21hdGNoTGFiZWxLZXlzIGFuZCBMYWJlbFNlbGVjdG9yLlxuQWxzbywgTWlzbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIExhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhbiBhbHBoYSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgdGhlIHNldCBvZiBuYW1lc3BhY2VzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIHNlbGVjdGVkIGJ5IHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBsaXN0ZWQgaW4gdGhlIG5hbWVzcGFjZXMgZmllbGQuXG5udWxsIHNlbGVjdG9yIGFuZCBudWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuXG5BbiBlbXB0eSBzZWxlY3RvciAoe30pIG1hdGNoZXMgYWxsIG5hbWVzcGFjZXMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIGxpc3RlZCBpbiB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgc2VsZWN0ZWQgYnkgbmFtZXNwYWNlU2VsZWN0b3IuXG5udWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidG9wb2xvZ3lLZXkiOnsiZGVzY3JpcHRpb24iOiJUaGlzIHBvZCBzaG91bGQgYmUgY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoIHRoZSBwb2RzIG1hdGNoaW5nXG50aGUgbGFiZWxTZWxlY3RvciBpbiB0aGUgc3BlY2lmaWVkIG5hbWVzcGFjZXMsIHdoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZVxud2hvc2UgdmFsdWUgb2YgdGhlIGxhYmVsIHdpdGgga2V5IHRvcG9sb2d5S2V5IG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaCBhbnkgb2YgdGhlXG5zZWxlY3RlZCBwb2RzIGlzIHJ1bm5pbmcuXG5FbXB0eSB0b3BvbG9neUtleSBpcyBub3QgYWxsb3dlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0b3BvbG9neUtleSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RBbnRpQWZmaW5pdHkiOnsiZGVzY3JpcHRpb24iOiJEZXNjcmliZXMgcG9kIGFudGktYWZmaW5pdHkgc2NoZWR1bGluZyBydWxlcyAoZS5nLiBhdm9pZCBwdXR0aW5nIHRoaXMgcG9kIGluIHRoZSBzYW1lIG5vZGUsIHpvbmUsIGV0Yy4gYXMgc29tZSBvdGhlciBwb2QocykpLiIsInByb3BlcnRpZXMiOnsicHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NoZWR1bGVyIHdpbGwgcHJlZmVyIHRvIHNjaGVkdWxlIHBvZHMgdG8gbm9kZXMgdGhhdCBzYXRpc2Z5XG50aGUgYW50aS1hZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2VcbmEgbm9kZSB0aGF0IHZpb2xhdGVzIG9uZSBvciBtb3JlIG9mIHRoZSBleHByZXNzaW9ucy4gVGhlIG5vZGUgdGhhdCBpc1xubW9zdCBwcmVmZXJyZWQgaXMgdGhlIG9uZSB3aXRoIHRoZSBncmVhdGVzdCBzdW0gb2Ygd2VpZ2h0cywgaS5lLlxuZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlXG5yZXF1ZXN0LCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmcgYW50aS1hZmZpbml0eSBleHByZXNzaW9ucywgZXRjLiksXG5jb21wdXRlIGEgc3VtIGJ5IGl0ZXJhdGluZyB0aHJvdWdoIHRoZSBlbGVtZW50cyBvZiB0aGlzIGZpZWxkIGFuZCBhZGRpbmdcblwid2VpZ2h0XCIgdG8gdGhlIHN1bSBpZiB0aGUgbm9kZSBoYXMgcG9kcyB3aGljaCBtYXRjaGVzIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybTsgdGhlXG5ub2RlKHMpIHdpdGggdGhlIGhpZ2hlc3Qgc3VtIGFyZSB0aGUgbW9zdCBwcmVmZXJyZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgd2VpZ2h0cyBvZiBhbGwgb2YgdGhlIG1hdGNoZWQgV2VpZ2h0ZWRQb2RBZmZpbml0eVRlcm0gZmllbGRzIGFyZSBhZGRlZCBwZXItbm9kZSB0byBmaW5kIHRoZSBtb3N0IHByZWZlcnJlZCBub2RlKHMpIiwicHJvcGVydGllcyI6eyJwb2RBZmZpbml0eVRlcm0iOnsiZGVzY3JpcHRpb24iOiJSZXF1aXJlZC4gQSBwb2QgYWZmaW5pdHkgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy5cbklmIGl0J3MgbnVsbCwgdGhpcyBQb2RBZmZpbml0eVRlcm0gbWF0Y2hlcyB3aXRoIG5vIFBvZHMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBMYWJlbFNlbGVjdG9yYCBhcyBga2V5IGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggTWF0Y2hMYWJlbEtleXMgYW5kIExhYmVsU2VsZWN0b3IuXG5BbHNvLCBNYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gTGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGFuIGFscGhhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtaXNtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1pc21hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYExhYmVsU2VsZWN0b3JgIGFzIGBrZXkgbm90aW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBNaXNtYXRjaExhYmVsS2V5cyBhbmQgTGFiZWxTZWxlY3Rvci5cbkFsc28sIE1pc21hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBMYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYW4gYWxwaGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZVNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIHRoZSBzZXQgb2YgbmFtZXNwYWNlcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgbGlzdGVkIGluIHRoZSBuYW1lc3BhY2VzIGZpZWxkLlxubnVsbCBzZWxlY3RvciBhbmQgbnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLlxuQW4gZW1wdHkgc2VsZWN0b3IgKHt9KSBtYXRjaGVzIGFsbCBuYW1lc3BhY2VzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZXMiOnsiZGVzY3JpcHRpb24iOiJuYW1lc3BhY2VzIHNwZWNpZmllcyBhIHN0YXRpYyBsaXN0IG9mIG5hbWVzcGFjZSBuYW1lcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBsaXN0ZWQgaW4gdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIHNlbGVjdGVkIGJ5IG5hbWVzcGFjZVNlbGVjdG9yLlxubnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgYW5kIG51bGwgbmFtZXNwYWNlU2VsZWN0b3IgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInRvcG9sb2d5S2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhpcyBwb2Qgc2hvdWxkIGJlIGNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCB0aGUgcG9kcyBtYXRjaGluZ1xudGhlIGxhYmVsU2VsZWN0b3IgaW4gdGhlIHNwZWNpZmllZCBuYW1lc3BhY2VzLCB3aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGVcbndob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSB0b3BvbG9neUtleSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYW55IG9mIHRoZVxuc2VsZWN0ZWQgcG9kcyBpcyBydW5uaW5nLlxuRW1wdHkgdG9wb2xvZ3lLZXkgaXMgbm90IGFsbG93ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidG9wb2xvZ3lLZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJ3ZWlnaHQiOnsiZGVzY3JpcHRpb24iOiJ3ZWlnaHQgYXNzb2NpYXRlZCB3aXRoIG1hdGNoaW5nIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybSxcbmluIHRoZSByYW5nZSAxLTEwMC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJwb2RBZmZpbml0eVRlcm0iLCJ3ZWlnaHQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwicmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IklmIHRoZSBhbnRpLWFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBhcmUgbm90IG1ldCBhdFxuc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLlxuSWYgdGhlIGFudGktYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGNlYXNlIHRvIGJlIG1ldFxuYXQgc29tZSBwb2ludCBkdXJpbmcgcG9kIGV4ZWN1dGlvbiAoZS5nLiBkdWUgdG8gYSBwb2QgbGFiZWwgdXBkYXRlKSwgdGhlXG5zeXN0ZW0gbWF5IG9yIG1heSBub3QgdHJ5IHRvIGV2ZW50dWFsbHkgZXZpY3QgdGhlIHBvZCBmcm9tIGl0cyBub2RlLlxuV2hlbiB0aGVyZSBhcmUgbXVsdGlwbGUgZWxlbWVudHMsIHRoZSBsaXN0cyBvZiBub2RlcyBjb3JyZXNwb25kaW5nIHRvIGVhY2hcbnBvZEFmZmluaXR5VGVybSBhcmUgaW50ZXJzZWN0ZWQsIGkuZS4gYWxsIHRlcm1zIG11c3QgYmUgc2F0aXNmaWVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyBhIHNldCBvZiBwb2RzIChuYW1lbHkgdGhvc2UgbWF0Y2hpbmcgdGhlIGxhYmVsU2VsZWN0b3JcbnJlbGF0aXZlIHRvIHRoZSBnaXZlbiBuYW1lc3BhY2UocykpIHRoYXQgdGhpcyBwb2Qgc2hvdWxkIGJlXG5jby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGgsXG53aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGUgd2hvc2UgdmFsdWUgb2ZcbnRoZSBsYWJlbCB3aXRoIGtleSBcdTAwM2N0b3BvbG9neUtleVx1MDAzZSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2hcbmEgcG9kIG9mIHRoZSBzZXQgb2YgcG9kcyBpcyBydW5uaW5nIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIGEgc2V0IG9mIHJlc291cmNlcywgaW4gdGhpcyBjYXNlIHBvZHMuXG5JZiBpdCdzIG51bGwsIHRoaXMgUG9kQWZmaW5pdHlUZXJtIG1hdGNoZXMgd2l0aCBubyBQb2RzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgTGFiZWxTZWxlY3RvcmAgYXMgYGtleSBpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIE1hdGNoTGFiZWxLZXlzIGFuZCBMYWJlbFNlbGVjdG9yLlxuQWxzbywgTWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIExhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhbiBhbHBoYSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWlzbWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNaXNtYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBMYWJlbFNlbGVjdG9yYCBhcyBga2V5IG5vdGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggTWlzbWF0Y2hMYWJlbEtleXMgYW5kIExhYmVsU2VsZWN0b3IuXG5BbHNvLCBNaXNtYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gTGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGFuIGFscGhhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciB0aGUgc2V0IG9mIG5hbWVzcGFjZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgc2VsZWN0ZWQgYnkgdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIGxpc3RlZCBpbiB0aGUgbmFtZXNwYWNlcyBmaWVsZC5cbm51bGwgc2VsZWN0b3IgYW5kIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi5cbkFuIGVtcHR5IHNlbGVjdG9yICh7fSkgbWF0Y2hlcyBhbGwgbmFtZXNwYWNlcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlcyBzcGVjaWZpZXMgYSBzdGF0aWMgbGlzdCBvZiBuYW1lc3BhY2UgbmFtZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgbGlzdGVkIGluIHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBzZWxlY3RlZCBieSBuYW1lc3BhY2VTZWxlY3Rvci5cbm51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IGFuZCBudWxsIG5hbWVzcGFjZVNlbGVjdG9yIG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmdcbnRoZSBsYWJlbFNlbGVjdG9yIGluIHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlcywgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlXG53aG9zZSB2YWx1ZSBvZiB0aGUgbGFiZWwgd2l0aCBrZXkgdG9wb2xvZ3lLZXkgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoIGFueSBvZiB0aGVcbnNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy5cbkVtcHR5IHRvcG9sb2d5S2V5IGlzIG5vdCBhbGxvd2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInRvcG9sb2d5S2V5Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImFsbG93ZWRTZWNjb21wQWN0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkFsbG93ZWRTZWNjb21wQWN0aW9ucyBpZiBzcGVjaWZpZWQsIGEgbGlzdCBvZiBhbGxvd2VkIHNlY2NvbXAgYWN0aW9ucy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkFjdGlvbiB0YWtlbiB1cG9uIFNlY2NvbXAgcnVsZSBtYXRjaCIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImFsbG93ZWRTeXNjYWxscyI6eyJkZXNjcmlwdGlvbiI6IkFsbG93ZWRTeXNjYWxscyBpZiBzcGVjaWZpZWQsIGEgbGlzdCBvZiBzeXN0ZW0gY2FsbHMgd2hpY2ggYXJlIGFsbG93ZWRcbmluIHNlY2NvbXAgcHJvZmlsZXMuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiZGFlbW9uUmVzb3VyY2VSZXF1aXJlbWVudHMiOnsiZGVzY3JpcHRpb24iOiJEYWVtb25SZXNvdXJjZVJlcXVpcmVtZW50cyBpZiBkZWZpbmVkLCBvdmVyd3JpdGVzIHRoZSBkZWZhdWx0IHJlc291cmNlIHJlcXVpcmVtZW50c1xub2YgU1BPRCBkYWVtb24uIiwicHJvcGVydGllcyI6eyJjbGFpbXMiOnsiZGVzY3JpcHRpb24iOiJDbGFpbXMgbGlzdHMgdGhlIG5hbWVzIG9mIHJlc291cmNlcywgZGVmaW5lZCBpbiBzcGVjLnJlc291cmNlQ2xhaW1zLFxudGhhdCBhcmUgdXNlZCBieSB0aGlzIGNvbnRhaW5lci5cblxuXG5UaGlzIGlzIGFuIGFscGhhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyB0aGVcbkR5bmFtaWNSZXNvdXJjZUFsbG9jYXRpb24gZmVhdHVyZSBnYXRlLlxuXG5cblRoaXMgZmllbGQgaXMgaW1tdXRhYmxlLiBJdCBjYW4gb25seSBiZSBzZXQgZm9yIGNvbnRhaW5lcnMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZUNsYWltIHJlZmVyZW5jZXMgb25lIGVudHJ5IGluIFBvZFNwZWMuUmVzb3VyY2VDbGFpbXMuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBtdXN0IG1hdGNoIHRoZSBuYW1lIG9mIG9uZSBlbnRyeSBpbiBwb2Quc3BlYy5yZXNvdXJjZUNsYWltcyBvZlxudGhlIFBvZCB3aGVyZSB0aGlzIGZpZWxkIGlzIHVzZWQuIEl0IG1ha2VzIHRoYXQgcmVzb3VyY2UgYXZhaWxhYmxlXG5pbnNpZGUgYSBjb250YWluZXIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LW1hcC1rZXlzIjpbIm5hbWUiXSwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6Im1hcCJ9LCJsaW1pdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiTGltaXRzIGRlc2NyaWJlcyB0aGUgbWF4aW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgYWxsb3dlZC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLlxuSWYgUmVxdWVzdHMgaXMgb21pdHRlZCBmb3IgYSBjb250YWluZXIsIGl0IGRlZmF1bHRzIHRvIExpbWl0cyBpZiB0aGF0IGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkLFxub3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIFJlcXVlc3RzIGNhbm5vdCBleGNlZWQgTGltaXRzLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImRpc2FibGVPY2lBcnRpZmFjdFNpZ25hdHVyZVZlcmlmaWNhdGlvbiI6eyJkZXNjcmlwdGlvbiI6IkRpc2FibGVPQ0lBcnRpZmFjdFNpZ25hdHVyZVZlcmlmaWNhdGlvbiBjYW4gYmUgdXNlZCB0byBkaXNhYmxlIE9DSVxuYXJ0aWZhY3Qgc2lnbmF0dXJlIHZlcmlmaWNhdGlvbi4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJlbmFibGVBcHBBcm1vciI6eyJkZXNjcmlwdGlvbiI6InRlbGxzIHRoZSBvcGVyYXRvciB3aGV0aGVyIG9yIG5vdCB0byBlbmFibGUgQXBwQXJtb3Igc3VwcG9ydCBmb3IgdGhpc1xuU1BPRCBpbnN0YW5jZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJlbmFibGVCcGZSZWNvcmRlciI6eyJkZXNjcmlwdGlvbiI6InRlbGxzIHRoZSBvcGVyYXRvciB3aGV0aGVyIG9yIG5vdCB0byBlbmFibGUgYnBmIHJlY29yZGVyIHN1cHBvcnQgZm9yIHRoaXNcblNQT0QgaW5zdGFuY2UuIiwidHlwZSI6ImJvb2xlYW4ifSwiZW5hYmxlTG9nRW5yaWNoZXIiOnsiZGVzY3JpcHRpb24iOiJ0ZWxscyB0aGUgb3BlcmF0b3Igd2hldGhlciBvciBub3QgdG8gZW5hYmxlIGxvZyBlbnJpY2htZW50IHN1cHBvcnQgZm9yIHRoaXNcblNQT0QgaW5zdGFuY2UuIiwidHlwZSI6ImJvb2xlYW4ifSwiZW5hYmxlTWVtb3J5T3B0aW1pemF0aW9uIjp7ImRlc2NyaXB0aW9uIjoiRW5hYmxlTWVtb3J5T3B0aW1pemF0aW9uIGVuYWJsZXMgbWVtb3J5IG9wdGltaXphdGlvbiBpbiB0aGUgY29udHJvbGxlclxucnVubmluZyBpbnNpZGUgb2YgU1BPRCBpbnN0YW5jZSBhbmQgd2F0Y2hpbmcgZm9yIHBvZHMgaW4gdGhlIGNsdXN0ZXIuXG5UaGlzIHdpbGwgbWFrZSB0aGUgY29udHJvbGxlciBsb2FkaW5nIGluIHRoZSBjYWNoZSBtZW1vcnkgb25seSB0aGUgcG9kc1xubGFiZWxsZWQgZXhwbGljaXRseSBmb3IgcHJvZmlsZSByZWNvcmRpbmcgd2l0aCAnc3BvLngtazhzLmlvL2VuYWJsZS1yZWNvcmRpbmc9dHJ1ZScuIiwidHlwZSI6ImJvb2xlYW4ifSwiZW5hYmxlUHJvZmlsaW5nIjp7ImRlc2NyaXB0aW9uIjoiRW5hYmxlUHJvZmlsaW5nIHRlbGxzIHRoZSBvcGVyYXRvciB3aGV0aGVyIG9yIG5vdCB0byBlbmFibGUgcHJvZmlsaW5nXG5zdXBwb3J0IGZvciB0aGlzIFNQT0QgaW5zdGFuY2UuIiwidHlwZSI6ImJvb2xlYW4ifSwiZW5hYmxlU2VsaW51eCI6eyJkZXNjcmlwdGlvbiI6InRlbGxzIHRoZSBvcGVyYXRvciB3aGV0aGVyIG9yIG5vdCB0byBlbmFibGUgU0VMaW51eCBzdXBwb3J0IGZvciB0aGlzXG5TUE9EIGluc3RhbmNlLiIsInR5cGUiOiJib29sZWFuIn0sImhvc3RQcm9jVm9sdW1lUGF0aCI6eyJkZXNjcmlwdGlvbiI6Ikhvc3RQcm9jVm9sdW1lUGF0aCBpcyB0aGUgcGF0aCBmb3Igc3BlY2lmeWluZyBhIGN1c3RvbSBob3N0IC9wcm9jXG52b2x1bWUsIHdoaWNoIGlzIHJlcXVpcmVkIGZvciB0aGUgbG9nLWVucmljaGVyIGFzIHdlbGwgYXMgYnBmLXJlY29yZGVyXG50byByZXRyaWV2ZSB0aGUgY29udGFpbmVyIElEIGZvciBhIHByb2Nlc3MgSUQuIFRoaXMgY2FuIGJlIGhlbHBmdWwgZm9yXG5uZXN0ZWQgZW52aXJvbm1lbnRzLCBmb3IgZXhhbXBsZSB3aGVuIHVzaW5nIFwia2luZFwiLiIsInR5cGUiOiJzdHJpbmcifSwiaW1hZ2VQdWxsU2VjcmV0cyI6eyJkZXNjcmlwdGlvbiI6IkltYWdlUHVsbFNlY3JldHMgaWYgZGVmaW5lZCwgbGlzdCBvZiByZWZlcmVuY2VzIHRvIHNlY3JldHMgaW4gdGhlIHNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yJ3Ncbm5hbWVzcGFjZSB0byB1c2UgZm9yIHB1bGxpbmcgdGhlIGltYWdlcyBmcm9tIFNQT0QgcG9kIGZyb20gYSBwcml2YXRlIHJlZ2lzdHJ5LiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTG9jYWxPYmplY3RSZWZlcmVuY2UgY29udGFpbnMgZW5vdWdoIGluZm9ybWF0aW9uIHRvIGxldCB5b3UgbG9jYXRlIHRoZVxucmVmZXJlbmNlZCBvYmplY3QgaW5zaWRlIHRoZSBzYW1lIG5hbWVzcGFjZS4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzXG5UT0RPOiBBZGQgb3RoZXIgdXNlZnVsIGZpZWxkcy4gYXBpVmVyc2lvbiwga2luZCwgdWlkPyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwidHlwZSI6ImFycmF5In0sInByaW9yaXR5Q2xhc3NOYW1lIjp7ImRlZmF1bHQiOiJzeXN0ZW0tbm9kZS1jcml0aWNhbCIsImRlc2NyaXB0aW9uIjoiUHJpb3JpdHlDbGFzc05hbWUgaWYgZGVmaW5lZCwgaW5kaWNhdGVzIHRoZSBzcG9kIHBvZCBwcmlvcml0eSBjbGFzcy4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGludXhPcHRpb25zIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyBvcHRpb25zIHNwZWNpZmljIHRvIHRoZSBTRUxpbnV4XG5mdW5jdGlvbmFsaXR5IG9mIHRoZSBTZWN1cml0eVByb2ZpbGVzT3BlcmF0b3IiLCJwcm9wZXJ0aWVzIjp7ImFsbG93ZWRTeXN0ZW1Qcm9maWxlcyI6eyJkZWZhdWx0IjpbImNvbnRhaW5lciJdLCJkZXNjcmlwdGlvbiI6Ikxpc3RzIHRoZSBwcm9maWxlcyBjb21pbmcgZnJvbSB0aGUgc3lzdGVtIGl0c2VsZiB0aGF0IGFyZVxuYWxsb3dlZCB0byBiZSBpbmhlcml0ZWQgYnkgd29ya2xvYWRzLiBVc2UgdGhpcyB3aXRoIGNhcmUsXG5hcyB0aGlzIG1pZ2h0IHByb3ZpZGUgYSBsb3Qgb2YgcGVybWlzc2lvbnMgZGVwZW5kaW5nIG9uIHRoZVxucG9saWN5LiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sInNlbGludXhUeXBlVGFnIjp7ImRlZmF1bHQiOiJzcGNfdCIsImRlc2NyaXB0aW9uIjoiSWYgc3BlY2lmaWVkLCB0aGUgU0VMaW51eCB0eXBlIHRhZyBhcHBsaWVkIHRvIHRoZSBzZWN1cml0eSBjb250ZXh0IG9mIFNQT0QuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0aWNXZWJob29rQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljV2ViaG9va0NvbmZpZyBpbmRpY2F0ZXMgd2hldGhlciB0aGUgd2ViaG9vayBjb25maWd1cmF0aW9uIGFuZCBpdHNcbnJlbGF0ZWQgcmVzb3VyY2VzIGFyZSBzdGF0aWNhbGx5IGRlcGxveWVkLiBJbiB0aGlzIGNhc2UsIHRoZSBvcGVyYXRvciB3aWxsXG5ub3QgY3JlYXRlIG9yIHVwZGF0ZSB0aGUgd2ViaG9vayBjb25maWd1cmF0aW9uIGFuZCBpdHMgcmVsYXRlZCByZXNvdXJjZXMuIiwidHlwZSI6ImJvb2xlYW4ifSwidG9sZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJJZiBzcGVjaWZpZWQsIHRoZSBTUE9EJ3MgdG9sZXJhdGlvbnMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgcG9kIHRoaXMgVG9sZXJhdGlvbiBpcyBhdHRhY2hlZCB0byB0b2xlcmF0ZXMgYW55IHRhaW50IHRoYXQgbWF0Y2hlc1xudGhlIHRyaXBsZSBcdTAwM2NrZXksdmFsdWUsZWZmZWN0XHUwMDNlIHVzaW5nIHRoZSBtYXRjaGluZyBvcGVyYXRvciBcdTAwM2NvcGVyYXRvclx1MDAzZS4iLCJwcm9wZXJ0aWVzIjp7ImVmZmVjdCI6eyJkZXNjcmlwdGlvbiI6IkVmZmVjdCBpbmRpY2F0ZXMgdGhlIHRhaW50IGVmZmVjdCB0byBtYXRjaC4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGVmZmVjdHMuXG5XaGVuIHNwZWNpZmllZCwgYWxsb3dlZCB2YWx1ZXMgYXJlIE5vU2NoZWR1bGUsIFByZWZlck5vU2NoZWR1bGUgYW5kIE5vRXhlY3V0ZS4iLCJ0eXBlIjoic3RyaW5nIn0sImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSBpcyB0aGUgdGFpbnQga2V5IHRoYXQgdGhlIHRvbGVyYXRpb24gYXBwbGllcyB0by4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGtleXMuXG5JZiB0aGUga2V5IGlzIGVtcHR5LCBvcGVyYXRvciBtdXN0IGJlIEV4aXN0czsgdGhpcyBjb21iaW5hdGlvbiBtZWFucyB0byBtYXRjaCBhbGwgdmFsdWVzIGFuZCBhbGwga2V5cy4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiT3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byB0aGUgdmFsdWUuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEV4aXN0cyBhbmQgRXF1YWwuIERlZmF1bHRzIHRvIEVxdWFsLlxuRXhpc3RzIGlzIGVxdWl2YWxlbnQgdG8gd2lsZGNhcmQgZm9yIHZhbHVlLCBzbyB0aGF0IGEgcG9kIGNhblxudG9sZXJhdGUgYWxsIHRhaW50cyBvZiBhIHBhcnRpY3VsYXIgY2F0ZWdvcnkuIiwidHlwZSI6InN0cmluZyJ9LCJ0b2xlcmF0aW9uU2Vjb25kcyI6eyJkZXNjcmlwdGlvbiI6IlRvbGVyYXRpb25TZWNvbmRzIHJlcHJlc2VudHMgdGhlIHBlcmlvZCBvZiB0aW1lIHRoZSB0b2xlcmF0aW9uICh3aGljaCBtdXN0IGJlXG5vZiBlZmZlY3QgTm9FeGVjdXRlLCBvdGhlcndpc2UgdGhpcyBmaWVsZCBpcyBpZ25vcmVkKSB0b2xlcmF0ZXMgdGhlIHRhaW50LiBCeSBkZWZhdWx0LFxuaXQgaXMgbm90IHNldCwgd2hpY2ggbWVhbnMgdG9sZXJhdGUgdGhlIHRhaW50IGZvcmV2ZXIgKGRvIG5vdCBldmljdCkuIFplcm8gYW5kXG5uZWdhdGl2ZSB2YWx1ZXMgd2lsbCBiZSB0cmVhdGVkIGFzIDAgKGV2aWN0IGltbWVkaWF0ZWx5KSBieSB0aGUgc3lzdGVtLiIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJWYWx1ZSBpcyB0aGUgdGFpbnQgdmFsdWUgdGhlIHRvbGVyYXRpb24gbWF0Y2hlcyB0by5cbklmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMsIHRoZSB2YWx1ZSBzaG91bGQgYmUgZW1wdHksIG90aGVyd2lzZSBqdXN0IGEgcmVndWxhciBzdHJpbmcuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwidmVyYm9zaXR5Ijp7ImRlc2NyaXB0aW9uIjoiVmVyYm9zaXR5IHNwZWNpZmllcyB0aGUgbG9nZ2luZyB2ZXJib3NpdHkgb2YgdGhlIGRhZW1vbi4iLCJ0eXBlIjoiaW50ZWdlciJ9LCJ3ZWJob29rT3B0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IldlYmhvb2tPcHRzIHNldCBjdXN0b20gbmFtZXNwYWNlIHNlbGVjdG9ycyBhbmQgZmFpbHVyZSBtb2RlIGZvclxuU1BPJ3Mgd2ViaG9va3MiLCJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImZhaWx1cmVQb2xpY3kiOnsiZGVzY3JpcHRpb24iOiJGYWlsdXJlUG9saWN5IHNldHMgdGhlIHdlYmhvb2sgZmFpbHVyZSBwb2xpY3kiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIHNwZWNpZmllcyB3aGljaCB3ZWJob29rIGRvIHdlIGNvbmZpZ3VyZSIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2VTZWxlY3RvciBzZXRzIHdlYmhvb2sncyBuYW1lc3BhY2Ugc2VsZWN0b3IiLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJvYmplY3RTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6Ik9iamVjdFNlbGVjdG9yIHNldHMgd2ViaG9vaydzIG9iamVjdCBzZWxlY3RvciIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTUE9EU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFNQT0QuIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBvZiB0aGUgcmVzb3VyY2UuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIENvbmRpdGlvbiB0aGF0IG1heSBhcHBseSB0byBhIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhpcyBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lXG5zdGF0dXMgdG8gYW5vdGhlci4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJBIE1lc3NhZ2UgY29udGFpbmluZyBkZXRhaWxzIGFib3V0IHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb21cbm9uZSBzdGF0dXMgdG8gYW5vdGhlciwgaWYgYW55LiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiQSBSZWFzb24gZm9yIHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIG9mIHRoaXMgY29uZGl0aW9uOyBpcyBpdCBjdXJyZW50bHkgVHJ1ZSwgRmFsc2UsIG9yIFVua25vd24/IiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBvZiB0aGlzIGNvbmRpdGlvbi4gQXQgbW9zdCBvbmUgb2YgZWFjaCBjb25kaXRpb24gdHlwZSBtYXkgYXBwbHkgdG9cbmEgcmVzb3VyY2UgYXQgYW55IHBvaW50IGluIHRpbWUuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgdGhlIHN0YXRlIHRoYXQgdGhlIHBvbGljeSBpcyBpbi4gQ2FuIGJlOlxuUEVORElORywgSU4tUFJPR1JFU1MsIFJVTk5JTkcgb3IgRVJST1IiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic2VsaW51eHByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTZWxpbnV4UHJvZmlsZSIsImxpc3RLaW5kIjoiU2VsaW51eFByb2ZpbGVMaXN0IiwicGx1cmFsIjoic2VsaW51eHByb2ZpbGVzIiwic2luZ3VsYXIiOiJzZWxpbnV4cHJvZmlsZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMudXNhZ2UiLCJuYW1lIjoiVXNhZ2UiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdHVzIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGEyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBzZWxpbnV4cHJvZmlsZXMgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFNlbGludXhQcm9maWxlLiIsInByb3BlcnRpZXMiOnsiYWxsb3ciOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIGFsbG93IHBvbGljeSBmb3IgdGhlIHByb2ZpbGUiLCJ0eXBlIjoib2JqZWN0In0sImRpc2FibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZXRoZXIgdGhlIHByb2ZpbGUgaXMgZGlzYWJsZWQgYW5kIHNob3VsZCBiZSBza2lwcGVkIGR1cmluZyByZWNvbmNpbGlhdGlvbi4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJpbmhlcml0Ijp7ImRlZmF1bHQiOlt7ImtpbmQiOiJTeXN0ZW0iLCJuYW1lIjoiY29udGFpbmVyIn1dLCJkZXNjcmlwdGlvbiI6IkEgU0VMaW51eFByb2ZpbGUgb3Igc2V0IG9mIHByb2ZpbGVzIHRoYXQgdGhpcyBpbmhlcml0cyBmcm9tLlxuTm90ZSB0aGF0IHRoZXkgbmVlZCB0byBiZSBpbiB0aGUgc2FtZSBuYW1lc3BhY2UuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJTeXN0ZW0iLCJkZXNjcmlwdGlvbiI6IlRoZSBLaW5kIG9mIHRoZSBwb2xpY3kgdGhhdCB0aGlzIGluaGVyaXRzIGZyb20uXG5DYW4gYmUgYSBTZWxpbnV4UHJvZmlsZSBvYmplY3QgT3IgXCJTeXN0ZW1cIiBpZiBhbiBhbHJlYWR5XG5pbnN0YWxsZWQgcG9saWN5IHdpbGwgYmUgdXNlZC5cblRoZSBhbGxvd2VkIFwiU3lzdGVtXCIgcG9saWNpZXMgYXJlIGF2YWlsYWJsZSBpbiB0aGVcblNlY3VyaXR5UHJvZmlsZXNPcGVyYXRvckRhZW1vbiBpbnN0YW5jZS4iLCJlbnVtIjpbIlN5c3RlbSIsIlNlbGludXhQcm9maWxlIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBwb2xpY3kgdGhhdCB0aGlzIGluaGVyaXRzIGZyb20uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJwZXJtaXNzaXZlIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlBlcm1pc3NpdmUsIHdoZW4gdHJ1ZSB3aWxsIGNhdXNlIHRoZSBTRUxpbnV4IHByb2ZpbGUgdG8gb25seVxubG9nIHZpb2xhdGlvbnMgaW5zdGVhZCBvZiBlbmZvcmNpbmcgdGhlbS4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTZWxpbnV4UHJvZmlsZVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBTZWxpbnV4UHJvZmlsZS4iLCJwcm9wZXJ0aWVzIjp7ImFjdGl2ZVdvcmtsb2FkcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBvZiB0aGUgcmVzb3VyY2UuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIENvbmRpdGlvbiB0aGF0IG1heSBhcHBseSB0byBhIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhpcyBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lXG5zdGF0dXMgdG8gYW5vdGhlci4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJBIE1lc3NhZ2UgY29udGFpbmluZyBkZXRhaWxzIGFib3V0IHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb21cbm9uZSBzdGF0dXMgdG8gYW5vdGhlciwgaWYgYW55LiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiQSBSZWFzb24gZm9yIHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIG9mIHRoaXMgY29uZGl0aW9uOyBpcyBpdCBjdXJyZW50bHkgVHJ1ZSwgRmFsc2UsIG9yIFVua25vd24/IiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBvZiB0aGlzIGNvbmRpdGlvbi4gQXQgbW9zdCBvbmUgb2YgZWFjaCBjb25kaXRpb24gdHlwZSBtYXkgYXBwbHkgdG9cbmEgcmVzb3VyY2UgYXQgYW55IHBvaW50IGluIHRpbWUuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlU3RhdGUgZGVmaW5lcyB0aGUgc3RhdGUgdGhhdCB0aGUgcHJvZmlsZSBpcyBpbi4gQSBwcm9maWxlIGluIHRoaXMgY29udGV4dFxucmVmZXJzIHRvIGEgU2VjY29tcFByb2ZpbGUgb3IgYSBTRUxpbnV4IHByb2ZpbGUsIHRoZSBzdGF0ZXMgYXJlIHNoYXJlZCBiZXR3ZWVuIHRoZW1cbmFzIHdlbGwgYXMgdGhlIG1hbmFnZW1lbnQgQVBJLiIsInR5cGUiOiJzdHJpbmcifSwidXNhZ2UiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIHRoZSBzdHJpbmcgdGhhdCB0aGUgU2VsaW51eFByb2ZpbGUgb2JqZWN0IGNhbiBiZVxucmVmZXJlbmNlZCBhcyBpbiBhIHBvZCBzZUxpbnV4T3B0aW9ucyBzZWN0aW9uLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicHJvZmlsZWJpbmRpbmdzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJQcm9maWxlQmluZGluZyIsImxpc3RLaW5kIjoiUHJvZmlsZUJpbmRpbmdMaXN0IiwicGx1cmFsIjoicHJvZmlsZWJpbmRpbmdzIiwic2luZ3VsYXIiOiJwcm9maWxlYmluZGluZyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVCaW5kaW5nIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBwcm9maWxlYmluZGluZ3MgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVCaW5kaW5nU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFByb2ZpbGVCaW5kaW5nLiIsInByb3BlcnRpZXMiOnsiaW1hZ2UiOnsiZGVzY3JpcHRpb24iOiJJbWFnZSBuYW1lIHdpdGhpbiBwb2QgY29udGFpbmVycyB0byBtYXRjaCB0byB0aGUgcHJvZmlsZS5cblVzZSB0aGUgXCIqXCIgc3RyaW5nIHRvIGJpbmQgdGhlIHByb2ZpbGUgdG8gYWxsIHBvZHMuIiwidHlwZSI6InN0cmluZyJ9LCJwcm9maWxlUmVmIjp7ImRlc2NyaXB0aW9uIjoiUHJvZmlsZVJlZiByZWZlcmVuY2VzIGEgU2VjY29tcFByb2ZpbGUgb3Igb3RoZXIgcHJvZmlsZSB0eXBlIGluIHRoZSBjdXJyZW50IG5hbWVzcGFjZS4iLCJwcm9wZXJ0aWVzIjp7ImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIG9mIG9iamVjdCB0byBiZSBib3VuZC4iLCJlbnVtIjpbIlNlY2NvbXBQcm9maWxlIiwiU2VsaW51eFByb2ZpbGUiXSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcHJvZmlsZSB3aXRoaW4gdGhlIGN1cnJlbnQgbmFtZXNwYWNlIHRvIHdoaWNoIHRvIGJpbmQgdGhlIHNlbGVjdGVkIHBvZHMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiaW1hZ2UiLCJwcm9maWxlUmVmIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUHJvZmlsZUJpbmRpbmdTdGF0dXMgY29udGFpbnMgc3RhdHVzIG9mIHRoZSBQcm9maWxlYmluZGluZy4iLCJwcm9wZXJ0aWVzIjp7ImFjdGl2ZVdvcmtsb2FkcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicHJvZmlsZXJlY29yZGluZ3Muc2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8ifSwic3BlYyI6eyJncm91cCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIiwibmFtZXMiOnsia2luZCI6IlByb2ZpbGVSZWNvcmRpbmciLCJsaXN0S2luZCI6IlByb2ZpbGVSZWNvcmRpbmdMaXN0IiwicGx1cmFsIjoicHJvZmlsZXJlY29yZGluZ3MiLCJzaW5ndWxhciI6InByb2ZpbGVyZWNvcmRpbmcifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5wb2RTZWxlY3RvciIsIm5hbWUiOiJQb2RTZWxlY3RvciIsInByaW9yaXR5IjoxMCwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVSZWNvcmRpbmcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHByb2ZpbGVyZWNvcmRpbmdzIEFQSS4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlUmVjb3JkaW5nU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFByb2ZpbGVSZWNvcmRpbmcuIiwicHJvcGVydGllcyI6eyJjb250YWluZXJzIjp7ImRlc2NyaXB0aW9uIjoiQ29udGFpbmVycyBpcyBhIHNldCBvZiBjb250YWluZXJzIHRvIHJlY29yZC4gVGhpcyBhbGxvd3MgdG8gc2VsZWN0XG5vbmx5IHNwZWNpZmljIGNvbnRhaW5lcnMgdG8gcmVjb3JkIGluc3RlYWQgb2YgYWxsIGNvbnRhaW5lcnMgcHJlc2VudFxuaW4gdGhlIHBvZC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJkaXNhYmxlUHJvZmlsZUFmdGVyUmVjb3JkaW5nIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkRpc2FibGVQcm9maWxlQWZ0ZXJSZWNvcmRpbmcgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIHByb2ZpbGUgc2hvdWxkIGJlIGRpc2FibGVkXG5hZnRlciByZWNvcmRpbmcgYW5kIHRodXMgc2tpcHBlZCBkdXJpbmcgcmVjb25jaWxlLiBJbiBjYXNlIG9mIFNFTGludXggcHJvZmlsZXMsXG5yZWNvbmNpbGUgY2FuIHRha2UgYSBzaWduaWZpY2FudCBhbW91bnQgb2YgdGltZSBhbmQgZm9yIGFsbCBwcm9maWxlcyBtaWdodCBub3QgYmUgbmVlZGVkLlxuVGhpcyBEZWZhdWx0cyB0byBmYWxzZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBvZiBvYmplY3QgdG8gYmUgcmVjb3JkZWQuIiwiZW51bSI6WyJTZWNjb21wUHJvZmlsZSIsIlNlbGludXhQcm9maWxlIl0sInR5cGUiOiJzdHJpbmcifSwibWVyZ2VTdHJhdGVneSI6eyJkZWZhdWx0Ijoibm9uZSIsImRlc2NyaXB0aW9uIjoiV2hldGhlciBvciBob3cgdG8gbWVyZ2UgcmVjb3JkZWQgcHJvZmlsZXMuIENhbiBiZSBvbmUgb2YgXCJub25lXCIgb3IgXCJjb250YWluZXJzXCIuXG5EZWZhdWx0IGlzIFwibm9uZVwiLiIsImVudW0iOlsibm9uZSIsImNvbnRhaW5lcnMiXSwidHlwZSI6InN0cmluZyJ9LCJwb2RTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlBvZFNlbGVjdG9yIHNlbGVjdHMgdGhlIHBvZHMgdG8gcmVjb3JkLiBUaGlzIGZpZWxkIGZvbGxvd3Mgc3RhbmRhcmRcbmxhYmVsIHNlbGVjdG9yIHNlbWFudGljcy4gQW4gZW1wdHkgcG9kU2VsZWN0b3IgbWF0Y2hlcyBhbGwgcG9kcyBpbiB0aGlzXG5uYW1lc3BhY2UuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwicmVjb3JkZXIiOnsiZGVzY3JpcHRpb24iOiJSZWNvcmRlciB0byBiZSB1c2VkLiIsImVudW0iOlsiYnBmIiwibG9ncyJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJraW5kIiwicG9kU2VsZWN0b3IiLCJyZWNvcmRlciJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVSZWNvcmRpbmdTdGF0dXMgY29udGFpbnMgc3RhdHVzIG9mIHRoZSBQcm9maWxlUmVjb3JkaW5nLiIsInByb3BlcnRpZXMiOnsiYWN0aXZlV29ya2xvYWRzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicmF3c2VsaW51eHByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJSYXdTZWxpbnV4UHJvZmlsZSIsImxpc3RLaW5kIjoiUmF3U2VsaW51eFByb2ZpbGVMaXN0IiwicGx1cmFsIjoicmF3c2VsaW51eHByb2ZpbGVzIiwic2luZ3VsYXIiOiJyYXdzZWxpbnV4cHJvZmlsZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMudXNhZ2UiLCJuYW1lIjoiVXNhZ2UiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdHVzIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGEyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlJhd1NlbGludXhQcm9maWxlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSByYXdzZWxpbnV4cHJvZmlsZXMgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlJhd1NlbGludXhQcm9maWxlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFJhd1NlbGludXhQcm9maWxlLiIsInByb3BlcnRpZXMiOnsiZGlzYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hldGhlciB0aGUgcHJvZmlsZSBpcyBkaXNhYmxlZCBhbmQgc2hvdWxkIGJlIHNraXBwZWQgZHVyaW5nIHJlY29uY2lsaWF0aW9uLiIsInR5cGUiOiJib29sZWFuIn0sInBvbGljeSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFNlbGludXhQcm9maWxlLiIsInByb3BlcnRpZXMiOnsiYWN0aXZlV29ya2xvYWRzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIG9mIHRoZSByZXNvdXJjZS4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgQ29uZGl0aW9uIHRoYXQgbWF5IGFwcGx5IHRvIGEgcmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGlzIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmVcbnN0YXR1cyB0byBhbm90aGVyLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6IkEgTWVzc2FnZSBjb250YWluaW5nIGRldGFpbHMgYWJvdXQgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbVxub25lIHN0YXR1cyB0byBhbm90aGVyLCBpZiBhbnkuIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJBIFJlYXNvbiBmb3IgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgb2YgdGhpcyBjb25kaXRpb247IGlzIGl0IGN1cnJlbnRseSBUcnVlLCBGYWxzZSwgb3IgVW5rbm93bj8iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoaXMgY29uZGl0aW9uLiBBdCBtb3N0IG9uZSBvZiBlYWNoIGNvbmRpdGlvbiB0eXBlIG1heSBhcHBseSB0b1xuYSByZXNvdXJjZSBhdCBhbnkgcG9pbnQgaW4gdGltZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVTdGF0ZSBkZWZpbmVzIHRoZSBzdGF0ZSB0aGF0IHRoZSBwcm9maWxlIGlzIGluLiBBIHByb2ZpbGUgaW4gdGhpcyBjb250ZXh0XG5yZWZlcnMgdG8gYSBTZWNjb21wUHJvZmlsZSBvciBhIFNFTGludXggcHJvZmlsZSwgdGhlIHN0YXRlcyBhcmUgc2hhcmVkIGJldHdlZW4gdGhlbVxuYXMgd2VsbCBhcyB0aGUgbWFuYWdlbWVudCBBUEkuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2FnZSI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgdGhlIHN0cmluZyB0aGF0IHRoZSBTZWxpbnV4UHJvZmlsZSBvYmplY3QgY2FuIGJlXG5yZWZlcmVuY2VkIGFzIGluIGEgcG9kIHNlTGludXhPcHRpb25zIHNlY3Rpb24uIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJhcHBhcm1vcnByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJBcHBBcm1vclByb2ZpbGUiLCJsaXN0S2luZCI6IkFwcEFybW9yUHJvZmlsZUxpc3QiLCJwbHVyYWwiOiJhcHBhcm1vcnByb2ZpbGVzIiwic2hvcnROYW1lcyI6WyJhYSJdLCJzaW5ndWxhciI6ImFwcGFybW9ycHJvZmlsZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkFwcEFybW9yUHJvZmlsZSBpcyB0aGUgU2NoZW1hIGZvciB0aGUgYXBwYXJtb3Jwcm9maWxlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkFwcEFybW9yUHJvZmlsZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBBcHBBcm1vclByb2ZpbGUiLCJwcm9wZXJ0aWVzIjp7InBvbGljeSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJwb2xpY3kiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJBcHBBcm1vclByb2ZpbGVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQXBwQXJtb3JQcm9maWxlIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwb2QifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRoZW50aWNhdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInN1YmplY3RhY2Nlc3NyZXZpZXdzIiwidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibm9kZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbImFwcGFybW9ycHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbImFwcGFybW9ycHJvZmlsZXMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJkZWxldGUiLCJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyJdLCJyZXNvdXJjZXMiOlsiYXBwYXJtb3Jwcm9maWxlcy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGVyZWNvcmRpbmdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJyYXdzZWxpbnV4cHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInJhd3NlbGludXhwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJyYXdzZWxpbnV4cHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWNjb21wcHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY2NvbXBwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWNjb21wcHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWN1cml0eXByb2ZpbGVub2Rlc3RhdHVzZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY3VyaXR5cHJvZmlsZXNvcGVyYXRvcmRhZW1vbnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWxpbnV4cHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlbGludXhwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWxpbnV4cHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby13ZWJob29rIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJldmVudHMiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGViaW5kaW5ncyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyJdLCJyZXNvdXJjZXMiOlsicHJvZmlsZWJpbmRpbmdzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsiZGVsZXRlIiwiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGViaW5kaW5ncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGVyZWNvcmRpbmdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJwcm9maWxlcmVjb3JkaW5ncy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJwcm9maWxlcmVjb3JkaW5ncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY2NvbXBwcm9maWxlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlbGludXhwcm9maWxlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby1tZXRyaWNzLWNsaWVudCJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9tZXRyaWNzIiwiL21ldHJpY3Mtc3BvZCJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJwb2RzIiwic2VydmljZXMiLCJlbmRwb2ludHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8tbWV0cmljcy1jbGllbnQifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJuYW1lIjoic3BvLW1ldHJpY3MtY2xpZW50In0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoiZGVmYXVsdCIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1zZWN1cml0eS1wcm9maWxlcyJ9LHsia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8td2ViaG9vayJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm5hbWUiOiJzcG8td2ViaG9vayJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InNwby13ZWJob29rIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LXNlY3VyaXR5LXByb2ZpbGVzIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG9kIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibmFtZSI6InNwb2QifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJzcG9kIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LXNlY3VyaXR5LXByb2ZpbGVzIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic3BvLXdlYmhvb2sifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJjb29yZGluYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJsZWFzZXMiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbImNvb3JkaW5hdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VOYW1lcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci13ZWJob29rLWxvY2siXSwicmVzb3VyY2VzIjpbImxlYXNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInNlY3VyaXR5Y29udGV4dGNvbnN0cmFpbnRzIl0sInZlcmJzIjpbInVzZSJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic3BvZCJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbInNlY3VyaXR5Lm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsic2VjdXJpdHljb250ZXh0Y29uc3RyYWludHMiXSwidmVyYnMiOlsidXNlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwb2QifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiUm9sZSIsIm5hbWUiOiJzcG9kIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoic3BvZCIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1zZWN1cml0eS1wcm9maWxlcyJ9XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby13ZWJob29rIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IlJvbGUiLCJuYW1lIjoic3BvLXdlYmhvb2sifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJzcG8td2ViaG9vayJ9XX0=
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VjcmV0IiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsia3ViZXJuZXRlcy5pby9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRlZmF1bHQifSwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJtZXRyaWNzLXRva2VuIn0sInR5cGUiOiJrdWJlcm5ldGVzLmlvL3NlcnZpY2UtYWNjb3VudC10b2tlbiJ9
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8td2ViaG9vayJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG9kIn19
relatedImages:
  - image: registry.redhat.io/compliance/openshift-security-profiles-operator-bundle@sha256:40771028def743730a779736ab7465113645edd9e1d45cb7e69eaaf95531584b
    name: ""
  - image: registry.redhat.io/compliance/openshift-security-profiles-rhel8-operator@sha256:c18e3ec3851f3f11f69b990a4890b9fed8fe9d5c4d769857db623e56ff03bac6
    name: security-profiles-operator
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel8@sha256:30c41f55a1696d3cd4e52a2bd1acedf390f98993ea348c01e554a3158069f95c
    name: selinuxd
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel8@sha256:30c41f55a1696d3cd4e52a2bd1acedf390f98993ea348c01e554a3158069f95c
    name: selinuxd_el8
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel9@sha256:e70bc58c180655b98f5f1cda84d1314f57f9df919cd184183d91544e26849dd0
    name: selinuxd_el9
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1172e150fff22c5eeab572f26961f3f53fbf896ee76d08c7503cfe2777c55458
    name: rbac_proxy
schema: olm.bundle
---
image: registry.redhat.io/compliance/openshift-security-profiles-operator-bundle@sha256:40771028def743730a779736ab7465113645edd9e1d45cb7e69eaaf95531584b
name: security-profiles-operator.v0.9.0
package: security-profiles-operator
properties:
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: AppArmorProfile
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: ProfileBinding
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: ProfileRecording
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: RawSelinuxProfile
      version: v1alpha2
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SeccompProfile
      version: v1beta1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SecurityProfileNodeStatus
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SecurityProfilesOperatorDaemon
      version: v1alpha1
  - type: olm.gvk
    value:
      group: security-profiles-operator.x-k8s.io
      kind: SelinuxProfile
      version: v1alpha2
  - type: olm.package
    value:
      packageName: security-profiles-operator
      version: 0.9.0
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE3LjIifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoiYXBwYXJtb3Jwcm9maWxlcy5zZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iLCJuYW1lcyI6eyJraW5kIjoiQXBwQXJtb3JQcm9maWxlIiwibGlzdEtpbmQiOiJBcHBBcm1vclByb2ZpbGVMaXN0IiwicGx1cmFsIjoiYXBwYXJtb3Jwcm9maWxlcyIsInNob3J0TmFtZXMiOlsiYWEiXSwic2luZ3VsYXIiOiJhcHBhcm1vcnByb2ZpbGUifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXR1cyIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQXBwQXJtb3JQcm9maWxlIGlzIGEgY2x1c3RlciBsZXZlbCBzcGVjaWZpY2F0aW9uIGZvciBhbiBBcHBBcm1vciBwcm9maWxlLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkFwcEFybW9yUHJvZmlsZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBBcHBBcm1vclByb2ZpbGUuIiwicHJvcGVydGllcyI6eyJhYnN0cmFjdCI6eyJkZXNjcmlwdGlvbiI6IkFic3RyYWN0IHN0b3JlcyB0aGUgYXBwYXJtb3IgcHJvZmlsZSBhbGxvdyBsaXN0cyBmb3IgZXhlY3V0YWJsZSwgZmlsZSwgbmV0d29yayBhbmQgY2FwYWJpbGl0aWVzIGFjY2Vzcy4iLCJwcm9wZXJ0aWVzIjp7ImNhcGFiaWxpdHkiOnsiZGVzY3JpcHRpb24iOiJDYXBhYmlsaXR5IHJ1bGVzIGZvciBMaW51eCBjYXBhYmlsaXRpZXMuIiwicHJvcGVydGllcyI6eyJhbGxvd2VkQ2FwYWJpbGl0aWVzIjp7ImRlc2NyaXB0aW9uIjoiQWxsb3dlZENhcGFiaWxpdGllcyBsb3N0IG9mIGFsbG93ZWQgY2FwYWJpbGl0aWVzLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sImV4ZWN1dGFibGUiOnsiZGVzY3JpcHRpb24iOiJFeGVjdXRhYmxlIHJ1bGVzIGZvciBhbGxvd2VkIGV4ZWN1dGFibGVzLiIsInByb3BlcnRpZXMiOnsiYWxsb3dlZEV4ZWN1dGFibGVzIjp7ImRlc2NyaXB0aW9uIjoiQWxsb3dlZEV4ZWN1dGFibGVzIGxpc3Qgb2YgYWxsb3dlZCBleGVjdXRhYmxlcy4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJhbGxvd2VkTGlicmFyaWVzIjp7ImRlc2NyaXB0aW9uIjoiQWxsb3dlZExpYnJhcmllcyBsaXN0IG9mIGFsbG93ZWQgbGlicmFyaWVzLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sImZpbGVzeXN0ZW0iOnsiZGVzY3JpcHRpb24iOiJGaWxlc3lzdGVtIHJ1bGVzIGZvciBmaWxlc3lzdGVtIGFjY2Vzcy4iLCJwcm9wZXJ0aWVzIjp7InJlYWRPbmx5UGF0aHMiOnsiZGVzY3JpcHRpb24iOiJSZWFkT25seVBhdGhzIGxpc3Qgb2YgYWxsb3dlZCByZWFkIG9ubHkgZmlsZSBwYXRocy4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJyZWFkV3JpdGVQYXRocyI6eyJkZXNjcmlwdGlvbiI6IlJlYWRXcml0ZVBhdGhzIGxpc3Qgb2YgYWxsb3dlZCByZWFkIHdyaXRlIGZpbGUgcGF0aHMuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwid3JpdGVPbmx5UGF0aHMiOnsiZGVzY3JpcHRpb24iOiJXcml0ZU9ubHlQYXRocyBsaXN0IG9mIGFsbG93ZWQgd3JpdGUgb25seSBmaWxlIHBhdGhzLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sIm5ldHdvcmsiOnsiZGVzY3JpcHRpb24iOiJOZXR3b3JrIHJ1bGVzIGZvciBuZXR3b3JrIGFjY2Vzcy4iLCJwcm9wZXJ0aWVzIjp7ImFsbG93UmF3Ijp7ImRlc2NyaXB0aW9uIjoiQWxsb3dSYXcgYWxsb3dzIHJhdyBzb2NrZXRzLiIsInR5cGUiOiJib29sZWFuIn0sImFsbG93ZWRQcm90b2NvbHMiOnsiZGVzY3JpcHRpb24iOiJQcm90b2NvbHMga2VlcHMgdGhlIGFsbG93ZWQgbmV0d29ya2luZyBwcm90b2NvbHMuIiwicHJvcGVydGllcyI6eyJhbGxvd1RjcCI6eyJkZXNjcmlwdGlvbiI6IkFsbG93VENQIGFsbG93cyBUQ1Agc29ja2V0IGNvbm5lY3Rpb25zLiIsInR5cGUiOiJib29sZWFuIn0sImFsbG93VWRwIjp7ImRlc2NyaXB0aW9uIjoiQWxsb3dVRFAgYWxsb3dzIFVEUCBzb2NrZXRzIGNvbm5lY3Rpb25zLiIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImNvbXBsYWluTW9kZSI6eyJkZXNjcmlwdGlvbiI6IkNvbXBsYWluTW9kZSBwbGFjZXMgdGhlIGFwcGFybW9yIHByb2ZpbGUgaW50byBcImNvbXBsYWluXCIgbW9kZSwgYnkgZGVmYXVsdCBpcyBwbGFjZWQgaW4gXCJlbmZvcmNlXCIgbW9kZS5cbkluIGNvbXBsYWluIG1vZGUsIGlmIGEgZ2l2ZW4gYWN0aW9uIGlzIG5vdCBhbGxvd2VkLCBpdCB3aWxsIGJlIGFsbG93ZWQsIGJ1dCB0aGlzIHZpb2xhdGlvbiB3aWxsIGJlXG5sb2dnZWQgd2l0aCBhIHRhZyBvZiBhY2Nlc3MgYmVpbmcgXCJBTExPV0VEIHVuY29uZmluZWRcIi4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJkaXNhYmxlZCI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJXaGV0aGVyIHRoZSBwcm9maWxlIGlzIGRpc2FibGVkIGFuZCBzaG91bGQgYmUgc2tpcHBlZCBkdXJpbmcgcmVjb25jaWxpYXRpb24uIiwidHlwZSI6ImJvb2xlYW4ifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQXBwQXJtb3JQcm9maWxlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEFwcEFybW9yUHJvZmlsZS4iLCJwcm9wZXJ0aWVzIjp7ImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIG9mIHRoZSByZXNvdXJjZS4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgQ29uZGl0aW9uIHRoYXQgbWF5IGFwcGx5IHRvIGEgcmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGlzIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmVcbnN0YXR1cyB0byBhbm90aGVyLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6IkEgTWVzc2FnZSBjb250YWluaW5nIGRldGFpbHMgYWJvdXQgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbVxub25lIHN0YXR1cyB0byBhbm90aGVyLCBpZiBhbnkuIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJBIFJlYXNvbiBmb3IgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgb2YgdGhpcyBjb25kaXRpb247IGlzIGl0IGN1cnJlbnRseSBUcnVlLCBGYWxzZSwgb3IgVW5rbm93bj8iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoaXMgY29uZGl0aW9uLiBBdCBtb3N0IG9uZSBvZiBlYWNoIGNvbmRpdGlvbiB0eXBlIG1heSBhcHBseSB0b1xuYSByZXNvdXJjZSBhdCBhbnkgcG9pbnQgaW4gdGltZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVTdGF0ZSBkZWZpbmVzIHRoZSBzdGF0ZSB0aGF0IHRoZSBwcm9maWxlIGlzIGluLiBBIHByb2ZpbGUgaW4gdGhpcyBjb250ZXh0XG5yZWZlcnMgdG8gYSBTZWNjb21wUHJvZmlsZSBvciBhIFNFTGludXggcHJvZmlsZSwgdGhlIHN0YXRlcyBhcmUgc2hhcmVkIGJldHdlZW4gdGhlbVxuYXMgd2VsbCBhcyB0aGUgbWFuYWdlbWVudCBBUEkuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE3LjIifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic2VjdXJpdHlwcm9maWxlbm9kZXN0YXR1c2VzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTZWN1cml0eVByb2ZpbGVOb2RlU3RhdHVzIiwibGlzdEtpbmQiOiJTZWN1cml0eVByb2ZpbGVOb2RlU3RhdHVzTGlzdCIsInBsdXJhbCI6InNlY3VyaXR5cHJvZmlsZW5vZGVzdGF0dXNlcyIsInNob3J0TmFtZXMiOlsic3BucyJdLCJzaW5ndWxhciI6InNlY3VyaXR5cHJvZmlsZW5vZGVzdGF0dXMifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn0seyJqc29uUGF0aCI6Ii5ub2RlTmFtZSIsIm5hbWUiOiJOb2RlIiwicHJpb3JpdHkiOjEwLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiU2VjdXJpdHlQcm9maWxlTm9kZVN0YXR1cyBpcyBhIHBlci1ub2RlIHN0YXR1cyBvZiBhIHNlY3VyaXR5IHByb2ZpbGUiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sIm5vZGVOYW1lIjp7InR5cGUiOiJzdHJpbmcifSwic3BlYyI6eyJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVTdGF0ZSBkZWZpbmVzIHRoZSBzdGF0ZSB0aGF0IHRoZSBwcm9maWxlIGlzIGluLiBBIHByb2ZpbGUgaW4gdGhpcyBjb250ZXh0XG5yZWZlcnMgdG8gYSBTZWNjb21wUHJvZmlsZSBvciBhIFNFTGludXggcHJvZmlsZSwgdGhlIHN0YXRlcyBhcmUgc2hhcmVkIGJldHdlZW4gdGhlbVxuYXMgd2VsbCBhcyB0aGUgbWFuYWdlbWVudCBBUEkuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibm9kZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnt9fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE3LjIifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic2VsaW51eHByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTZWxpbnV4UHJvZmlsZSIsImxpc3RLaW5kIjoiU2VsaW51eFByb2ZpbGVMaXN0IiwicGx1cmFsIjoic2VsaW51eHByb2ZpbGVzIiwic2luZ3VsYXIiOiJzZWxpbnV4cHJvZmlsZSJ9LCJzY29wZSI6IkNsdXN0ZXIiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMudXNhZ2UiLCJuYW1lIjoiVXNhZ2UiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdHVzIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGEyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBzZWxpbnV4cHJvZmlsZXMgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFNlbGludXhQcm9maWxlLiIsInByb3BlcnRpZXMiOnsiYWxsb3ciOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIGFsbG93IHBvbGljeSBmb3IgdGhlIHByb2ZpbGUiLCJ0eXBlIjoib2JqZWN0In0sImRpc2FibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZXRoZXIgdGhlIHByb2ZpbGUgaXMgZGlzYWJsZWQgYW5kIHNob3VsZCBiZSBza2lwcGVkIGR1cmluZyByZWNvbmNpbGlhdGlvbi4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJpbmhlcml0Ijp7ImRlZmF1bHQiOlt7ImtpbmQiOiJTeXN0ZW0iLCJuYW1lIjoiY29udGFpbmVyIn1dLCJkZXNjcmlwdGlvbiI6IkEgU0VMaW51eFByb2ZpbGUgb3Igc2V0IG9mIHByb2ZpbGVzIHRoYXQgdGhpcyBpbmhlcml0cyBmcm9tLlxuTm90ZSB0aGF0IHRoZXkgbmVlZCB0byBiZSBpbiB0aGUgc2FtZSBuYW1lc3BhY2UuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJTeXN0ZW0iLCJkZXNjcmlwdGlvbiI6IlRoZSBLaW5kIG9mIHRoZSBwb2xpY3kgdGhhdCB0aGlzIGluaGVyaXRzIGZyb20uXG5DYW4gYmUgYSBTZWxpbnV4UHJvZmlsZSBvYmplY3QgT3IgXCJTeXN0ZW1cIiBpZiBhbiBhbHJlYWR5XG5pbnN0YWxsZWQgcG9saWN5IHdpbGwgYmUgdXNlZC5cblRoZSBhbGxvd2VkIFwiU3lzdGVtXCIgcG9saWNpZXMgYXJlIGF2YWlsYWJsZSBpbiB0aGVcblNlY3VyaXR5UHJvZmlsZXNPcGVyYXRvckRhZW1vbiBpbnN0YW5jZS4iLCJlbnVtIjpbIlN5c3RlbSIsIlNlbGludXhQcm9maWxlIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBwb2xpY3kgdGhhdCB0aGlzIGluaGVyaXRzIGZyb20uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJwZXJtaXNzaXZlIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlBlcm1pc3NpdmUsIHdoZW4gdHJ1ZSB3aWxsIGNhdXNlIHRoZSBTRUxpbnV4IHByb2ZpbGUgdG8gb25seVxubG9nIHZpb2xhdGlvbnMgaW5zdGVhZCBvZiBlbmZvcmNpbmcgdGhlbS4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTZWxpbnV4UHJvZmlsZVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBTZWxpbnV4UHJvZmlsZS4iLCJwcm9wZXJ0aWVzIjp7ImFjdGl2ZVdvcmtsb2FkcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBvZiB0aGUgcmVzb3VyY2UuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIENvbmRpdGlvbiB0aGF0IG1heSBhcHBseSB0byBhIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhpcyBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lXG5zdGF0dXMgdG8gYW5vdGhlci4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJBIE1lc3NhZ2UgY29udGFpbmluZyBkZXRhaWxzIGFib3V0IHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb21cbm9uZSBzdGF0dXMgdG8gYW5vdGhlciwgaWYgYW55LiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiQSBSZWFzb24gZm9yIHRoaXMgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIG9mIHRoaXMgY29uZGl0aW9uOyBpcyBpdCBjdXJyZW50bHkgVHJ1ZSwgRmFsc2UsIG9yIFVua25vd24/IiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBvZiB0aGlzIGNvbmRpdGlvbi4gQXQgbW9zdCBvbmUgb2YgZWFjaCBjb25kaXRpb24gdHlwZSBtYXkgYXBwbHkgdG9cbmEgcmVzb3VyY2UgYXQgYW55IHBvaW50IGluIHRpbWUuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlU3RhdGUgZGVmaW5lcyB0aGUgc3RhdGUgdGhhdCB0aGUgcHJvZmlsZSBpcyBpbi4gQSBwcm9maWxlIGluIHRoaXMgY29udGV4dFxucmVmZXJzIHRvIGEgU2VjY29tcFByb2ZpbGUgb3IgYSBTRUxpbnV4IHByb2ZpbGUsIHRoZSBzdGF0ZXMgYXJlIHNoYXJlZCBiZXR3ZWVuIHRoZW1cbmFzIHdlbGwgYXMgdGhlIG1hbmFnZW1lbnQgQVBJLiIsInR5cGUiOiJzdHJpbmcifSwidXNhZ2UiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIHRoZSBzdHJpbmcgdGhhdCB0aGUgU2VsaW51eFByb2ZpbGUgb2JqZWN0IGNhbiBiZVxucmVmZXJlbmNlZCBhcyBpbiBhIHBvZCBzZUxpbnV4T3B0aW9ucyBzZWN0aW9uLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE3LjIifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicHJvZmlsZWJpbmRpbmdzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJQcm9maWxlQmluZGluZyIsImxpc3RLaW5kIjoiUHJvZmlsZUJpbmRpbmdMaXN0IiwicGx1cmFsIjoicHJvZmlsZWJpbmRpbmdzIiwic2luZ3VsYXIiOiJwcm9maWxlYmluZGluZyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVCaW5kaW5nIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBwcm9maWxlYmluZGluZ3MgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVCaW5kaW5nU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFByb2ZpbGVCaW5kaW5nLiIsInByb3BlcnRpZXMiOnsiaW1hZ2UiOnsiZGVzY3JpcHRpb24iOiJJbWFnZSBuYW1lIHdpdGhpbiBwb2QgY29udGFpbmVycyB0byBtYXRjaCB0byB0aGUgcHJvZmlsZS5cblVzZSB0aGUgXCIqXCIgc3RyaW5nIHRvIGJpbmQgdGhlIHByb2ZpbGUgdG8gYWxsIHBvZHMuIiwidHlwZSI6InN0cmluZyJ9LCJwcm9maWxlUmVmIjp7ImRlc2NyaXB0aW9uIjoiUHJvZmlsZVJlZiByZWZlcmVuY2VzIGEgU2VjY29tcFByb2ZpbGUgb3Igb3RoZXIgcHJvZmlsZSB0eXBlIGluIHRoZSBjdXJyZW50IG5hbWVzcGFjZS4iLCJwcm9wZXJ0aWVzIjp7ImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIG9mIG9iamVjdCB0byBiZSBib3VuZC4iLCJlbnVtIjpbIlNlY2NvbXBQcm9maWxlIiwiU2VsaW51eFByb2ZpbGUiXSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcHJvZmlsZSB3aXRoaW4gdGhlIGN1cnJlbnQgbmFtZXNwYWNlIHRvIHdoaWNoIHRvIGJpbmQgdGhlIHNlbGVjdGVkIHBvZHMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiaW1hZ2UiLCJwcm9maWxlUmVmIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUHJvZmlsZUJpbmRpbmdTdGF0dXMgY29udGFpbnMgc3RhdHVzIG9mIHRoZSBQcm9maWxlYmluZGluZy4iLCJwcm9wZXJ0aWVzIjp7ImFjdGl2ZVdvcmtsb2FkcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE3LjIifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicHJvZmlsZXJlY29yZGluZ3Muc2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8ifSwic3BlYyI6eyJncm91cCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIiwibmFtZXMiOnsia2luZCI6IlByb2ZpbGVSZWNvcmRpbmciLCJsaXN0S2luZCI6IlByb2ZpbGVSZWNvcmRpbmdMaXN0IiwicGx1cmFsIjoicHJvZmlsZXJlY29yZGluZ3MiLCJzaW5ndWxhciI6InByb2ZpbGVyZWNvcmRpbmcifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5wb2RTZWxlY3RvciIsIm5hbWUiOiJQb2RTZWxlY3RvciIsInByaW9yaXR5IjoxMCwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVSZWNvcmRpbmcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHByb2ZpbGVyZWNvcmRpbmdzIEFQSS4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlUmVjb3JkaW5nU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFByb2ZpbGVSZWNvcmRpbmcuIiwicHJvcGVydGllcyI6eyJjb250YWluZXJzIjp7ImRlc2NyaXB0aW9uIjoiQ29udGFpbmVycyBpcyBhIHNldCBvZiBjb250YWluZXJzIHRvIHJlY29yZC4gVGhpcyBhbGxvd3MgdG8gc2VsZWN0XG5vbmx5IHNwZWNpZmljIGNvbnRhaW5lcnMgdG8gcmVjb3JkIGluc3RlYWQgb2YgYWxsIGNvbnRhaW5lcnMgcHJlc2VudFxuaW4gdGhlIHBvZC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJkaXNhYmxlUHJvZmlsZUFmdGVyUmVjb3JkaW5nIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkRpc2FibGVQcm9maWxlQWZ0ZXJSZWNvcmRpbmcgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIHByb2ZpbGUgc2hvdWxkIGJlIGRpc2FibGVkXG5hZnRlciByZWNvcmRpbmcgYW5kIHRodXMgc2tpcHBlZCBkdXJpbmcgcmVjb25jaWxlLiBJbiBjYXNlIG9mIFNFTGludXggcHJvZmlsZXMsXG5yZWNvbmNpbGUgY2FuIHRha2UgYSBzaWduaWZpY2FudCBhbW91bnQgb2YgdGltZSBhbmQgZm9yIGFsbCBwcm9maWxlcyBtaWdodCBub3QgYmUgbmVlZGVkLlxuVGhpcyBEZWZhdWx0cyB0byBmYWxzZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBvZiBvYmplY3QgdG8gYmUgcmVjb3JkZWQuIiwiZW51bSI6WyJTZWNjb21wUHJvZmlsZSIsIlNlbGludXhQcm9maWxlIiwiQXBwYXJtb3JQcm9maWxlIl0sInR5cGUiOiJzdHJpbmcifSwibWVyZ2VTdHJhdGVneSI6eyJkZWZhdWx0Ijoibm9uZSIsImRlc2NyaXB0aW9uIjoiV2hldGhlciBvciBob3cgdG8gbWVyZ2UgcmVjb3JkZWQgcHJvZmlsZXMuIENhbiBiZSBvbmUgb2YgXCJub25lXCIgb3IgXCJjb250YWluZXJzXCIuXG5EZWZhdWx0IGlzIFwibm9uZVwiLiIsImVudW0iOlsibm9uZSIsImNvbnRhaW5lcnMiXSwidHlwZSI6InN0cmluZyJ9LCJwb2RTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlBvZFNlbGVjdG9yIHNlbGVjdHMgdGhlIHBvZHMgdG8gcmVjb3JkLiBUaGlzIGZpZWxkIGZvbGxvd3Mgc3RhbmRhcmRcbmxhYmVsIHNlbGVjdG9yIHNlbWFudGljcy4gQW4gZW1wdHkgcG9kU2VsZWN0b3IgbWF0Y2hlcyBhbGwgcG9kcyBpbiB0aGlzXG5uYW1lc3BhY2UuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJyZWNvcmRlciI6eyJkZXNjcmlwdGlvbiI6IlJlY29yZGVyIHRvIGJlIHVzZWQuIiwiZW51bSI6WyJicGYiLCJsb2dzIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJwb2RTZWxlY3RvciIsInJlY29yZGVyIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUHJvZmlsZVJlY29yZGluZ1N0YXR1cyBjb250YWlucyBzdGF0dXMgb2YgdGhlIFByb2ZpbGVSZWNvcmRpbmcuIiwicHJvcGVydGllcyI6eyJhY3RpdmVXb3JrbG9hZHMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE3LjIifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoicmF3c2VsaW51eHByb2ZpbGVzLnNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyIsIm5hbWVzIjp7ImtpbmQiOiJSYXdTZWxpbnV4UHJvZmlsZSIsImxpc3RLaW5kIjoiUmF3U2VsaW51eFByb2ZpbGVMaXN0IiwicGx1cmFsIjoicmF3c2VsaW51eHByb2ZpbGVzIiwic2luZ3VsYXIiOiJyYXdzZWxpbnV4cHJvZmlsZSJ9LCJzY29wZSI6IkNsdXN0ZXIiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMudXNhZ2UiLCJuYW1lIjoiVXNhZ2UiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdHVzIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGEyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlJhd1NlbGludXhQcm9maWxlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSByYXdzZWxpbnV4cHJvZmlsZXMgQVBJLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlJhd1NlbGludXhQcm9maWxlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFJhd1NlbGludXhQcm9maWxlLiIsInByb3BlcnRpZXMiOnsiZGlzYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hldGhlciB0aGUgcHJvZmlsZSBpcyBkaXNhYmxlZCBhbmQgc2hvdWxkIGJlIHNraXBwZWQgZHVyaW5nIHJlY29uY2lsaWF0aW9uLiIsInR5cGUiOiJib29sZWFuIn0sInBvbGljeSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlNlbGludXhQcm9maWxlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFNlbGludXhQcm9maWxlLiIsInByb3BlcnRpZXMiOnsiYWN0aXZlV29ya2xvYWRzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIG9mIHRoZSByZXNvdXJjZS4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgQ29uZGl0aW9uIHRoYXQgbWF5IGFwcGx5IHRvIGEgcmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGlzIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmVcbnN0YXR1cyB0byBhbm90aGVyLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6IkEgTWVzc2FnZSBjb250YWluaW5nIGRldGFpbHMgYWJvdXQgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbVxub25lIHN0YXR1cyB0byBhbm90aGVyLCBpZiBhbnkuIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJBIFJlYXNvbiBmb3IgdGhpcyBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24gZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgb2YgdGhpcyBjb25kaXRpb247IGlzIGl0IGN1cnJlbnRseSBUcnVlLCBGYWxzZSwgb3IgVW5rbm93bj8iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoaXMgY29uZGl0aW9uLiBBdCBtb3N0IG9uZSBvZiBlYWNoIGNvbmRpdGlvbiB0eXBlIG1heSBhcHBseSB0b1xuYSByZXNvdXJjZSBhdCBhbnkgcG9pbnQgaW4gdGltZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVTdGF0ZSBkZWZpbmVzIHRoZSBzdGF0ZSB0aGF0IHRoZSBwcm9maWxlIGlzIGluLiBBIHByb2ZpbGUgaW4gdGhpcyBjb250ZXh0XG5yZWZlcnMgdG8gYSBTZWNjb21wUHJvZmlsZSBvciBhIFNFTGludXggcHJvZmlsZSwgdGhlIHN0YXRlcyBhcmUgc2hhcmVkIGJldHdlZW4gdGhlbVxuYXMgd2VsbCBhcyB0aGUgbWFuYWdlbWVudCBBUEkuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2FnZSI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgdGhlIHN0cmluZyB0aGF0IHRoZSBTZWxpbnV4UHJvZmlsZSBvYmplY3QgY2FuIGJlXG5yZWZlcmVuY2VkIGFzIGluIGEgcG9kIHNlTGludXhPcHRpb25zIHNlY3Rpb24uIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwb2QifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRoZW50aWNhdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInN1YmplY3RhY2Nlc3NyZXZpZXdzIiwidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibm9kZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbImFwcGFybW9ycHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbImFwcGFybW9ycHJvZmlsZXMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJkZWxldGUiLCJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyJdLCJyZXNvdXJjZXMiOlsiYXBwYXJtb3Jwcm9maWxlcy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGVyZWNvcmRpbmdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJyYXdzZWxpbnV4cHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInJhd3NlbGludXhwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJyYXdzZWxpbnV4cHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWNjb21wcHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY2NvbXBwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWNjb21wcHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWN1cml0eXByb2ZpbGVub2Rlc3RhdHVzZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY3VyaXR5cHJvZmlsZXNvcGVyYXRvcmRhZW1vbnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWxpbnV4cHJvZmlsZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlbGludXhwcm9maWxlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWxpbnV4cHJvZmlsZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby13ZWJob29rIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJldmVudHMiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGViaW5kaW5ncyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci54LWs4cy5pbyJdLCJyZXNvdXJjZXMiOlsicHJvZmlsZWJpbmRpbmdzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsiZGVsZXRlIiwiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGViaW5kaW5ncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInByb2ZpbGVyZWNvcmRpbmdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJwcm9maWxlcmVjb3JkaW5ncy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yLngtazhzLmlvIl0sInJlc291cmNlcyI6WyJwcm9maWxlcmVjb3JkaW5ncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlY2NvbXBwcm9maWxlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IueC1rOHMuaW8iXSwicmVzb3VyY2VzIjpbInNlbGludXhwcm9maWxlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby1tZXRyaWNzLWNsaWVudCJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9tZXRyaWNzIiwiL21ldHJpY3Mtc3BvZCJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJwb2RzIiwic2VydmljZXMiLCJlbmRwb2ludHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8tbWV0cmljcy1jbGllbnQifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJuYW1lIjoic3BvLW1ldHJpY3MtY2xpZW50In0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoiZGVmYXVsdCIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1zZWN1cml0eS1wcm9maWxlcyJ9LHsia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8td2ViaG9vayJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm5hbWUiOiJzcG8td2ViaG9vayJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InNwby13ZWJob29rIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LXNlY3VyaXR5LXByb2ZpbGVzIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG9kIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibmFtZSI6InNwb2QifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJzcG9kIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LXNlY3VyaXR5LXByb2ZpbGVzIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic3BvLXdlYmhvb2sifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJjb29yZGluYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJsZWFzZXMiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbImNvb3JkaW5hdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VOYW1lcyI6WyJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvci13ZWJob29rLWxvY2siXSwicmVzb3VyY2VzIjpbImxlYXNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInNlY3VyaXR5Y29udGV4dGNvbnN0cmFpbnRzIl0sInZlcmJzIjpbInVzZSJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAiOiJzZWN1cml0eS1wcm9maWxlcy1vcGVyYXRvciJ9LCJuYW1lIjoic3BvZCJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbInNlY3VyaXR5Lm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsic2VjdXJpdHljb250ZXh0Y29uc3RyYWludHMiXSwidmVyYnMiOlsidXNlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwb2QifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiUm9sZSIsIm5hbWUiOiJzcG9kIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoic3BvZCIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1zZWN1cml0eS1wcm9maWxlcyJ9XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoic2VjdXJpdHktcHJvZmlsZXMtb3BlcmF0b3IifSwibmFtZSI6InNwby13ZWJob29rIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IlJvbGUiLCJuYW1lIjoic3BvLXdlYmhvb2sifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJzcG8td2ViaG9vayJ9XX0=
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VjcmV0IiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsia3ViZXJuZXRlcy5pby9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRlZmF1bHQifSwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJtZXRyaWNzLXRva2VuIn0sInR5cGUiOiJrdWJlcm5ldGVzLmlvL3NlcnZpY2UtYWNjb3VudC10b2tlbiJ9
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG8td2ViaG9vayJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6InNlY3VyaXR5LXByb2ZpbGVzLW9wZXJhdG9yIn0sIm5hbWUiOiJzcG9kIn19
relatedImages:
  - image: registry.redhat.io/compliance/openshift-security-profiles-operator-bundle@sha256:40771028def743730a779736ab7465113645edd9e1d45cb7e69eaaf95531584b
    name: ""
  - image: registry.redhat.io/compliance/openshift-security-profiles-rhel8-operator@sha256:e912f838be589fdb4defa2f5e64d923bbf97ac74b565b379ede9584793ba9cae
    name: ""
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel8@sha256:dd4eae036256ee75808d38b12e197be7c97186019f2830ef12e0f645c202286f
    name: selinuxd
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel8@sha256:dd4eae036256ee75808d38b12e197be7c97186019f2830ef12e0f645c202286f
    name: selinuxd-el8
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel9@sha256:5c5a336c3958d813a9c3597c55d83a3d1026bb73f81bbb2465e25e7d7ec7e65b
    name: selinuxd-el9
  - image: registry.redhat.io/compliance/openshift-selinuxd-rhel9@sha256:5c5a336c3958d813a9c3597c55d83a3d1026bb73f81bbb2465e25e7d7ec7e65b
    name: selinuxd-fedora
schema: olm.bundle
